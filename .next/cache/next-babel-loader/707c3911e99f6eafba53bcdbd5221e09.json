{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, StrictMode } from 'react';\nimport Layout from '../Component/Layout';\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection';\nimport Artical from '../Component/Artical/Artical';\nimport { POST_QUERY } from \"../Component/graphalQurey\";\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport { client } from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\nimport Error from 'next/error';\nexport default function Index({\n  getData,\n  err\n}) {\n  //  const {data} = getData\n  // const {posts} = data\n  // console.log(error, 'errorTake error')\n  // if (error) {\n  //   return <Error statusCode={errorCode} />\n  // }\n  // console.log(data , ' data ')\n  return __jsx(Grid, {\n    component: \"article\",\n    container: true\n  });\n}\nexport const getServerSideProps = async context => {\n  try {\n    const getData = await client.query({\n      query: POST_QUER\n    });\n    const json = await getData.json();\n    return {\n      props: {\n        data: json.stargazers_count\n      }\n    };\n  } catch (error) {\n    console.log(error);\n\n    if (context.res) {\n      context.res.writeHead(err.status);\n    }\n\n    return {\n      err: {\n        statusCode: err.status\n      }\n    };\n  }\n};","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/index.js"],"names":["React","Component","StrictMode","Layout","Grid","MainSection","Artical","POST_QUERY","Myapp","Head","client","ErrorBoundaries","Error","Index","getData","err","getServerSideProps","context","query","POST_QUER","json","props","data","stargazers_count","error","console","log","res","writeHead","status","statusCode"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAAQC,UAAR,QAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,MAAR,QAAqB,4BAArB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,OAAOC,KAAP,MAAkB,YAAlB;AAGA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,OAAD;AAASC,EAAAA;AAAT,CAAf,EAA8B;AACzC;AACA;AAEA;AACA;AACA;AACA;AACJ;AACE,SACY,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,SAAhB;AAA0B,IAAA,SAAS;AAAnC,IADZ;AAgBD;AAGD,OAAO,MAAOC,kBAAkB,GAAI,MAAOC,OAAP,IAAkB;AACpD,MAAG;AACE,UAAMH,OAAO,GAAE,MAAMJ,MAAM,CAACQ,KAAP,CAAc;AAChCA,MAAAA,KAAK,EAACC;AAD0B,KAAd,CAArB;AAGC,UAAMC,IAAI,GAAG,MAAMN,OAAO,CAACM,IAAR,EAAnB;AACA,WAAO;AACLC,MAAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAAEF,IAAI,CAACG;AAAZ;AADF,KAAP;AAIH,GATH,CAUE,OAAMC,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,QAAIP,OAAO,CAACU,GAAZ,EAAiB;AACfV,MAAAA,OAAO,CAACU,GAAR,CAAYC,SAAZ,CAAsBb,GAAG,CAACc,MAA1B;AACD;;AACD,WAAO;AAAEd,MAAAA,GAAG,EAAE;AAAEe,QAAAA,UAAU,EAAEf,GAAG,CAACc;AAAlB;AAAP,KAAP;AAEH;AAEF,CApBM","sourcesContent":["\nimport React, { Component , StrictMode } from 'react';\nimport Layout from '../Component/Layout'\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection'\nimport Artical from '../Component/Artical/Artical'\nimport {POST_QUERY} from \"../Component/graphalQurey\"\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport {client} from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\n\nimport Error from 'next/error'\n\n\nexport default function Index({getData,err}) {\n    //  const {data} = getData\n    // const {posts} = data\n\n    // console.log(error, 'errorTake error')\n    // if (error) {\n    //   return <Error statusCode={errorCode} />\n    // }\n// console.log(data , ' data ')\n  return (\n              <Grid component='article' container >\n                  {\n                    // posts.edges.map(\n                    //   (post, i) =>{\n                    //         if(i === 0 ){\n                    //           return <MainSection key={post.node.id} post={post} />\n                    //         } else {\n                    //           return <Artical key={post.node.id}  post={post} />   \n                    //         }\n                    //     }\n                    // )\n                  }\n              </Grid>\n   \n  )\n}\n\n\nexport const  getServerSideProps =  async (context) =>{\n  try{\n       const getData= await client.query(({\n          query:POST_QUER   \n        }))   \n        const json = await getData.json()\n        return {\n          props: {data: json.stargazers_count}\n        }\n\n    }\n    catch(error) {\n      console.log(error)\n      if (context.res) {\n        context.res.writeHead(err.status)\n      }\n      return { err: { statusCode: err.status } }\n      \n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}