{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { Component, StrictMode } from 'react';\nimport Layout from '../Component/Layout';\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection';\nimport Artical from '../Component/Artical/Artical';\nimport { POST_QUERY } from \"../Component/graphalQurey\";\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport { client } from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\nexport default function Index(props) {\n  var getData = props.getData;\n  var data = getData.data;\n  var posts = data.posts;\n  return __jsx(Grid, {\n    container: true\n  }, posts.edges.map(function (post, i) {\n    if (i === 0) {\n      return __jsx(MainSection, {\n        key: post.node.id,\n        post: post\n      });\n    } else {\n      return __jsx(Artical, {\n        key: post.node.id,\n        post: post\n      });\n    }\n  }));\n}\n\nIndex.getInitialProps = function _callee(context) {\n  var getData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(client.query({\n            query: POST_QUERY\n          }));\n\n        case 3:\n          getData = _context.sent;\n          return _context.abrupt(\"return\", {\n            getData: getData\n          });\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};","map":null,"metadata":{},"sourceType":"module"}