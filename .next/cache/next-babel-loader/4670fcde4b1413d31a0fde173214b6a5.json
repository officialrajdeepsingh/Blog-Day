{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, StrictMode } from 'react';\nimport Layout from '../Component/Layout';\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection';\nimport Artical from '../Component/Artical/Artical';\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\nimport Error from 'next/error';\nimport { NextSeo } from 'next-seo';\nexport var __N_SSP = true;\nexport default function Index(_ref) {\n  var getData = _ref.getData,\n      statusCode = _ref.statusCode;\n  var data = getData.data;\n  var posts = data.posts;\n  console.log(statusCode, 'errorTake error');\n\n  if (statusCode) {\n    return __jsx(Error, {\n      statusCode: statusCode\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(NextSeo, {\n    title: \"Using More of Config\",\n    description: \"This example uses more of the available config options.\",\n    canonical: \"https://www.canonical.ie/\",\n    openGraph: {\n      url: 'https://www.rajdeepsingh.dev/',\n      title: '',\n      description: 'Open Graph Description',\n      images: [{\n        url: 'https://www.example.ie/og-image-01.jpg',\n        width: 800,\n        height: 600,\n        alt: 'Og Image Alt'\n      }, {\n        url: 'https://www.example.ie/og-image-02.jpg',\n        width: 900,\n        height: 800,\n        alt: 'Og Image Alt Second'\n      }, {\n        url: 'https://www.example.ie/og-image-03.jpg'\n      }, {\n        url: 'https://www.example.ie/og-image-04.jpg'\n      }],\n      site_name: 'SiteName'\n    },\n    twitter: {\n      handle: '@handle',\n      site: '@site',\n      cardType: 'summary_large_image'\n    }\n  }), __jsx(Grid, {\n    component: \"article\",\n    container: true\n  }, posts.edges.map(function (post, i) {\n    if (i === 0) {\n      return __jsx(MainSection, {\n        key: post.node.id,\n        post: post\n      });\n    } else {\n      return __jsx(Artical, {\n        key: post.node.id,\n        post: post\n      });\n    }\n  })));\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/index.js"],"names":["React","Component","StrictMode","Layout","Grid","MainSection","Artical","Myapp","Head","ErrorBoundaries","Error","NextSeo","Index","getData","statusCode","data","posts","console","log","url","title","description","images","width","height","alt","site_name","handle","site","cardType","edges","map","post","i","node","id"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,OAAT,QAAwB,UAAxB;;AAGA,eAAe,SAASC,KAAT,OAAqC;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAbC,UAAa,QAAbA,UAAa;AAAA,MACxCC,IADwC,GAChCF,OADgC,CACxCE,IADwC;AAAA,MAEzCC,KAFyC,GAEhCD,IAFgC,CAEzCC,KAFyC;AAIhDC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ,EAAwB,iBAAxB;;AACA,MAAIA,UAAJ,EAAgB;AACd,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAEA;AAAnB,MAAP;AACD;;AACH,SACE,4BACa,MAAC,OAAD;AACX,IAAA,KAAK,EAAC,sBADK;AAEX,IAAA,WAAW,EAAC,yDAFD;AAGX,IAAA,SAAS,EAAC,2BAHC;AAIX,IAAA,SAAS,EAAE;AACTK,MAAAA,GAAG,EAAE,+BADI;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,WAAW,EAAE,wBAHJ;AAITC,MAAAA,MAAM,EAAE,CACN;AACEH,QAAAA,GAAG,EAAE,wCADP;AAEEI,QAAAA,KAAK,EAAE,GAFT;AAGEC,QAAAA,MAAM,EAAE,GAHV;AAIEC,QAAAA,GAAG,EAAE;AAJP,OADM,EAON;AACEN,QAAAA,GAAG,EAAE,wCADP;AAEEI,QAAAA,KAAK,EAAE,GAFT;AAGEC,QAAAA,MAAM,EAAE,GAHV;AAIEC,QAAAA,GAAG,EAAE;AAJP,OAPM,EAaN;AAAEN,QAAAA,GAAG,EAAE;AAAP,OAbM,EAcN;AAAEA,QAAAA,GAAG,EAAE;AAAP,OAdM,CAJC;AAoBTO,MAAAA,SAAS,EAAE;AApBF,KAJA;AA0BX,IAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,SADD;AAEPC,MAAAA,IAAI,EAAE,OAFC;AAGPC,MAAAA,QAAQ,EAAE;AAHH;AA1BE,IADb,EAgCU,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,SAAhB;AAA0B,IAAA,SAAS;AAAnC,KAEMb,KAAK,CAACc,KAAN,CAAYC,GAAZ,CACE,UAACC,IAAD,EAAOC,CAAP,EAAY;AACN,QAAGA,CAAC,KAAK,CAAT,EAAY;AACV,aAAO,MAAC,WAAD;AAAa,QAAA,GAAG,EAAED,IAAI,CAACE,IAAL,CAAUC,EAA5B;AAAgC,QAAA,IAAI,EAAEH;AAAtC,QAAP;AACD,KAFD,MAEO;AACL,aAAO,MAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,IAAI,CAACE,IAAL,CAAUC,EAAxB;AAA6B,QAAA,IAAI,EAAEH;AAAnC,QAAP;AACD;AACJ,GAPL,CAFN,CAhCV,CADF;AAiDD","sourcesContent":["\nimport React, { Component , StrictMode } from 'react';\nimport Layout from '../Component/Layout'\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection'\nimport Artical from '../Component/Artical/Artical'\nimport {POST_QUERY} from \"../Component/graphalQurey\"\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport {client} from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\n\nimport Error from 'next/error'\nimport { NextSeo } from 'next-seo';\n\n\nexport default function Index({getData,statusCode}) {\n     const {data} = getData\n    const {posts} = data\n\n    console.log(statusCode, 'errorTake error')\n    if (statusCode) {\n      return <Error statusCode={statusCode} />\n    }\n  return (\n    <>\n                 <NextSeo\n      title=\"Using More of Config\"\n      description=\"This example uses more of the available config options.\"\n      canonical=\"https://www.canonical.ie/\"\n      openGraph={{\n        url: 'https://www.rajdeepsingh.dev/',\n        title: '',\n        description: 'Open Graph Description',\n        images: [\n          {\n            url: 'https://www.example.ie/og-image-01.jpg',\n            width: 800,\n            height: 600,\n            alt: 'Og Image Alt',\n          },\n          {\n            url: 'https://www.example.ie/og-image-02.jpg',\n            width: 900,\n            height: 800,\n            alt: 'Og Image Alt Second',\n          },\n          { url: 'https://www.example.ie/og-image-03.jpg' },\n          { url: 'https://www.example.ie/og-image-04.jpg' },\n        ],\n        site_name: 'SiteName',\n      }}\n      twitter={{\n        handle: '@handle',\n        site: '@site',\n        cardType: 'summary_large_image',\n      }} />\n              <Grid component='article' container >\n                  {\n                    posts.edges.map(\n                      (post, i) =>{\n                            if(i === 0 ){\n                              return <MainSection key={post.node.id} post={post} />\n                            } else {\n                              return <Artical key={post.node.id}  post={post} />   \n                            }\n                        }\n                    )\n                  }\n              </Grid>\n      </>\n   \n  )\n}\n\n\nexport const  getServerSideProps =  async ({res}) =>{\n  \n      try{ \n        const getData=await client.query(({\n          query:POST_QUERY\n        }))\n        return {\n          props: {getData}\n        }\n      }\n        catch(error){\n             console.log(error)     \n             return { props: { statusCode: 404 } }\n          }\n      \n      \n  }\n"]},"metadata":{},"sourceType":"module"}