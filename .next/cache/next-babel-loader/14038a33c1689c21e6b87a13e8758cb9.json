{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport ReactMde from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport gql from 'graphql-tag';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Button from '@material-ui/core/Button';\nimport style from '../css/Comments.module.scss';\nimport { request } from 'graphql-request';\nimport { COMMENT_MUTATION } from \"../graphalQurey\";\nimport useSWR from 'swr';\n\nconst signUP = input => {\n  return request('https://www.rajdeepsingh.dev/graphql', COMMENT_MUTATION, input);\n}; // const fetcher = query => request('https://api.graph.cool/simple/v1/movies', query)\n\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props));\n}\n\nexport default function CommentEditor(props) {\n  const [value, setValue] = React.useState();\n  const [fetchdata, setFetchdata] = React.useState(false);\n  const [selectedTab, setSelectedTab] = React.useState(\"write\"); //  const { data } = useSWR(isReady ? '/api/user' : null, fetcher, { suspense: true })\n\n  const {\n    data,\n    error\n  } = useSWR(fetchdata ? COMMENT_MUTATION : null, signUP({\n    \"input\": {\n      \"content\": value,\n      \"author\": displayName,\n      \"userId\": userId,\n      \"clientMutationId\": \"createComment\",\n      \"commentOn\": props.postid\n    }\n  }));\n  const [open, setOpen] = React.useState(true);\n  const converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true\n  });\n\n  const submitComment = e => {\n    e.preventDefault();\n    setReturndata(true);\n    const userId = localStorage.getItem(\"userId\");\n    const displayName = localStorage.getItem(\"displayName\");\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  console.log(returndata, 'returndata ');\n  return __jsx(\"div\", {\n    key: props.keyId,\n    className: \"container\"\n  }, __jsx(\"form\", {\n    onSubmit: submitComment\n  }, __jsx(ReactMde, {\n    value: value,\n    onChange: setValue,\n    selectedTab: selectedTab,\n    onTabChange: setSelectedTab,\n    generateMarkdownPreview: markdown => Promise.resolve(converter.makeHtml(markdown)),\n    childProps: {\n      writeButton: {\n        tabIndex: -1\n      }\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    className: style.productButton,\n    size: \"small\"\n  }, \"Submit\")), returndata ? __jsx(Snackbar, {\n    open: open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 6000,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    severity: \"success\"\n  }, returndata)) : '');\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/Component/CommentEditor/CommentEditor.js"],"names":["React","ReactMde","Showdown","gql","Snackbar","MuiAlert","Button","style","request","COMMENT_MUTATION","useSWR","signUP","input","Alert","props","CommentEditor","value","setValue","useState","fetchdata","setFetchdata","selectedTab","setSelectedTab","data","error","displayName","userId","postid","open","setOpen","converter","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","submitComment","e","preventDefault","setReturndata","localStorage","getItem","handleClose","console","log","returndata","keyId","markdown","Promise","resolve","makeHtml","writeButton","tabIndex","productButton","vertical","horizontal"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAAQC,gBAAR,QAA+B,iBAA/B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,SAAQJ,OAAO,CAAC,sCAAD,EAAyCC,gBAAzC,EAA2DG,KAA3D,CAAf;AACD,CAFD,C,CAIA;;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,SAAO,MAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C,EAAP;AACD;;AAGF,eAAgB,SAASC,aAAT,CAAuBD,KAAvB,EAA8B;AAC7C,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBjB,KAAK,CAACkB,QAAN,EAA1B;AACE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA8BpB,KAAK,CAACkB,QAAN,CAAe,KAAf,CAApC;AAEA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCtB,KAAK,CAACkB,QAAN,CAAe,OAAf,CAAtC,CAJ2C,CAK3C;;AAEF,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBd,MAAM,CAAES,SAAS,GAAEV,gBAAF,GAAqB,IAAhC,EAAuCE,MAAM,CAAE;AAC5C,aAAQ;AACA,iBAAWK,KADX;AAEA,gBAAUS,WAFV;AAGA,gBAASC,MAHT;AAIA,0BAAoB,eAJpB;AAKA,mBAAaZ,KAAK,CAACa;AALnB;AADoC,GAAF,CAA7C,CAA/B;AAeE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB7B,KAAK,CAACkB,QAAN,CAAe,IAAf,CAAxB;AAEA,QAAMY,SAAS,GAAG,IAAI5B,QAAQ,CAAC6B,SAAb,CAAuB;AACvCC,IAAAA,MAAM,EAAE,IAD+B;AAEvCC,IAAAA,kBAAkB,EAAE,IAFmB;AAGvCC,IAAAA,aAAa,EAAE,IAHwB;AAIvCC,IAAAA,SAAS,EAAE;AAJ4B,GAAvB,CAAlB;;AAOA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACIC,IAAAA,aAAa,CAAC,IAAD,CAAb;AAEA,UAAMb,MAAM,GAAEc,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAd;AACD,UAAMhB,WAAW,GAAEe,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAnB;AAEF,GAPL;;AASC,QAAMC,WAAW,GAAG,MAAM;AACtBb,IAAAA,OAAO,CAAC,KAAD,CAAP;AACF,GAFF;;AAIAc,EAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ,EAAuB,aAAvB;AACD,SACE;AAAK,IAAA,GAAG,EAAE/B,KAAK,CAACgC,KAAhB;AAAuB,IAAA,SAAS,EAAC;AAAjC,KAEE;AAAM,IAAA,QAAQ,EAAEV;AAAhB,KAEE,MAAC,QAAD;AACE,IAAA,KAAK,EAAEpB,KADT;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,IAAA,WAAW,EAAEI,WAHf;AAIE,IAAA,WAAW,EAAEC,cAJf;AAKE,IAAA,uBAAuB,EAAEyB,QAAQ,IAC/BC,OAAO,CAACC,OAAR,CAAgBnB,SAAS,CAACoB,QAAV,CAAmBH,QAAnB,CAAhB,CANJ;AAQE,IAAA,UAAU,EAAE;AACVI,MAAAA,WAAW,EAAE;AACXC,QAAAA,QAAQ,EAAE,CAAC;AADA;AADH;AARd,IAFF,EAkBI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAE7C,KAAK,CAAC8C,aAAvC;AAAsD,IAAA,IAAI,EAAC;AAA3D,cAlBJ,CAFF,EA0BOR,UAAD,GAAe,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEjB,IAAhB;AAAsB,IAAA,YAAY,EAC7C;AAAK0B,MAAAA,QAAQ,EAAE,KAAf;AACIC,MAAAA,UAAU,EAAE;AADhB,KADW;AAIX,IAAA,gBAAgB,EAAE,IAJP;AAIa,IAAA,OAAO,EAAEb;AAJtB,KAKT,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,WAAhB;AAA6B,IAAA,QAAQ,EAAC;AAAtC,KACOG,UADP,CALS,CAAf,GAQgB,EAlCtB,CADF;AA0CD","sourcesContent":["import React from 'react'\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport gql from 'graphql-tag';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport style from '../css/Comments.module.scss'\r\nimport { request } from 'graphql-request';\r\nimport {COMMENT_MUTATION} from \"../graphalQurey\"\r\nimport useSWR from 'swr'\r\n\r\n\r\nconst signUP = (input) => {\r\n  return  request('https://www.rajdeepsingh.dev/graphql', COMMENT_MUTATION, input);\r\n};\r\n\r\n// const fetcher = query => request('https://api.graph.cool/simple/v1/movies', query)\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  \r\n export default  function CommentEditor(props) {\r\n  const [value, setValue] = React.useState();\r\n    const [fetchdata, setFetchdata  ] = React.useState(false);\r\n    \r\n    const [selectedTab, setSelectedTab] = React.useState(\"write\");\r\n    //  const { data } = useSWR(isReady ? '/api/user' : null, fetcher, { suspense: true })\r\n\r\n  const { data, error } =  useSWR( fetchdata? COMMENT_MUTATION : null , signUP( {\r\n                                    \"input\":{\r\n                                            \"content\": value,\r\n                                            \"author\": displayName, \r\n                                            \"userId\":userId,\r\n                                            \"clientMutationId\": \"createComment\",\r\n                                            \"commentOn\": props.postid\r\n                                    }\r\n                                  }  \r\n                                ) \r\n)\r\n \r\n\r\n  \r\n    \r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const converter = new Showdown.Converter({\r\n      tables: true,\r\n      simplifiedAutoLink: true,\r\n      strikethrough: true,\r\n      tasklists: true\r\n    });\r\n\r\n    const submitComment=  (e) => {\r\n        e.preventDefault();          \r\n            setReturndata(true)   \r\n            \r\n            const userId= localStorage.getItem(\"userId\")\r\n           const displayName= localStorage.getItem(\"displayName\");\r\n\r\n        }\r\n      \r\n     const handleClose = () => {      \r\n         setOpen(false);\r\n      };\r\n       \r\n     console.log(returndata,'returndata ')\r\n    return (\r\n      <div key={props.keyId} className=\"container\">\r\n        \r\n        <form onSubmit={submitComment} > \r\n  \r\n          <ReactMde\r\n            value={value}\r\n            onChange={setValue}\r\n            selectedTab={selectedTab}\r\n            onTabChange={setSelectedTab}\r\n            generateMarkdownPreview={markdown =>\r\n              Promise.resolve(converter.makeHtml(markdown))\r\n            }\r\n            childProps={{\r\n              writeButton: {\r\n                tabIndex: -1\r\n              }\r\n            }}\r\n  \r\n          />\r\n  \r\n            <Button type=\"submit\" className={style.productButton} size=\"small\">\r\n                             Submit  \r\n            </Button>\r\n        </form>\r\n      \r\n        {\r\n            (returndata) ? <Snackbar open={open} anchorOrigin={ \r\n                {    vertical: 'top', \r\n                    horizontal: 'center' }\r\n                } \r\n                autoHideDuration={6000} onClose={handleClose}>\r\n                  <Alert onClose={handleClose} severity=\"success\">\r\n                        {returndata} \r\n                  </Alert>\r\n              </Snackbar> : ''\r\n        \r\n        }\r\n\r\n       \r\n      </div>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}