{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache, IntrospectionFragmentMatcher } from 'apollo-cache-inmemory'; // import withApollo from 'next-with-apollo';\n\nimport { createHttpLink } from 'apollo-link-http';\nimport fetch from 'isomorphic-unfetch';\nimport introspectionQueryResultData from '../fragmentTypes.json';\nimport { HttpLink } from \"apollo-link-http\"; // whats  that fragmentMatcher read here >>  https://medium.com/@jacky_ttt/day121-warning-heuristic-fragment-matching-going-on-8208b584cb5e\n\nvar fragmentMatcher = new IntrospectionFragmentMatcher({\n  introspectionQueryResultData: introspectionQueryResultData\n});\nvar cache = new InMemoryCache({\n  fragmentMatcher: fragmentMatcher\n}); // const customFetch = (uri, options) => {\n//   const { operationName } = JSON.parse(options.body);\n//   return fetch(`${uri}/graph/graphql?opname=${operationName}`, options);\n// };\n// const link = createHttpLink({ fetch: customFetch });\n\nvar link = new HttpLink({\n  fetch: fetch,\n  uri: \"https://www.rajdeepsingh.dev/graphql\",\n  credentials: 'same-origin',\n  fetchOptions: {\n    mode: 'no-cors'\n  },\n  headers: {\n    'Access-Control-Allow-Credentials': true,\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n});\nexport var client = new ApolloClient({\n  cache: cache,\n  link: link\n});","map":{"version":3,"sources":["D:/Nextjs/old-app/Component/apollo-client.js"],"names":["ApolloClient","InMemoryCache","IntrospectionFragmentMatcher","createHttpLink","fetch","introspectionQueryResultData","HttpLink","fragmentMatcher","cache","link","uri","credentials","fetchOptions","mode","headers","client"],"mappings":"AAAC,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,EAAyBC,4BAAzB,QAA6D,uBAA7D,C,CACD;;AACC,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACD,OAAOC,4BAAP,MAAyC,uBAAzC;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAGA;;AACA,IAAMC,eAAe,GAAG,IAAIL,4BAAJ,CAAiC;AACvDG,EAAAA,4BAA4B,EAA5BA;AADuD,CAAjC,CAAxB;AAKA,IAAMG,KAAK,GAAG,IAAIP,aAAJ,CAAkB;AAAEM,EAAAA,eAAe,EAAfA;AAAF,CAAlB,CAAd,C,CAEA;AACA;AACA;AACA;AAEA;;AACA,IAAME,IAAI,GAAG,IAAIH,QAAJ,CAAa;AACxBF,EAAAA,KAAK,EAALA,KADwB;AAExBM,EAAAA,GAAG,EAAE,sCAFmB;AAGxBC,EAAAA,WAAW,EAAE,aAHW;AAItBC,EAAAA,YAAY,EAAC;AACXC,IAAAA,IAAI,EAAE;AADK,GAJS;AAOtBC,EAAAA,OAAO,EAAE;AACP,wCAAoC,IAD7B;AAEP,oBAAgB,kBAFT;AAGR,mCAA+B;AAHvB;AAPa,CAAb,CAAb;AAeA,OAAO,IAAMC,MAAM,GAAG,IAAIf,YAAJ,CAAiB;AACrCQ,EAAAA,KAAK,EAALA,KADqC;AAErCC,EAAAA,IAAI,EAAJA;AAFqC,CAAjB,CAAf","sourcesContent":[" import { ApolloClient } from 'apollo-client';\r\n import { InMemoryCache , IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';\r\n// import withApollo from 'next-with-apollo';\r\n import { createHttpLink } from 'apollo-link-http';\r\n import fetch from 'isomorphic-unfetch';\r\nimport introspectionQueryResultData from '../fragmentTypes.json';\r\nimport { HttpLink } from \"apollo-link-http\";\r\n\r\n\r\n// whats  that fragmentMatcher read here >>  https://medium.com/@jacky_ttt/day121-warning-heuristic-fragment-matching-going-on-8208b584cb5e\r\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\r\n  introspectionQueryResultData\r\n});\r\n\r\n\r\nconst cache = new InMemoryCache({ fragmentMatcher });\r\n\r\n// const customFetch = (uri, options) => {\r\n//   const { operationName } = JSON.parse(options.body);\r\n//   return fetch(`${uri}/graph/graphql?opname=${operationName}`, options);\r\n// };\r\n\r\n// const link = createHttpLink({ fetch: customFetch });\r\nconst link = new HttpLink({\r\n  fetch,\r\n  uri: \"https://www.rajdeepsingh.dev/graphql\",\r\n  credentials: 'same-origin',\r\n    fetchOptions:{\r\n      mode: 'no-cors',\r\n    },\r\n    headers: {\r\n      'Access-Control-Allow-Credentials': true,\r\n      'Content-Type': 'application/json',\r\n     'Access-Control-Allow-Origin': '*',\r\n    } \r\n});\r\n\r\n\r\nexport const client = new ApolloClient({\r\n  cache,\r\n  link\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}