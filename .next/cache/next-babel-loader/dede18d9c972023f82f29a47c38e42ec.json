{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { useRouter } from 'next/router';\nimport { NextSeo } from 'next-seo';\nimport style from '../Component/css/Login.module.scss'; // with SWR and graphql-request\n\nimport { request } from 'graphql-request';\nimport loginImage from '../Component/asset/loginImage.png';\nimport { LOGIN_MUTATION } from \"../Component/graphalQurey\";\n\nconst signIN = userData => {\n  return request('https://www.rajdeepsingh.dev/graphql', LOGIN_MUTATION, userData);\n};\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: props.show\n    }\n  }));\n}\n\nexport default function Login(props) {\n  const router = useRouter(); // signIN\n\n  const [passward, setPassward] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const [userName, setUserName] = React.useState(\"\");\n  const [authdata, setAuthToken] = React.useState({});\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const formSubmit = async event => {\n    event.preventDefault();\n    const data = await signIN({\n      \"username\": userName,\n      \"password\": passward\n    }).then(data => {\n      setAuthToken(() => {\n        return {\n          data\n        };\n      });\n      localStorage.setItem(\"authToken\", data.login.authToken);\n      localStorage.setItem(\"userId\", data.login.user.userId);\n      localStorage.setItem(\"displayName\", data.login.user.username);\n    }).catch(error => {\n      setAuthToken(() => {\n        return {\n          error\n        };\n      });\n    });\n    setOpen(() => {\n      return true;\n    });\n\n    if (!data === \"undefined\") {\n      router.push(\"/\");\n    }\n  };\n\n  const passwardChange = event => {\n    setPassward(event.target.value);\n  };\n\n  const userNameChange = event => {\n    setUserName(event.target.value);\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const ShowAlertError = authdata.error ? authdata.error.response.errors[0].message : 'submit';\n  return __jsx(React.Fragment, null, __jsx(NextSeo, {\n    title: \"Login -- Welcome Back \",\n    description: \"Login  page \"\n  }), __jsx(Container, {\n    className: style.containerBox\n  }, __jsx(Card, {\n    className: style.root\n  }, __jsx(\"div\", {\n    className: style.innerCard\n  }, __jsx(\"div\", {\n    className: style.details\n  }, __jsx(CardContent, {\n    className: style.cardContentInner\n  }, __jsx(Typography, {\n    className: style.typeH5,\n    component: \"h6\",\n    variant: \"h6\"\n  }, \"Welcome Back!\"), __jsx(Typography, {\n    className: style.typeH3,\n    component: \"h3\",\n    variant: \"h2\"\n  }, \"Join With Me\"), __jsx(\"form\", {\n    onSubmit: formSubmit,\n    className: style.form,\n    noValidate: true,\n    autoComplete: \"on\"\n  }, __jsx(React.Fragment, null, __jsx(TextField, {\n    onChange: userNameChange,\n    autoComplete: \"username\",\n    id: \"userField\",\n    className: style.textControl,\n    placeholder: \"Enter Your Email Or User Name   \",\n    label: \" Email Or User Name \"\n  }), __jsx(FormControl, {\n    className: style.textControl\n  }, __jsx(InputLabel, {\n    htmlFor: \"LoginPassword\"\n  }, \"Password\"), __jsx(Input, {\n    id: \"LoginPassword\",\n    type: showPassword ? 'text' : 'password',\n    value: passward,\n    onChange: passwardChange,\n    placeholder: \"Enter your Passward\",\n    name: \"password\",\n    autoComplete: \"current-password\",\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword\n    }, showPassword ? __jsx(Visibility, null) : __jsx(VisibilityOff, null)))\n  })), __jsx(Button, {\n    type: \"submit\",\n    className: style.productButton,\n    size: \"small\"\n  }, \"Submit\")))), __jsx(\"div\", {\n    className: style.typeLogin\n  }, __jsx(Typography, {\n    className: style.anchorLink,\n    component: \"h6\",\n    variant: \"h6\"\n  }, \"Signup With Me\"), __jsx(Link, {\n    href: \"/signup\"\n  }, __jsx(\"a\", null, \" Click Here \")))), __jsx(CardMedia, {\n    component: \"img\",\n    alt: \"Login\",\n    image: loginImage,\n    title: \"Login with me\",\n    className: style.cardImage\n  })))), __jsx(Snackbar, {\n    open: open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 60000,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    show: ShowAlertError,\n    severity: authdata.error ? \"error\" : 'success'\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}