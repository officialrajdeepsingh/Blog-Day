{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport style from '../Component/css/Read.module.scss';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { parseISO, format } from 'date-fns';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useRouter } from 'next/router';\nimport ReadCard from \"../Component/Read/ReadCard\";\nimport { NextSeo, BlogJsonLd } from 'next-seo';\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nexport var __N_SSP = true;\nexport default function Read(props) {\n  var getData = props.getData,\n      concerter = props.concerter;\n  var data = getData.data;\n  var post = data.post;\n  var postID = post.id;\n  var date = parseISO(post.date);\n  console.log(post.categories.nodes, ' post.categories.nodes ');\n\n  if (concerter) {\n    return __jsx(Error, {\n      statusCode: concerter\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(NextSeo, {\n    title: post.title,\n    description: post.excerpt\n  }), __jsx(BlogJsonLd, {\n    url: \"https://www.rajdeepsingh.dev/\",\n    title: post.title,\n    images: [post.featuredImage.sourceUrl],\n    datePublished: post.dateGmt,\n    dateModified: post.modifiedGmt,\n    authorName: post.author.name,\n    description: post.excerpt\n  }), __jsx(Head, null, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"wp-block-library-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"wp-block-library-theme-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"icon\",\n    href: post.featuredImage.sourceUrl,\n    type: \"image/x-icon\"\n  })));\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/[Read].js"],"names":["React","Component","style","Typography","Container","CardMedia","Grid","Card","CardActionArea","CardContent","CardActions","parseISO","format","Avatar","useRouter","ReadCard","NextSeo","BlogJsonLd","Link","gql","Head","Read","props","getData","concerter","data","post","postID","id","date","console","log","categories","nodes","title","excerpt","featuredImage","sourceUrl","dateGmt","modifiedGmt","author","name"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,UAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,OAAT,EAAiBC,UAAjB,QAAmC,UAAnC;AAGA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,MAC1BC,OAD0B,GACLD,KADK,CAC1BC,OAD0B;AAAA,MAClBC,SADkB,GACLF,KADK,CAClBE,SADkB;AAAA,MAK3BC,IAL2B,GAKnBF,OALmB,CAK3BE,IAL2B;AAAA,MAO3BC,IAP2B,GAOnBD,IAPmB,CAO3BC,IAP2B;AAQlC,MAAMC,MAAM,GAAED,IAAI,CAACE,EAAnB;AACA,MAAMC,IAAI,GAAGlB,QAAQ,CAACe,IAAI,CAACG,IAAN,CAArB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,UAAL,CAAgBC,KAA5B,EAAmC,yBAAnC;;AAEA,MAAIT,SAAJ,EAAe;AACb,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAEA;AAAnB,MAAP;AACD;;AAIC,SACE,4BACU,MAAC,OAAD;AACI,IAAA,KAAK,EAAEE,IAAI,CAACQ,KADhB;AAEI,IAAA,WAAW,EAAER,IAAI,CAACS;AAFtB,IADV,EAKW,MAAC,UAAD;AACG,IAAA,GAAG,EAAC,+BADP;AAEG,IAAA,KAAK,EAAET,IAAI,CAACQ,KAFf;AAGG,IAAA,MAAM,EAAE,CAACR,IAAI,CAACU,aAAL,CAAmBC,SAApB,CAHX;AAIG,IAAA,aAAa,EAAEX,IAAI,CAACY,OAJvB;AAKG,IAAA,YAAY,EAAEZ,IAAI,CAACa,WALtB;AAMG,IAAA,UAAU,EAAEb,IAAI,CAACc,MAAL,CAAYC,IAN3B;AAOG,IAAA,WAAW,EAAEf,IAAI,CAACS;AAPrB,IALX,EAcK,MAAC,IAAD,QACG;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,EAAE,EAAC,sBAA1B;AAAkD,IAAA,IAAI,EAAC,yFAAvD;AAAiJ,IAAA,KAAK,EAAC;AAAvJ,IADH,EAEG;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,EAAE,EAAC,4BAA1B;AAAwD,IAAA,IAAI,EAAC,yFAA7D;AAAuJ,IAAA,KAAK,EAAC;AAA7J,IAFH,EAGI;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAET,IAAI,CAACU,aAAL,CAAmBC,SAA1C;AAAqD,IAAA,IAAI,EAAC;AAA1D,IAHJ,CAdL,CADF;AA0FH","sourcesContent":["import React,{Component} from 'react';\r\nimport style from '../Component/css/Read.module.scss'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { parseISO, format } from 'date-fns'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {POST_READ} from \"../Component/graphalQurey\"\r\nimport { useRouter } from 'next/router'\r\nimport {client} from \"../Component/apollo-client\";\r\nimport ReadCard from \"../Component/Read/ReadCard\";\r\nimport { NextSeo,BlogJsonLd } from 'next-seo';\r\n\r\n\r\nimport Link from 'next/link';\r\nimport gql from 'graphql-tag';\r\nimport Head from 'next/head'\r\n\r\n\r\nexport default function Read(props) {\r\n  const { getData,concerter }= props;  \r\n\r\n\r\n\r\n  const {data} = getData \r\n\r\n  const {post} = data\r\n  const postID= post.id\r\n  const date = parseISO(post.date)\r\n\r\n  console.log(post.categories.nodes, ' post.categories.nodes ')\r\n\r\n  if (concerter) {\r\n    return <Error statusCode={concerter} />\r\n  }\r\n  \r\n\r\n\r\n    return (\r\n      <> \r\n                <NextSeo\r\n                    title={post.title}\r\n                    description={post.excerpt}\r\n                /> \r\n                 <BlogJsonLd\r\n                    url=\"https://www.rajdeepsingh.dev/\"\r\n                    title={post.title}\r\n                    images={[post.featuredImage.sourceUrl]}\r\n                    datePublished={post.dateGmt}\r\n                    dateModified={post.modifiedGmt}\r\n                    authorName={post.author.name}\r\n                    description={post.excerpt}\r\n                 />\r\n           <Head> \r\n              <link rel='stylesheet' id='wp-block-library-css'  href='https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2' media='all' />\r\n              <link rel='stylesheet' id='wp-block-library-theme-css'  href='https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2' media='all' />\r\n               <link rel='icon' href={post.featuredImage.sourceUrl} type='image/x-icon'/>\r\n            </Head> \r\n  \r\n          {/* <div className={style.outerCard}>\r\n                  {\r\n                    post.categories.edges.map(\r\n                      (postCat)=>{ \r\n                        console.log(postCat , ' post Categories ')\r\n                        return  <Typography key={postCat.id} component=\"h6\" variant=\"h6\">\r\n                      # {postCat.node.name} \r\n                      </Typography>}\r\n                    )\r\n                  }\r\n                  \r\n                  <Typography component=\"h1\" variant=\"h1\" dangerouslySetInnerHTML={{ __html: post.title }}>\r\n                  </Typography>           \r\n                  <div className={style.cardBox}>\r\n                      <Avatar alt={post.author.name} src={post.author.avatar.url}  className={style.imageSize} />\r\n                      <Typography component=\"h5\" title={post.author.name} variant=\"h5\" className={style.cardBoxAuthorTitle}>\r\n                        {post.author.name} \r\n                      </Typography>\r\n                  </div>\r\n                  \r\n                  <CardMedia\r\n                      component=\"img\"\r\n                      alt={post.featuredImage.altText}\r\n                      image={post.featuredImage.sourceUrl}\r\n                      title={post.featuredImage.title}\r\n                      className={style.cardArticalImage}\r\n                  />\r\n                  <time className=\" MuiTypography-root MuiTypography-h5\" dateTime={\"2020-02-18T07:54:18\"} >{format(date, 'LLLL\td, yyyy')}</time>\r\n                \r\n                  <div key={  post.id} className={style.innerHtmlFor} dangerouslySetInnerHTML={{ __html: post.content }}></div>                  \r\n              </div>\r\n\r\n          <div className={style.writeComment}>\r\n          {\r\n            (post.commentStatus)?\r\n                <Link href={`/comments/?id=${post.id}`} as={ `/Comment/${post.slug}-${post.id}`}> \r\n                <a> { post.commentCount? post.commentCount : 0} Comment Now </a> \r\n              </Link> :\r\n            <Link> \r\n                <a> Comment Desible </a> \r\n            </Link>\r\n          }   \r\n          </div>\r\n\r\n          <Grid className={style.grid} container  >\r\n\r\n          { (post.categories.nodes)?\r\n              <Grid item sm={12} md={12} lg={12} xs={12}>   \r\n                    <Typography className={style.MoreStory} component=\"h4\" variant=\"h3\">\r\n                        More Story \r\n                    </Typography>\r\n              </Grid>:\"\"\r\n         }\r\n          \r\n          {      \r\n              post.categories.nodes[0].posts.nodes.map(function(data, i) {                     \r\n                    return (postID === data.id)? '' : <ReadCard key={i} post={data}/>\r\n                    }    \r\n              ) \r\n            }               \r\n          </Grid> \r\n      \r\n       */}\r\n      \r\n      \r\n      \r\n      </>\r\n    )\r\n  \r\n}\r\n\r\n\r\nexport const  getServerSideProps =  async ({ pathname, query, asPath, req, res, err }) =>{               \r\n        \r\n        if(query.slug){\r\n          const id=query.slug\r\n              try {\r\n                const getData= await client.query(({\r\n                    query:POST_READ,\r\n                    variables:{id}\r\n                }))\r\n                return {props:{ getData}}\r\n          }\r\n          catch(error){\r\n            console.log(error , ' read ')\r\n            return { props: { statusCode: 404 } }\r\n          }\r\n        }\r\n        else {\r\n            const id= query.Read.split( '-' ).pop()\r\n            try {\r\n              const getData= await client.query(({\r\n                  query:POST_READ,\r\n                  variables:{id}\r\n              }))\r\n              consol.log(getData , ' inside read in ssr ')\r\n              return {props:{ getData}}\r\n\r\n            }\r\n            catch(error){\r\n              console.log(error , ' read ')\r\n                 const concerter = JSON.stringify(error)\r\n              return { props: {concerter} }\r\n            }\r\n          }    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}