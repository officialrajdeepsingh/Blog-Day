{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport style from '../Component/css/Read.module.scss';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { parseISO, format } from 'date-fns';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useRouter } from 'next/router';\nimport ReadCard from \"../Component/Read/ReadCard\";\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nexport var __N_SSP = true;\nexport default function Read(props) {\n  var getData = props.getData;\n  var data = getData.data;\n  var post = data.post;\n  var postID = post.id;\n  console.log(post);\n  var date = parseISO(post.date);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"wp-block-library-css\",\n    href: \"https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"wp-block-library-theme-css\",\n    href: \"https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"genericons-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/genericons/genericons.css?ver=3.2\",\n    type: \"text/css\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"fontawesome-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/framework/font-awesome/css/font-awesome.min.css?ver=1\",\n    type: \"text/css\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"asalah-plugins-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/pluginstyle.css?ver=1\",\n    type: \"text/css\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"asalah-style-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/style.css?ver=3.530\",\n    type: \"text/css\",\n    media: \"all\"\n  })), __jsx(\"div\", {\n    className: style.outerCard\n  }, __jsx(Typography, {\n    component: \"h5\",\n    variant: \"subtitle1\"\n  }, \"#\", post.categories.edges[0].node.name), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h1\",\n    dangerouslySetInnerHTML: {\n      __html: post.title\n    }\n  }), __jsx(\"div\", {\n    className: style.cardBox\n  }, __jsx(Avatar, {\n    alt: post.author.name,\n    src: post.author.avatar.url,\n    className: style.imageSize\n  }), __jsx(Typography, {\n    component: \"h5\",\n    title: post.author.name,\n    variant: \"h5\",\n    className: style.cardBoxAuthorTitle\n  }, post.author.name)), __jsx(CardMedia, {\n    component: \"img\",\n    alt: post.featuredImage.altText,\n    image: post.featuredImage.sourceUrl,\n    title: post.featuredImage.title,\n    className: style.cardArticalImage\n  }), __jsx(\"time\", {\n    className: \" MuiTypography-root MuiTypography-h5\",\n    dateTime: \"2020-02-18T07:54:18\"\n  }, format(date, 'LLLL\td, yyyy')), __jsx(\"div\", {\n    key: post.id,\n    className: style.innerHtmlFor,\n    dangerouslySetInnerHTML: {\n      __html: post.content\n    }\n  })), __jsx(\"div\", {\n    className: style.writeComment\n  }, post.commentStatus ? __jsx(Link, {\n    href: \"/comments/?id=\".concat(post.id),\n    as: \"/Comment/\".concat(post.slug, \"-\").concat(post.id)\n  }, __jsx(\"a\", null, \" \", post.commentCount ? post.commentCount : 0, \" Comment Now \")) : __jsx(Link, null, __jsx(\"a\", null, \" Comment Desible \"))), __jsx(Grid, {\n    className: style.grid,\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    xs: 12\n  }, __jsx(Typography, {\n    className: style.MoreStory,\n    component: \"h4\",\n    variant: \"h3\"\n  }, \"More Story\")), post.categories.nodes[0].posts.nodes.map(function (data, i) {\n    return postID === data.id ? '' : __jsx(ReadCard, {\n      key: i,\n      post: data\n    });\n  })));\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/[Read].js"],"names":["React","Component","style","Typography","Container","CardMedia","Grid","Card","CardActionArea","CardContent","CardActions","parseISO","format","Avatar","useRouter","ReadCard","Link","gql","Head","Read","props","getData","data","post","postID","id","console","log","date","outerCard","categories","edges","node","name","__html","title","cardBox","author","avatar","url","imageSize","cardBoxAuthorTitle","featuredImage","altText","sourceUrl","cardArticalImage","innerHtmlFor","content","writeComment","commentStatus","slug","commentCount","grid","MoreStory","nodes","posts","map","i"],"mappings":"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","sourcesContent":["\r\n\r\nimport React,{Component} from 'react';\r\nimport style from '../Component/css/Read.module.scss'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { parseISO, format } from 'date-fns'\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {POST_READ} from \"../Component/graphalQurey\"\r\n\r\nimport { useRouter } from 'next/router'\r\nimport {client} from \"../Component/apollo-client\";\r\nimport ReadCard from \"../Component/Read/ReadCard\";\r\n\r\n\r\nimport Link from 'next/link';\r\nimport gql from 'graphql-tag';\r\nimport Head from 'next/head'\r\n\r\n\r\nexport default function Read(props) {\r\n  const { getData }= props;   \r\n  const {data} = getData\r\n const {post} = data\r\n  const postID= post.id\r\n  console.log(post)\r\n  const date = parseISO(post.date)\r\n  return (\r\n    <>  \r\n        <Head> \r\n            <link rel='stylesheet' id='wp-block-library-css'  href='https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2' media='all' />\r\n            <link rel='stylesheet' id='wp-block-library-theme-css'  href='https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2' media='all' />\r\n            <link rel='stylesheet' id='genericons-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/genericons/genericons.css?ver=3.2' type='text/css' media='all' />\r\n            <link rel='stylesheet' id='fontawesome-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/framework/font-awesome/css/font-awesome.min.css?ver=1' type='text/css' media='all' />\r\n            <link rel='stylesheet' id='asalah-plugins-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/pluginstyle.css?ver=1' type='text/css' media='all' />\r\n            <link rel='stylesheet' id='asalah-style-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/style.css?ver=3.530' type='text/css' media='all' />\r\n          </Head>\r\n \r\n        <div className={style.outerCard}>\r\n                <Typography component=\"h5\" variant=\"subtitle1\">\r\n                    #{post.categories.edges[0].node.name}\r\n                </Typography>\r\n                <Typography component=\"h1\" variant=\"h1\" dangerouslySetInnerHTML={{ __html: post.title }}>\r\n                </Typography>           \r\n                <div className={style.cardBox}>\r\n                    <Avatar alt={post.author.name} src={post.author.avatar.url}  className={style.imageSize} />\r\n                    <Typography component=\"h5\" title={post.author.name} variant=\"h5\" className={style.cardBoxAuthorTitle}>\r\n                      {post.author.name} \r\n                    </Typography>\r\n                </div>\r\n                \r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt={post.featuredImage.altText}\r\n                    image={post.featuredImage.sourceUrl}\r\n                    title={post.featuredImage.title}\r\n                    className={style.cardArticalImage}\r\n                />\r\n                <time className=\" MuiTypography-root MuiTypography-h5\" dateTime={\"2020-02-18T07:54:18\"} >{format(date, 'LLLL\td, yyyy')}</time>\r\n                <div key={  post.id} className={style.innerHtmlFor} dangerouslySetInnerHTML={{ __html: post.content }}></div>                  \r\n            </div>\r\n\r\n        <div className={style.writeComment}>\r\n        {\r\n          (post.commentStatus)?\r\n              <Link href={`/comments/?id=${post.id}`} as={ `/Comment/${post.slug}-${post.id}`}> \r\n              <a> { post.commentCount? post.commentCount : 0} Comment Now </a> \r\n            </Link> :\r\n          <Link> \r\n              <a> Comment Desible </a> \r\n          </Link>\r\n        }   \r\n        </div>\r\n\r\n        <Grid className={style.grid} container  >\r\n          <Grid item sm={12} md={12} lg={12} xs={12}>   \r\n                  <Typography className={style.MoreStory} component=\"h4\" variant=\"h3\">\r\n                      More Story \r\n                  </Typography>\r\n          </Grid>\r\n          {      \r\n            post.categories.nodes[0].posts.nodes.map(function(data, i) {                     \r\n                  return (postID === data.id)? '' : <ReadCard key={i} post={data}/>\r\n                  }    \r\n            ) \r\n          }               \r\n        </Grid> \r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport const  getServerSideProps =  async ({ pathname, query, asPath, req, res, err }) =>{               \r\n        \r\n        if(query.slug){\r\n          const id=query.slug\r\n              try {\r\n                const getData= await client.query(({\r\n                    query:POST_READ,\r\n                    variables:{id}\r\n                }))\r\n                return {props:{ getData}}\r\n          }\r\n          catch(error){\r\n            return { props: { statusCode: 404 } }\r\n          }\r\n        }\r\n        else {\r\n            const id= query.Read.split( '-' ).pop()\r\n            try {\r\n              const getData= await client.query(({\r\n                  query:POST_READ,\r\n                  variables:{id}\r\n              }))\r\n              return {props:{ getData}}\r\n\r\n            }\r\n            catch(error){\r\n              return { props: { statusCode: 404 } }\r\n            }\r\n          }    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}