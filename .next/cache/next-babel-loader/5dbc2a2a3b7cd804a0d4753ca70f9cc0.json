{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\nimport { POST_SEARCH } from \"../graphalQurey\";\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { client } from \"../apollo-client\";\nimport style from '../css/Searchbar.module.scss';\n\nconst fetcher = query => request('https://www.rajdeepsingh.dev/graphql', query);\n\nexport default function Searchbar(props) {\n  const {\n    0: search,\n    1: setSearch\n  } = useState('');\n  const {\n    data,\n    error\n  } = useSWR([POST_SEARCH, search], fetcher);\n\n  const sumbitHandler = e => {\n    e.preventDefault();\n  };\n\n  const changeHandler = e => {\n    setSearch(e.target.value);\n  };\n\n  return __jsx(\"div\", {\n    className: style.bar\n  }, __jsx(Container, {\n    className: style.box,\n    maxWidth: \"sm\"\n  }, __jsx(\"form\", {\n    className: style.formRoot,\n    onSubmit: sumbitHandler,\n    noValidate: true,\n    autoComplete: \"off\"\n  }, __jsx(TextField, {\n    onChange: changeHandler,\n    id: \"standard-secondary\",\n    className: style.rootText,\n    label: \"Search Here\"\n  }))));\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/Component/Header/Searchbar.js"],"names":["React","Component","useState","Container","TextField","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","Link","POST_SEARCH","useQuery","gql","client","style","fetcher","query","request","Searchbar","props","search","setSearch","data","error","useSWR","sumbitHandler","e","preventDefault","changeHandler","target","value","bar","box","formRoot","rootText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAAQC,WAAR,QAA0B,iBAA1B;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAAQC,MAAR,QAAqB,kBAArB;AAGA,OAAOC,KAAP,MAAkB,8BAAlB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAIC,OAAO,CAAC,sCAAD,EAAyCD,KAAzC,CAAhC;;AAGA,eAAe,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;AAErC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEuB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBC,MAAM,CAAC,CAACd,WAAD,EAAcU,MAAd,CAAD,EAAyBL,OAAzB,CAA9B;;AAEA,QAAMU,aAAa,GAAIC,CAAD,IAAK;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACF,GAFF;;AAIC,QAAOC,aAAa,GAAIF,CAAD,IAAK;AACzBL,IAAAA,SAAS,CAACK,CAAC,CAACG,MAAF,CAASC,KAAV,CAAT;AAEF,GAHD;;AAIA,SACG;AAAK,IAAA,SAAS,EAAEhB,KAAK,CAACiB;AAAtB,KACG,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEjB,KAAK,CAACkB,GAA5B;AAAiC,IAAA,QAAQ,EAAC;AAA1C,KACI;AAAM,IAAA,SAAS,EAAElB,KAAK,CAACmB,QAAvB;AAAiC,IAAA,QAAQ,EAAER,aAA3C;AAA2D,IAAA,UAAU,MAArE;AAAsE,IAAA,YAAY,EAAC;AAAnF,KACI,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAEG,aAArB;AAAoC,IAAA,EAAE,EAAC,oBAAvC;AAA6D,IAAA,SAAS,EAAEd,KAAK,CAACoB,QAA9E;AAAwF,IAAA,KAAK,EAAC;AAA9F,IADJ,CADJ,CADH,CADH;AA2CJ","sourcesContent":["import React, { Component,useState  } from 'react'\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from 'next/link'\r\n\r\nimport {POST_SEARCH} from \"../graphalQurey\"\r\n\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\n\r\nimport {client} from \"../apollo-client\";\r\n\r\n\r\nimport style from '../css/Searchbar.module.scss';\r\n\r\nconst fetcher = query => request('https://www.rajdeepsingh.dev/graphql', query)\r\n\r\n\r\nexport default function Searchbar(props) {\r\n\r\n    const [search ,setSearch]=useState('')\r\n    const { data, error } = useSWR([POST_SEARCH, search] , fetcher)\r\n   \r\n    const sumbitHandler = (e)=>{\r\n        e.preventDefault();\r\n     }\r\n    \r\n     const  changeHandler = (e)=>{\r\n        setSearch(e.target.value)\r\n    \r\n     }\r\n     return (\r\n        <div className={style.bar}> \r\n           <Container className={style.box} maxWidth=\"sm\" >\r\n               <form className={style.formRoot} onSubmit={sumbitHandler}  noValidate autoComplete=\"off\">\r\n                   <TextField onChange={changeHandler} id=\"standard-secondary\"  className={style.rootText} label=\"Search Here\" />\r\n               </form>  \r\n              \r\n              {\r\n            //    this.state.data.data?  (\r\n            //        this.state.data.data.posts.nodes.map(\r\n            //            postData=>{\r\n            //                return(\r\n            //                    <List key={postData.id} className={style.rootList}>\r\n            //                        <Link href={`/[read]?id=${postData.id}`} as={ `${postData.slug}-${postData.id}`} >\r\n            //                            <ListItem button={true}  alignItems=\"flex-start\">\r\n            //                                <ListItemAvatar>\r\n            //                                    <Avatar alt={postData.featuredImage.altText} src={postData.featuredImage.sourceUrl} />\r\n            //                                </ListItemAvatar>\r\n            //                                <ListItemText\r\n            //                                    primary={postData.title}\r\n            //                                    secondary={ \r\n            //                                    <Typography\r\n            //                                            component=\"span\"\r\n            //                                            variant=\"body2\"\r\n            //                                            className={style.inline}\r\n            //                                            color=\"textPrimary\"\r\n            //                                        >\r\n            //                                            {postData.author.name}\r\n            //                                        </Typography>                                                                   \r\n            //                                    }  \r\n            //                                />\r\n            //                            </ListItem>\r\n            //                        </Link> \r\n            //                    </List>\r\n            //                )\r\n            //            }\r\n            //        )\r\n\r\n            //    ) : ''              \r\n              }\r\n           </Container>\r\n        </div>\r\n   )\r\n}\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}