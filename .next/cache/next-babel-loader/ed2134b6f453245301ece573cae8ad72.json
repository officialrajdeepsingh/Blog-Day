{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactMde from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport gql from 'graphql-tag';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Button from '@material-ui/core/Button';\nimport style from '../css/Comments.module.scss';\nimport { request } from 'graphql-request';\nimport { COMMENT_MUTATION } from \"../graphalQurey\";\nimport useSWR from 'swr';\n\nvar signUP = function signUP(input) {\n  return request('https://www.rajdeepsingh.dev/graphql', COMMENT_MUTATION, input);\n}; // const fetcher = query => request('https://api.graph.cool/simple/v1/movies', query)\n\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props));\n}\n\nexport default function CommentEditor(props) {\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      returndata = _React$useState4[0],\n      setReturndata = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"write\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      selectedTab = _React$useState6[0],\n      setSelectedTab = _React$useState6[1];\n\n  var _React$useState7 = React.useState(true),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      open = _React$useState8[0],\n      setOpen = _React$useState8[1];\n\n  var converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true\n  });\n\n  var submitComment = function submitComment(e) {\n    var userId = localStorage.getItem(\"userId\");\n    var displayName = localStorage.getItem(\"displayName\");\n    e.preventDefault(); // console.log(getdata, ' getdata ')\n\n    console.log(data, ' data ');\n    console.log(error, ' error awit '); // setReturndata(getdata)  \n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  console.log(returndata, 'returndata ');\n  return __jsx(\"div\", {\n    key: props.keyId,\n    className: \"container\"\n  }, __jsx(\"form\", {\n    onSubmit: submitComment\n  }, __jsx(ReactMde, {\n    value: value,\n    onChange: setValue,\n    selectedTab: selectedTab,\n    onTabChange: setSelectedTab,\n    generateMarkdownPreview: function generateMarkdownPreview(markdown) {\n      return Promise.resolve(converter.makeHtml(markdown));\n    },\n    childProps: {\n      writeButton: {\n        tabIndex: -1\n      }\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    className: style.productButton,\n    size: \"small\"\n  }, \"Submit\")), returndata ? __jsx(Snackbar, {\n    open: open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 6000,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    severity: \"success\"\n  }, returndata)) : '');\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/Component/CommentEditor/CommentEditor.js"],"names":["React","ReactMde","Showdown","gql","Snackbar","MuiAlert","Button","style","request","COMMENT_MUTATION","useSWR","signUP","input","Alert","props","CommentEditor","useState","value","setValue","returndata","setReturndata","selectedTab","setSelectedTab","open","setOpen","converter","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","submitComment","e","userId","localStorage","getItem","displayName","preventDefault","console","log","data","error","handleClose","keyId","markdown","Promise","resolve","makeHtml","writeButton","tabIndex","productButton","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactMde from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport gql from 'graphql-tag';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport style from '../css/Comments.module.scss'\r\nimport { request } from 'graphql-request';\r\nimport {COMMENT_MUTATION} from \"../graphalQurey\"\r\nimport useSWR from 'swr'\r\n\r\n\r\nconst signUP = (input) => {\r\n  return  request('https://www.rajdeepsingh.dev/graphql', COMMENT_MUTATION, input);\r\n};\r\n\r\n// const fetcher = query => request('https://api.graph.cool/simple/v1/movies', query)\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n export default  function CommentEditor(props) {\r\n \r\n\r\n    const [value, setValue] = React.useState();\r\n    const [returndata, setReturndata  ] = React.useState();\r\n    const [selectedTab, setSelectedTab] = React.useState(\"write\");\r\n    \r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const converter = new Showdown.Converter({\r\n      tables: true,\r\n      simplifiedAutoLink: true,\r\n      strikethrough: true,\r\n      tasklists: true\r\n    });\r\n\r\n    const submitComment=  (e) => {\r\n     const userId= localStorage.getItem(\"userId\");\r\n     const displayName= localStorage.getItem(\"displayName\");\r\n\r\n        e.preventDefault();          \r\n            \r\n              // console.log(getdata, ' getdata ')\r\n              console.log(data, ' data ')\r\n              console.log(error, ' error awit ')\r\n              // setReturndata(getdata)  \r\n            \r\n        }\r\n      \r\n     const handleClose = () => {      \r\n         setOpen(false);\r\n      };\r\n       \r\n     console.log(returndata,'returndata ')\r\n    return (\r\n      <div key={props.keyId} className=\"container\">\r\n        \r\n        <form onSubmit={submitComment} > \r\n  \r\n          <ReactMde\r\n            value={value}\r\n            onChange={setValue}\r\n            selectedTab={selectedTab}\r\n            onTabChange={setSelectedTab}\r\n            generateMarkdownPreview={markdown =>\r\n              Promise.resolve(converter.makeHtml(markdown))\r\n            }\r\n            childProps={{\r\n              writeButton: {\r\n                tabIndex: -1\r\n              }\r\n            }}\r\n  \r\n          />\r\n  \r\n            <Button type=\"submit\" className={style.productButton} size=\"small\">\r\n                             Submit  \r\n            </Button>\r\n        </form>\r\n      \r\n        {\r\n            (returndata) ? <Snackbar open={open} anchorOrigin={ \r\n                {    vertical: 'top', \r\n                    horizontal: 'center' }\r\n                } \r\n                autoHideDuration={6000} onClose={handleClose}>\r\n                  <Alert onClose={handleClose} severity=\"success\">\r\n                        {returndata} \r\n                  </Alert>\r\n              </Snackbar> : ''\r\n        \r\n        }\r\n\r\n       \r\n      </div>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}