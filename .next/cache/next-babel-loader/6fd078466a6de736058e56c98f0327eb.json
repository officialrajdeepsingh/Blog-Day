{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport style from '../Component/css/Read.module.scss';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { parseISO, format } from 'date-fns';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useRouter } from 'next/router';\nimport ReadCard from \"../Component/Read/ReadCard\";\nimport { NextSeo, BlogJsonLd } from 'next-seo';\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nexport var __N_SSP = true;\nexport default function Read(props) {\n  // const { getData,concerter }= props;  \n  if (props.concerter) {\n    return __jsx(Error, null);\n  }\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/[Read].js"],"names":["React","Component","style","Typography","Container","CardMedia","Grid","Card","CardActionArea","CardContent","CardActions","parseISO","format","Avatar","useRouter","ReadCard","NextSeo","BlogJsonLd","Link","gql","Head","Read","props","concerter"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,UAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,OAAT,EAAiBC,UAAjB,QAAmC,UAAnC;AAGA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC;AAEA,MAAIA,KAAK,CAACC,SAAV,EAAqB;AACnB,WAAO,MAAC,KAAD,OAAP;AACD;AAGF","sourcesContent":["import React,{Component} from 'react';\r\nimport style from '../Component/css/Read.module.scss'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { parseISO, format } from 'date-fns'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {POST_READ} from \"../Component/graphalQurey\"\r\nimport { useRouter } from 'next/router'\r\nimport {client} from \"../Component/apollo-client\";\r\nimport ReadCard from \"../Component/Read/ReadCard\";\r\nimport { NextSeo,BlogJsonLd } from 'next-seo';\r\n\r\n\r\nimport Link from 'next/link';\r\nimport gql from 'graphql-tag';\r\nimport Head from 'next/head'\r\n\r\n\r\nexport default function Read(props) {\r\n  // const { getData,concerter }= props;  \r\n \r\n  if (props.concerter) {\r\n    return <Error  />\r\n  }\r\n \r\n  \r\n}\r\n\r\n\r\nexport const  getServerSideProps =  async ({ pathname, query, asPath, req, res, err }) =>{               \r\n        \r\n        if(query.slug){\r\n          const id=query.slug\r\n              try {\r\n                const getData= await client.query(({\r\n                    query:POST_READ,\r\n                    variables:{id}\r\n                }))\r\n                return {props:{ getData}}\r\n          }\r\n          catch(error){\r\n            console.log(error , ' read ')\r\n            const concerter = JSON.stringify(error)\r\n            return { props: {concerter} }\r\n          }\r\n        }\r\n        else {\r\n            const id= query.Read.split( '-' ).pop()\r\n            try {\r\n              const getData= await client.query(({\r\n                  query:POST_READ,\r\n                  variables:{id}\r\n              }))\r\n              consol.log(getData , ' inside read in ssr ')\r\n              return {props:{ getData}}\r\n\r\n            }\r\n            catch(error){\r\n              console.log(error , ' read ')\r\n                 const concerter = JSON.stringify(error)\r\n              return { props: {concerter} }\r\n            }\r\n          }    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}