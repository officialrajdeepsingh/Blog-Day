{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Layout from '../Component/Layout';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from 'next/link';\nimport { NextSeo } from 'next-seo';\nimport style from '../Component/css/Signup.module.scss';\nimport signupImage from '../Component/asset/signupImage.png';\nimport MuiAlert from '@material-ui/lab/Alert'; // with SWR and graphql-request\n\nimport { request } from 'graphql-request';\nimport { SIGNUP_MUTATION } from \"../Component/graphalQurey\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { useRouter } from 'next/router';\n\nconst signUP = userData => {\n  return request('https://www.rajdeepsingh.dev/graphql', SIGNUP_MUTATION, userData);\n};\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: props.show\n    }\n  }));\n}\n\nexport default function Signup(props) {\n  const router = useRouter();\n  const {\n    0: passward,\n    1: setPassward\n  } = useState(\"\");\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState(false);\n  const {\n    0: showconfirmPassword,\n    1: setShowconfirmPassword\n  } = useState(false);\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState(\"\");\n  const {\n    0: matchPassward,\n    1: setMatchPassward\n  } = useState(false);\n  const {\n    0: checkbox,\n    1: setCheckbox\n  } = useState(true);\n  const {\n    0: userName,\n    1: setuserName\n  } = useState(\"\");\n  const {\n    0: gmail,\n    1: setgmail\n  } = useState(\"\");\n  const {\n    0: displayName,\n    1: setDisplayName\n  } = useState(\"\");\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const [getSubmitData, setGetSubmitData] = React.useState({}); // form  handler function \n\n  const handleChange = event => {\n    setPassward(event.target.value);\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const confirmHandleChange = event => {\n    setConfirmPassword(event.target.value);\n\n    if (passward === event.target.value) {\n      setMatchPassward(false);\n    } else {\n      setMatchPassward(true);\n    }\n  };\n\n  const confirmHandleClickShowPassword = () => {\n    setShowconfirmPassword(!showPassword);\n  };\n\n  const checkboxChange = () => {\n    setCheckbox(!checkbox);\n  };\n\n  const handleMouseDownPassword = () => {};\n\n  const submitFormUser = async event => {\n    event.preventDefault();\n    const data = await signUP({\n      \"userData\": {\n        \"username\": userName,\n        \"email\": gmail,\n        \"password\": passward,\n        \"displayName\": displayName,\n        \"clientMutationId\": \"registerUser\",\n        \"registered\": \"true\"\n      }\n    }).then(data => {\n      setGetSubmitData(() => {\n        return {\n          data\n        };\n      });\n    }).catch(error => {\n      setGetSubmitData(() => {\n        return {\n          error\n        };\n      });\n    });\n    setOpen(() => {\n      return true;\n    }); //  data: undefined\n\n    if (!data === \"undefined\") {\n      localStorage.setItem(\"authToken\", data.registerUser.user.jwtAuthToken);\n      localStorage.setItem(\"userId\", data.registerUser.user.userId);\n      localStorage.setItem(\"displayName\", data.registerUser.user.username);\n      router.push(\"/\");\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const ShowAlertError = getSubmitData.error ? getSubmitData.error.response.errors[0].message : 'submit';\n  return __jsx(React.Fragment, null, __jsx(NextSeo, {\n    title: \"Signup -- Learn With me \",\n    description: \"Signup  page \"\n  }), __jsx(Container, {\n    className: style.containerBox\n  }, __jsx(Card, {\n    className: style.root\n  }, __jsx(\"div\", {\n    className: style.innerCard\n  }, __jsx(\"div\", {\n    className: style.details\n  }, __jsx(CardContent, {\n    className: style.cardContentInner\n  }, __jsx(Typography, {\n    className: style.typeH5,\n    component: \"h6\",\n    variant: \"h6\"\n  }, \"Welcome Back!\"), __jsx(Typography, {\n    className: style.typeH3,\n    component: \"h3\",\n    variant: \"h2\"\n  }, \"Learn With Me\"), __jsx(\"form\", {\n    //  on Submit handler  \n    onSubmit: submitFormUser,\n    className: style.form,\n    noValidate: true,\n    autoComplete: \"on\"\n  }, __jsx(TextField, {\n    autoComplete: \"name\",\n    onChange: e => setDisplayName(e.target.value),\n    id: \"fullName\",\n    className: style.textControl,\n    placeholder: \" Exmple:Rajdeep Singh  \",\n    label: \"Full Name\"\n  }), __jsx(TextField, {\n    autoComplete: \"username\",\n    onChange: e => setuserName(e.target.value),\n    id: \"userName\",\n    className: style.textControl,\n    placeholder: \" Exmple:Officialrajdeepsingh  \",\n    label: \"User Name\"\n  }), __jsx(TextField, {\n    autoComplete: \"email\",\n    onChange: e => setgmail(e.target.value),\n    id: \"userGmail\",\n    className: style.textControl,\n    placeholder: \" 123@gmail.com  \",\n    label: \"Gmail\"\n  }), __jsx(FormControl, {\n    className: style.textControl\n  }, __jsx(InputLabel, {\n    htmlFor: \"password\"\n  }, \"Password\"), __jsx(Input, {\n    id: \"password\",\n    type: showPassword ? 'text' : 'password',\n    value: passward,\n    onChange: handleChange,\n    placeholder: \"Exmple: Rb@1%2^3*56\",\n    autoComplete: \"new-password\",\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword\n    }, showPassword ? __jsx(Visibility, null) : __jsx(VisibilityOff, null)))\n  })), __jsx(FormControl, {\n    className: style.textControl\n  }, __jsx(InputLabel, {\n    htmlFor: \"confirmPassword\"\n  }, \"Confirm Password\"), __jsx(Input, {\n    id: \"confirmPassword\",\n    type: showconfirmPassword ? 'text' : 'password',\n    value: confirmPassword,\n    onChange: confirmHandleChange,\n    error: matchPassward,\n    paceholder: \"Exmple Confirm Passward :  Rb@1%2^3*56\",\n    autoComplete: \"new-password\",\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: confirmHandleClickShowPassword,\n      onMouseDown: handleMouseDownPassword\n    }, showPassword ? __jsx(Visibility, null) : __jsx(VisibilityOff, null)))\n  })), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: checkbox,\n      onChange: checkboxChange,\n      name: \"checkBox\",\n      color: \"primary\",\n      className: style.checkBox\n    }),\n    label: \"I Agree to Terms & Conditions \"\n  }), __jsx(Button, {\n    type: \"submit\" //  send data on this button \n    ,\n    className: style.productButton,\n    size: \"small\"\n  }, \"Submit\"))), __jsx(\"div\", {\n    className: style.typeLogin\n  }, __jsx(React.Fragment, null, __jsx(Typography, {\n    className: style.anchorLink,\n    component: \"h6\",\n    variant: \"h6\"\n  }, \"Login With Me\"), __jsx(Link, {\n    href: \"/login\"\n  }, __jsx(\"a\", null, \" Click Here  \"))))), __jsx(CardMedia, {\n    component: \"img\",\n    alt: \"signup Image\",\n    image: signupImage,\n    title: \"signup Now \",\n    className: style.cardImage\n  })))), __jsx(Snackbar, {\n    open: open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 60000,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    show: ShowAlertError,\n    severity: getSubmitData.error ? \"error\" : 'success'\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}