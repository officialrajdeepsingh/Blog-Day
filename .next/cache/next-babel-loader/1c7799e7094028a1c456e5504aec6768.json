{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport style from '../Component/css/ForgetPassward.module.scss';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { FORGET_PASSWARD_MUTATION } from \"../Component/graphalQurey\";\nimport { request } from 'graphql-request';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nvar signIN = function signIN(userData) {\n  return request('https://www.rajdeepsingh.dev/graphql', FORGET_PASSWARD_MUTATION, userData);\n};\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: props.show\n    }\n  }));\n}\n\n_c = Alert;\nexport default function ForgetPassward(props) {\n  _s();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      gmail = _React$useState2[0],\n      setGmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      data = _React$useState4[0],\n      setData = _React$useState4[1];\n\n  var _React$useState5 = React.useState({}),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      error = _React$useState6[0],\n      setError = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      open = _React$useState8[0],\n      setOpen = _React$useState8[1];\n\n  var formSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var _data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!gmail) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 4;\n              return signIN({\n                \"getUserName\": gmail\n              }).then(function (data) {\n                setData(function () {\n                  return {\n                    data: data\n                  };\n                });\n              })[\"catch\"](function (error) {\n                setError(function () {\n                  return {\n                    error: error\n                  };\n                });\n              });\n\n            case 4:\n              _data = _context.sent;\n\n            case 5:\n              setOpen(function () {\n                return true;\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function formSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  console.log(data, ' data ');\n  console.log(error, ' error ');\n\n  var passwardChange = function passwardChange(event) {\n    setGmail(event.target.value);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var showError = error.error ? error.error.response.errors[0].message : \" Some thing Worng \";\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: formSubmit,\n    className: style.form,\n    noValidate: true,\n    autoComplete: \"on\"\n  }, __jsx(FormControl, {\n    className: style.layout\n  }, __jsx(InputLabel, {\n    htmlFor: \"RestPassword\"\n  }, \"Enter Register Gmail\"), __jsx(Input, {\n    id: \"RestPassword\",\n    type: \"gmail\",\n    onChange: passwardChange,\n    placeholder: \"Enter your gamil\",\n    name: \"gmail\",\n    autoComplete: \"gmail\"\n  })), __jsx(Button, {\n    type: \"submit\",\n    className: style.button,\n    size: \"small\"\n  }, \"Reset\")), __jsx(Snackbar, {\n    open: open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 60000,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    show: showError,\n    severity: error.error ? \"error\" : \"success\"\n  })));\n}\n\n_s(ForgetPassward, \"vhSftQG5PrEFQesXdI5ROgaDwXk=\");\n\n_c2 = ForgetPassward;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"ForgetPassward\");","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/ForgetPassward.js"],"names":["React","useState","Input","FormControl","InputLabel","Button","style","Snackbar","FORGET_PASSWARD_MUTATION","request","MuiAlert","signIN","userData","Alert","props","__html","show","ForgetPassward","gmail","setGmail","data","setData","error","setError","open","setOpen","formSubmit","event","preventDefault","then","console","log","passwardChange","target","value","handleClose","showError","response","errors","message","form","layout","button","vertical","horizontal"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport Input from '@material-ui/core/Input';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport style from '../Component/css/ForgetPassward.module.scss'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {FORGET_PASSWARD_MUTATION} from \"../Component/graphalQurey\"\r\nimport { request } from 'graphql-request';\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst signIN = (userData) => {\r\n    return  request('https://www.rajdeepsingh.dev/graphql', FORGET_PASSWARD_MUTATION, userData);\r\n  };\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6}  variant=\"filled\" {...props} > \r\n                <div dangerouslySetInnerHTML={{ __html: props.show }}></div> \r\n            </MuiAlert>\r\n}\r\n\r\nexport default function ForgetPassward(props) {\r\n    const [gmail, setGmail] = React.useState(\"\");\r\n    const [data, setData] = React.useState({});\r\n    const [error, setError] = React.useState({});\r\n    const [open, setOpen] = React.useState(false);\r\n    const formSubmit= async (event)=>{\r\n        event.preventDefault()\r\n        if(gmail){\r\n            const data= await signIN({                          \r\n                \"getUserName\": gmail\r\n            }).then(\r\n                (data)=>{\r\n                    setData(()=>{  \r\n                        return {data} \r\n                     })\r\n                }\r\n            ).catch((error) => {\r\n                setError(()=>{  \r\n                    return {error} \r\n                 })\r\n            })\r\n        }\r\n\r\n        setOpen(()=>{  \r\n            return true \r\n         })\r\n        \r\n    }\r\n    console.log(data , ' data ')\r\n    console.log(error , ' error ')\r\n    const passwardChange=(event)=>{\r\n        setGmail(event.target.value)\r\n    }\r\n\r\n   const handleClose =()=>{\r\n            setOpen(false)\r\n   }\r\n\r\n   const showError= error.error? error.error.response.errors[0].message : \" Some thing Worng \"\r\n\r\n\r\n    return (\r\n        <>\r\n         <form onSubmit={formSubmit} className={style.form} noValidate autoComplete=\"on\">\r\n             <FormControl className={style.layout} >\r\n                                        <InputLabel htmlFor=\"RestPassword\">Enter Register Gmail</InputLabel>\r\n                                        <Input\r\n                                            id=\"RestPassword\"\r\n                                            type= 'gmail'\r\n                                            onChange={passwardChange}\r\n                                            placeholder='Enter your gamil'\r\n                                            name=\"gmail\" \r\n                                            autoComplete=\"gmail\"\r\n\r\n                                            \r\n                                        />\r\n                                    </FormControl>\r\n                                \r\n              <Button type=\"submit\" className={style.button} size=\"small\">\r\n                       Reset \r\n              </Button>\r\n        </form>\r\n\r\n        <Snackbar open={open} anchorOrigin={ \r\n                    {    vertical: 'top', \r\n                        horizontal: 'center' }\r\n                    } \r\n                 autoHideDuration={60000} onClose={handleClose}>\r\n                  <Alert onClose={handleClose}  show={ showError } severity={error.error? \"error\":\"success\"}></Alert>\r\n              </Snackbar>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}