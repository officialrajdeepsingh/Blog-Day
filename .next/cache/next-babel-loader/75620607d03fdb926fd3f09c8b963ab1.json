{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Fragment } from 'react';\nimport ReactMde from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Button from '@material-ui/core/Button';\nimport style from '../css/CommentEditor.module.scss';\nimport { request } from 'graphql-request';\nimport { COMMENT_MUTATION } from \"../graphalQurey\";\n\nconst signUP = input => {\n  return request('https://www.rajdeepsingh.dev/graphql', COMMENT_MUTATION, input);\n};\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: props.show\n    }\n  }));\n}\n\nexport default function CommentEditor(props) {\n  const [value, setValue] = React.useState(\"\");\n  const [selectedTab, setSelectedTab] = React.useState(\"write\");\n  const [open, setOpen] = React.useState(false);\n  const [comment, setComment] = React.useState({});\n  const converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true\n  });\n\n  const submitComment = async e => {\n    e.preventDefault();\n    const UserId = localStorage.getItem(\"userId\");\n    const DisplayName = localStorage.getItem(\"displayName\");\n    console.log(value, ' value ==> ');\n\n    if (value) {\n      const data = await signUP({\n        \"input\": {\n          \"content\": value,\n          \"author\": DisplayName,\n          \"userId\": UserId,\n          \"clientMutationId\": \"createComment\",\n          \"commentOn\": props.postid\n        }\n      }).then(data => {\n        setComment(() => {\n          return {\n            data\n          };\n        });\n      }).catch(error => setComment(() => {\n        return {\n          error\n        };\n      }));\n      setOpen(() => true);\n    }\n  };\n\n  const onChangeHandler = data => {\n    setValue(data);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  console.log(comment, ' comment ');\n  const ShowAlertError = comment.error ? comment.error.response.errors[0].message : 'submit';\n  return __jsx(Fragment, {\n    key: props.keyId\n  }, __jsx(\"form\", {\n    id: \"formSubmit\",\n    onSubmit: submitComment\n  }, __jsx(ReactMde, {\n    value: value,\n    onChange: onChangeHandler,\n    selectedTab: selectedTab,\n    onTabChange: setSelectedTab,\n    generateMarkdownPreview: markdown => Promise.resolve(converter.makeHtml(markdown)),\n    childProps: {\n      writeButton: {\n        tabIndex: -1\n      }\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    className: style.productButton,\n    size: \"small\"\n  }, \"Submit\")), __jsx(Snackbar, {\n    open: open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 6000,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    show: ShowAlertError,\n    severity: comment.error ? \"error\" : 'Your Comment Under Review'\n  })));\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/Component/CommentEditor/CommentEditor.js"],"names":["React","Fragment","ReactMde","Showdown","Snackbar","MuiAlert","Button","style","request","COMMENT_MUTATION","signUP","input","Alert","props","__html","show","CommentEditor","value","setValue","useState","selectedTab","setSelectedTab","open","setOpen","comment","setComment","converter","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","submitComment","e","preventDefault","UserId","localStorage","getItem","DisplayName","console","log","data","postid","then","catch","error","onChangeHandler","handleClose","ShowAlertError","response","errors","message","keyId","markdown","Promise","resolve","makeHtml","writeButton","tabIndex","productButton","vertical","horizontal"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAAQC,gBAAR,QAA+B,iBAA/B;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,SAAQH,OAAO,CAAC,sCAAD,EAAyCC,gBAAzC,EAA2DE,KAA3D,CAAf;AACD,CAFD;;AAKA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,SAAO,MAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C,GACK;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAED,KAAK,CAACE;AAAhB;AAA9B,IADL,CAAP;AAGD;;AAEA,eAAgB,SAASC,aAAT,CAAuBH,KAAvB,EAA8B;AAC7C,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBlB,KAAK,CAACmB,QAAN,CAAe,EAAf,CAA1B;AACE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrB,KAAK,CAACmB,QAAN,CAAe,OAAf,CAAtC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBvB,KAAK,CAACmB,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBzB,KAAK,CAACmB,QAAN,CAAe,EAAf,CAA9B;AAEA,QAAMO,SAAS,GAAG,IAAIvB,QAAQ,CAACwB,SAAb,CAAuB;AACvCC,IAAAA,MAAM,EAAE,IAD+B;AAEvCC,IAAAA,kBAAkB,EAAE,IAFmB;AAGvCC,IAAAA,aAAa,EAAE,IAHwB;AAIvCC,IAAAA,SAAS,EAAE;AAJ4B,GAAvB,CAAlB;;AASA,QAAMC,aAAa,GAAE,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACE,UAAMC,MAAM,GAAEC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAd;AACA,UAAMC,WAAW,GAAEF,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAnB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYvB,KAAZ,EAAoB,aAApB;;AAEA,QAAGA,KAAH,EAAU;AACP,YAAMwB,IAAI,GAAE,MAAM/B,MAAM,CAAE;AACvB,iBAAQ;AACA,qBAAWO,KADX;AAEA,oBAAUqB,WAFV;AAGA,oBAASH,MAHT;AAIA,8BAAoB,eAJpB;AAKA,uBAAatB,KAAK,CAAC6B;AALnB;AADe,OAAF,CAAN,CASjBC,IATiB,CAUdF,IAAD,IAAQ;AACRhB,QAAAA,UAAU,CAAE,MAAI;AAAE,iBAAO;AAACgB,YAAAA;AAAD,WAAP;AAAe,SAAvB,CAAV;AACD,OAZgB,EAajBG,KAbiB,CAaVC,KAAD,IAAUpB,UAAU,CAAC,MAAK;AAAE,eAAO;AAACoB,UAAAA;AAAD,SAAP;AAAe,OAAvB,CAbT,CAAlB;AAeDtB,MAAAA,OAAO,CAAC,MAAK,IAAN,CAAP;AAEC;AACJ,GA1BL;;AA4BE,QAAOuB,eAAe,GAAIL,IAAD,IAAQ;AAC9BvB,IAAAA,QAAQ,CAACuB,IAAD,CAAR;AACF,GAFD;;AAGA,QAAMM,WAAW,GAAG,MAAM;AACvBxB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACF,GAFD;;AAGAgB,EAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ,EAAqB,WAArB;AAEA,QAAMwB,cAAc,GAAGxB,OAAO,CAACqB,KAAT,GAAiBrB,OAAO,CAACqB,KAAR,CAAcI,QAAd,CAAuBC,MAAvB,CAA8B,CAA9B,EAAiCC,OAAlD,GAA0D,QAAhF;AAEF,SACI,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEtC,KAAK,CAACuC;AAArB,KAGE;AAAO,IAAA,EAAE,EAAC,YAAV;AAAuB,IAAA,QAAQ,EAAEpB;AAAjC,KACE,MAAC,QAAD;AACM,IAAA,KAAK,EAAEf,KADb;AAEM,IAAA,QAAQ,EAAE6B,eAFhB;AAGM,IAAA,WAAW,EAAE1B,WAHnB;AAIM,IAAA,WAAW,EAAEC,cAJnB;AAKM,IAAA,uBAAuB,EAAEgC,QAAQ,IAC/BC,OAAO,CAACC,OAAR,CAAgB7B,SAAS,CAAC8B,QAAV,CAAmBH,QAAnB,CAAhB,CANR;AAQM,IAAA,UAAU,EAAE;AACVI,MAAAA,WAAW,EAAE;AACXC,QAAAA,QAAQ,EAAE,CAAC;AADA;AADH;AARlB,IADF,EAgBI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAEnD,KAAK,CAACoD,aAAvC;AAAsD,IAAA,IAAI,EAAC;AAA3D,cAhBJ,CAHF,EAwBE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAErC,IAAhB;AAAsB,IAAA,YAAY,EACxB;AAAIsC,MAAAA,QAAQ,EAAE,KAAd;AACIC,MAAAA,UAAU,EAAE;AADhB,KADV;AAKU,IAAA,gBAAgB,EAAE,IAL5B;AAKkC,IAAA,OAAO,EAAEd;AAL3C,KAMY,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,WAAhB;AAA6B,IAAA,IAAI,EAAEC,cAAnC;AAAmD,IAAA,QAAQ,EAAIxB,OAAO,CAACqB,KAAT,GAAiB,OAAjB,GAAyB;AAAvF,IANZ,CAxBF,CADJ;AAmCD","sourcesContent":["import React,{Fragment} from 'react'\nimport ReactMde from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport Button from '@material-ui/core/Button';\nimport style from '../css/CommentEditor.module.scss'\nimport { request } from 'graphql-request';\nimport {COMMENT_MUTATION} from \"../graphalQurey\"\n\n\nconst signUP = (input) => {\n  return  request('https://www.rajdeepsingh.dev/graphql', COMMENT_MUTATION, input);\n};\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} > \n              <div dangerouslySetInnerHTML={{ __html: props.show }}></div> \n          </MuiAlert>\n}\n\n export default  function CommentEditor(props) {\n  const [value, setValue] = React.useState(\"\");\n    const [selectedTab, setSelectedTab] = React.useState(\"write\");    \n    const [open, setOpen] = React.useState(false);\n    const [comment, setComment] = React.useState({});\n   \n    const converter = new Showdown.Converter({\n      tables: true,\n      simplifiedAutoLink: true,\n      strikethrough: true,\n      tasklists: true\n    });\n\n\n\n    const submitComment= async (e) => {\n        e.preventDefault();           \n          const UserId= localStorage.getItem(\"userId\")\n          const DisplayName= localStorage.getItem(\"displayName\");\n    \n          console.log(value , ' value ==> ')\n\n          if(value) {\n             const data= await signUP( {\n                \"input\":{\n                        \"content\": value,\n                        \"author\": DisplayName, \n                        \"userId\":UserId,\n                        \"clientMutationId\": \"createComment\",\n                        \"commentOn\": props.postid\n                }\n              }  \n            ).then(\n                (data)=>{\n                setComment( ()=>{ return {data} })\n              }\n            ).catch((error)=> setComment(()=> { return {error}}))\n            \n            setOpen(()=> true );\n\n            }\n        }\n\n      const  onChangeHandler = (data)=>{\n         setValue(data)\n      }\n      const handleClose = () => {      \n         setOpen(false);\n      };\n      console.log(comment, ' comment ');\n\n      const ShowAlertError= (comment.error)? comment.error.response.errors[0].message:'submit'\n      \n    return (\n        <Fragment key={props.keyId}> \n      \n       \n          <form  id='formSubmit' onSubmit={submitComment} > \n            <ReactMde\n                  value={value}\n                  onChange={onChangeHandler}\n                  selectedTab={selectedTab}\n                  onTabChange={setSelectedTab}\n                  generateMarkdownPreview={markdown =>\n                    Promise.resolve(converter.makeHtml(markdown))\n                  }\n                  childProps={{\n                    writeButton: {\n                      tabIndex: -1\n                    }\n                  }}\n                />\n              \n              <Button type=\"submit\" className={style.productButton} size=\"small\">\n                              Submit  \n              </Button>\n            \n          </form>      \n          <Snackbar open={open} anchorOrigin={ \n                    {   vertical: 'top', \n                        horizontal: 'center'\n                       }\n                    } \n                    autoHideDuration={6000} onClose={handleClose}>\n                      <Alert onClose={handleClose} show={ShowAlertError} severity= {(comment.error)? \"error\":'Your Comment Under Review'} ></Alert>\n          </Snackbar> \n        </Fragment>\n    );\n  }"]},"metadata":{},"sourceType":"module"}