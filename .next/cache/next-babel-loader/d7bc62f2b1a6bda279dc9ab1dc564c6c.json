{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport style from '../Component/css/Read.module.scss';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { parseISO, format } from 'date-fns';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useRouter } from 'next/router';\nimport ReadCard from \"../Component/Read/ReadCard\";\nimport { NextSeo, BlogJsonLd } from 'next-seo'; // custom Error Component\n\nimport ErrorComponent from '../Component/ErrorComponent';\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nexport var __N_SSP = true;\nexport default function Read(props) {\n  var getData = props.getData,\n      concerter = props.concerter;\n  console.log(getData, ' getData ');\n  console.log(props, ' props ');\n  console.log(concerter, ' concerter '); // if (concerter) {\n  //   return   <ErrorComponent concerter={concerter}/>\n  // }\n  // else{ \n\n  var data = getData.data;\n  var post = data.post;\n  var postID = post.id;\n  var date = parseISO(post.date);\n  return __jsx(React.Fragment, null, __jsx(NextSeo, {\n    title: post.title,\n    description: post.excerpt\n  }), __jsx(BlogJsonLd, {\n    url: \"https://www.rajdeepsingh.dev/\",\n    title: post.title,\n    images: [post.featuredImage.sourceUrl],\n    datePublished: post.dateGmt,\n    dateModified: post.modifiedGmt,\n    authorName: post.author.name,\n    description: post.excerpt\n  }), __jsx(Head, null, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"wp-block-library-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"wp-block-library-theme-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"icon\",\n    href: post.featuredImage.sourceUrl,\n    type: \"image/x-icon\"\n  })), __jsx(\"div\", {\n    className: style.outerCard\n  }, post.categories.edges.map(function (postCat) {\n    console.log(postCat, ' post Categories ');\n    return __jsx(Typography, {\n      key: postCat.id,\n      component: \"h6\",\n      variant: \"h6\"\n    }, \"# \", postCat.node.name);\n  }), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h1\",\n    dangerouslySetInnerHTML: {\n      __html: post.title\n    }\n  }), __jsx(\"div\", {\n    className: style.cardBox\n  }, __jsx(Avatar, {\n    alt: post.author.name,\n    src: post.author.avatar.url,\n    className: style.imageSize\n  }), __jsx(Typography, {\n    component: \"h5\",\n    title: post.author.name,\n    variant: \"h5\",\n    className: style.cardBoxAuthorTitle\n  }, post.author.name)), __jsx(CardMedia, {\n    component: \"img\",\n    alt: post.featuredImage.altText,\n    image: post.featuredImage.sourceUrl,\n    title: post.featuredImage.title,\n    className: style.cardArticalImage\n  }), __jsx(\"time\", {\n    className: \" MuiTypography-root MuiTypography-h5\",\n    dateTime: \"2020-02-18T07:54:18\"\n  }, format(date, 'LLLL\td, yyyy')), __jsx(\"div\", {\n    key: post.id,\n    className: style.innerHtmlFor,\n    dangerouslySetInnerHTML: {\n      __html: post.content\n    }\n  })), __jsx(\"div\", {\n    className: style.writeComment\n  }, post.commentStatus ? __jsx(Link, {\n    href: \"/comments/?id=\".concat(post.id),\n    as: \"/Comment/\".concat(post.slug, \"-\").concat(post.id)\n  }, __jsx(\"a\", null, \" \", post.commentCount ? post.commentCount : 0, \" Comment Now \")) : __jsx(Link, null, __jsx(\"a\", null, \" Comment Desible \"))), __jsx(Grid, {\n    className: style.grid,\n    container: true\n  }, post.categories.nodes ? __jsx(Grid, {\n    item: true,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    xs: 12\n  }, __jsx(Typography, {\n    className: style.MoreStory,\n    component: \"h4\",\n    variant: \"h3\"\n  }, \"More Story\")) : \"\", post.categories.nodes[0].posts.nodes.map(function (data, i) {\n    return postID === data.id ? '' : __jsx(ReadCard, {\n      key: i,\n      post: data\n    });\n  })));\n}\n_c = Read;\n\nvar _c;\n\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/[Read].js"],"names":["React","Component","style","Typography","Container","CardMedia","Grid","Card","CardActionArea","CardContent","CardActions","parseISO","format","Avatar","useRouter","ReadCard","NextSeo","BlogJsonLd","ErrorComponent","Link","gql","Head","Read","props","getData","concerter","console","log","data","post","postID","id","date","title","excerpt","featuredImage","sourceUrl","dateGmt","modifiedGmt","author","name","outerCard","categories","edges","map","postCat","node","__html","cardBox","avatar","url","imageSize","cardBoxAuthorTitle","altText","cardArticalImage","innerHtmlFor","content","writeComment","commentStatus","slug","commentCount","grid","nodes","MoreStory","posts","i"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport style from '../Component/css/Read.module.scss'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { parseISO, format } from 'date-fns'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {POST_READ} from \"../Component/graphalQurey\"\r\nimport { useRouter } from 'next/router'\r\nimport {client} from \"../Component/apollo-client\";\r\nimport ReadCard from \"../Component/Read/ReadCard\";\r\nimport { NextSeo,BlogJsonLd } from 'next-seo';\r\n// custom Error Component\r\nimport ErrorComponent from '../Component/ErrorComponent'\r\n\r\n\r\nimport Link from 'next/link';\r\nimport gql from 'graphql-tag';\r\nimport Head from 'next/head'\r\n\r\nexport default function Read(props) {\r\n  const { getData,concerter }=props\r\nconsole.log( getData , ' getData ')\r\nconsole.log( props , ' props ')\r\nconsole.log( concerter , ' concerter ')\r\n \r\n  // if (concerter) {\r\n  //   return   <ErrorComponent concerter={concerter}/>\r\n \r\n  // }\r\n  // else{ \r\n    \r\n    const {data} = getData \r\n    const {post} = data\r\n    const postID= post.id\r\n    const date = parseISO(post.date)\r\n\r\n\r\n    return (\r\n      <> \r\n                <NextSeo\r\n                    title={post.title}\r\n                    description={post.excerpt}\r\n                /> \r\n                 <BlogJsonLd\r\n                    url=\"https://www.rajdeepsingh.dev/\"\r\n                    title={post.title}\r\n                    images={[post.featuredImage.sourceUrl]}\r\n                    datePublished={post.dateGmt}\r\n                    dateModified={post.modifiedGmt}\r\n                    authorName={post.author.name}\r\n                    description={post.excerpt}\r\n                 />\r\n            <Head> \r\n              <link rel='stylesheet' id='wp-block-library-css'  href='https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2' media='all' />\r\n              <link rel='stylesheet' id='wp-block-library-theme-css'  href='https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2' media='all' />\r\n              <link rel='icon' href={post.featuredImage.sourceUrl} type='image/x-icon'/>\r\n            </Head> \r\n  \r\n          <div className={style.outerCard}>\r\n                  {\r\n                    post.categories.edges.map(\r\n                      (postCat)=>{ \r\n                        console.log(postCat , ' post Categories ')\r\n                        return  <Typography key={postCat.id} component=\"h6\" variant=\"h6\">\r\n                      # {postCat.node.name} \r\n                      </Typography>}\r\n                    )\r\n                  }\r\n                  \r\n                  <Typography component=\"h1\" variant=\"h1\" dangerouslySetInnerHTML={{ __html: post.title }}>\r\n                  </Typography>           \r\n                  <div className={style.cardBox}>\r\n                      <Avatar alt={post.author.name} src={post.author.avatar.url}  className={style.imageSize} />\r\n                      <Typography component=\"h5\" title={post.author.name} variant=\"h5\" className={style.cardBoxAuthorTitle}>\r\n                        {post.author.name} \r\n                      </Typography>\r\n                  </div>\r\n                  \r\n                  <CardMedia\r\n                      component=\"img\"\r\n                      alt={post.featuredImage.altText}\r\n                      image={post.featuredImage.sourceUrl}\r\n                      title={post.featuredImage.title}\r\n                      className={style.cardArticalImage}\r\n                  />\r\n                  <time className=\" MuiTypography-root MuiTypography-h5\" dateTime={\"2020-02-18T07:54:18\"} >{format(date, 'LLLL\td, yyyy')}</time>\r\n                \r\n                  <div key={  post.id} className={style.innerHtmlFor} dangerouslySetInnerHTML={{ __html: post.content }}></div>                  \r\n              </div>\r\n\r\n          <div className={style.writeComment}>\r\n          {\r\n            (post.commentStatus)?\r\n                <Link href={`/comments/?id=${post.id}`} as={ `/Comment/${post.slug}-${post.id}`}> \r\n                <a> { post.commentCount? post.commentCount : 0} Comment Now </a> \r\n              </Link> :\r\n            <Link> \r\n                <a> Comment Desible </a> \r\n            </Link>\r\n          }   \r\n          </div>\r\n\r\n          <Grid className={style.grid} container  >\r\n\r\n          { (post.categories.nodes)?\r\n              <Grid item sm={12} md={12} lg={12} xs={12}>   \r\n                    <Typography className={style.MoreStory} component=\"h4\" variant=\"h3\">\r\n                        More Story \r\n                    </Typography>\r\n              </Grid>:\"\"\r\n         }\r\n          \r\n          {      \r\n              post.categories.nodes[0].posts.nodes.map(function(data, i) {                     \r\n                    return (postID === data.id)? '' : <ReadCard key={i} post={data}/>\r\n                    }    \r\n              ) \r\n            }               \r\n          </Grid>\r\n      </>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport const  getServerSideProps =  async ({  query, asPath }) =>{               \r\n\r\n        if(query.slug){\r\n\r\n          const id=query.slug\r\n          console.log(id , ' id here 2 ')\r\n          \r\n          try {\r\n                const getData= await client.query(({\r\n                    query:POST_READ,\r\n                    variables:{id}\r\n                }))\r\n                console.log(getData , ' 3 inside ssr')\r\n                return { props: { getData}}\r\n          }\r\n          catch(error){\r\n             console.log(error , ' 5 error read ')\r\n            // const concerter = JSON.stringify(error)\r\n            //  return { props: {concerter} }\r\n          }\r\n        }\r\n        else {\r\n            const id= query.Read.split( '-' ).pop()\r\n            console.log(id , ' 5 id here ')\r\n            try {\r\n              const getData= await client.query(({\r\n                  query:POST_READ,\r\n                  variables:{id}\r\n              }))\r\n\r\n              consol.log(getData , ' 6  inside read in ssr check it  ')\r\n              return {\r\n                 props:{ getData }\r\n              }\r\n\r\n            }\r\n            catch(error){\r\n              //    const concerter = JSON.stringify(error)\r\n              // return { \r\n              //    props: {concerter}\r\n              // }\r\n            }\r\n          }    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}