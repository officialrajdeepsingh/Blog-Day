{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport style from '../Component/css/Read.module.scss';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { parseISO, format } from 'date-fns';\nimport Avatar from '@material-ui/core/Avatar';\nimport { POST_READ } from \"../Component/graphalQurey\";\nimport { useRouter } from 'next/router';\nimport { client } from \"../Component/apollo-client\";\nimport ReadCard from \"../Component/Read/ReadCard\";\nimport { NextSeo } from 'next-seo';\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nexport default function Read(props) {\n  const {\n    getData,\n    statusCode\n  } = props;\n  const {\n    data\n  } = getData;\n  const {\n    post\n  } = data;\n  const postID = post.id;\n  const date = parseISO(post.date);\n  console.log(post.categories.nodes, ' post.categories.nodes ');\n\n  if (statusCode) {\n    return __jsx(Error, {\n      statusCode: statusCode\n    });\n  } else {\n    return __jsx(React.Fragment, null, __jsx(NextSeo, {\n      title: post.title,\n      description: post.excerpt\n    }), __jsx(Head, null, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      id: \"wp-block-library-css\",\n      href: \"https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2\",\n      media: \"all\"\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      id: \"wp-block-library-theme-css\",\n      href: \"https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2\",\n      media: \"all\"\n    }), __jsx(\"link\", {\n      rel: \"icon\",\n      href: \"favicon.ico\",\n      type: \"image/x-icon\"\n    })), __jsx(\"div\", {\n      className: style.outerCard\n    }, __jsx(Typography, {\n      component: \"h5\",\n      variant: \"subtitle1\"\n    }, \"#\", post.categories.edges[0].node.name), __jsx(Typography, {\n      component: \"h1\",\n      variant: \"h1\",\n      dangerouslySetInnerHTML: {\n        __html: post.title\n      }\n    }), __jsx(\"div\", {\n      className: style.cardBox\n    }, __jsx(Avatar, {\n      alt: post.author.name,\n      src: post.author.avatar.url,\n      className: style.imageSize\n    }), __jsx(Typography, {\n      component: \"h5\",\n      title: post.author.name,\n      variant: \"h5\",\n      className: style.cardBoxAuthorTitle\n    }, post.author.name)), __jsx(CardMedia, {\n      component: \"img\",\n      alt: post.featuredImage.altText,\n      image: post.featuredImage.sourceUrl,\n      title: post.featuredImage.title,\n      className: style.cardArticalImage\n    }), __jsx(\"time\", {\n      className: \" MuiTypography-root MuiTypography-h5\",\n      dateTime: \"2020-02-18T07:54:18\"\n    }, format(date, 'LLLL\td, yyyy')), __jsx(\"div\", {\n      key: post.id,\n      className: style.innerHtmlFor,\n      dangerouslySetInnerHTML: {\n        __html: post.content\n      }\n    })), __jsx(\"div\", {\n      className: style.writeComment\n    }, post.commentStatus ? __jsx(Link, {\n      href: `/comments/?id=${post.id}`,\n      as: `/Comment/${post.slug}-${post.id}`\n    }, __jsx(\"a\", null, \" \", post.commentCount ? post.commentCount : 0, \" Comment Now \")) : __jsx(Link, null, __jsx(\"a\", null, \" Comment Desible \"))), __jsx(Grid, {\n      className: style.grid,\n      container: true\n    }, post.categories.nodes ? __jsx(Grid, {\n      item: true,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      xs: 12\n    }, __jsx(Typography, {\n      className: style.MoreStory,\n      component: \"h4\",\n      variant: \"h3\"\n    }, \"More Story\")) : \"\", post.categories.nodes[0].posts.nodes.map(function (data, i) {\n      return postID === data.id ? '' : __jsx(ReadCard, {\n        key: i,\n        post: data\n      });\n    })));\n  }\n}\nexport const getServerSideProps = async ({\n  pathname,\n  query,\n  asPath,\n  req,\n  res,\n  err\n}) => {\n  if (query.slug) {\n    const id = query.slug;\n\n    try {\n      const getData = await client.query({\n        query: POST_READ,\n        variables: {\n          id\n        }\n      });\n      return {\n        props: {\n          getData\n        }\n      };\n    } catch (error) {\n      return {\n        props: {\n          statusCode: 404\n        }\n      };\n    }\n  } else {\n    const id = query.Read.split('-').pop();\n\n    try {\n      const getData = await client.query({\n        query: POST_READ,\n        variables: {\n          id\n        }\n      });\n      return {\n        props: {\n          getData\n        }\n      };\n    } catch (error) {\n      return {\n        props: {\n          statusCode: 404\n        }\n      };\n    }\n  }\n};","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/[Read].js"],"names":["React","Component","style","Typography","Container","CardMedia","Grid","Card","CardActionArea","CardContent","CardActions","parseISO","format","Avatar","POST_READ","useRouter","client","ReadCard","NextSeo","Link","gql","Head","Read","props","getData","statusCode","data","post","postID","id","date","console","log","categories","nodes","title","excerpt","outerCard","edges","node","name","__html","cardBox","author","avatar","url","imageSize","cardBoxAuthorTitle","featuredImage","altText","sourceUrl","cardArticalImage","innerHtmlFor","content","writeComment","commentStatus","slug","commentCount","grid","MoreStory","posts","map","i","getServerSideProps","pathname","query","asPath","req","res","err","variables","error","split","pop"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport style from '../Component/css/Read.module.scss'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { parseISO, format } from 'date-fns'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {POST_READ} from \"../Component/graphalQurey\"\r\nimport { useRouter } from 'next/router'\r\nimport {client} from \"../Component/apollo-client\";\r\nimport ReadCard from \"../Component/Read/ReadCard\";\r\nimport { NextSeo } from 'next-seo';\r\n\r\n\r\nimport Link from 'next/link';\r\nimport gql from 'graphql-tag';\r\nimport Head from 'next/head'\r\n\r\n\r\nexport default function Read(props) {\r\n  const { getData,statusCode }= props;   \r\n  const {data} = getData\r\n  const {post} = data\r\n  const postID= post.id\r\n  const date = parseISO(post.date)\r\n  console.log(post.categories.nodes, ' post.categories.nodes ')\r\n  if (statusCode) {\r\n    return <Error statusCode={statusCode} />\r\n  }else{\r\n    return (\r\n      <> \r\n                <NextSeo\r\n                    title={post.title}\r\n                    description={post.excerpt}\r\n                /> \r\n           <Head> \r\n              <link rel='stylesheet' id='wp-block-library-css'  href='https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2' media='all' />\r\n              <link rel='stylesheet' id='wp-block-library-theme-css'  href='https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2' media='all' />\r\n              {/* <link rel='stylesheet' id='genericons-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/genericons/genericons.css?ver=3.2' type='text/css' media='all' /> */}\r\n              {/* <link rel='stylesheet' id='fontawesome-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/framework/font-awesome/css/font-awesome.min.css?ver=1' type='text/css' media='all' /> */}\r\n              {/* <link rel='stylesheet' id='asalah-plugins-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/pluginstyle.css?ver=1' type='text/css' media='all' />\r\n              <link rel='stylesheet' id='asalah-style-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/style.css?ver=3.530' type='text/css' media='all' /> */}\r\n            \r\n            <link rel='icon' href='favicon.ico' type='image/x-icon'/>\r\n\r\n            </Head> \r\n  \r\n          <div className={style.outerCard}>\r\n                  <Typography component=\"h5\" variant=\"subtitle1\">\r\n                      #{post.categories.edges[0].node.name}\r\n                  </Typography>\r\n                  <Typography component=\"h1\" variant=\"h1\" dangerouslySetInnerHTML={{ __html: post.title }}>\r\n                  </Typography>           \r\n                  <div className={style.cardBox}>\r\n                      <Avatar alt={post.author.name} src={post.author.avatar.url}  className={style.imageSize} />\r\n                      <Typography component=\"h5\" title={post.author.name} variant=\"h5\" className={style.cardBoxAuthorTitle}>\r\n                        {post.author.name} \r\n                      </Typography>\r\n                  </div>\r\n                  \r\n                  <CardMedia\r\n                      component=\"img\"\r\n                      alt={post.featuredImage.altText}\r\n                      image={post.featuredImage.sourceUrl}\r\n                      title={post.featuredImage.title}\r\n                      className={style.cardArticalImage}\r\n                  />\r\n                  <time className=\" MuiTypography-root MuiTypography-h5\" dateTime={\"2020-02-18T07:54:18\"} >{format(date, 'LLLL\td, yyyy')}</time>\r\n                \r\n                  <div key={  post.id} className={style.innerHtmlFor} dangerouslySetInnerHTML={{ __html: post.content }}></div>                  \r\n              </div>\r\n\r\n          <div className={style.writeComment}>\r\n          {\r\n            (post.commentStatus)?\r\n                <Link href={`/comments/?id=${post.id}`} as={ `/Comment/${post.slug}-${post.id}`}> \r\n                <a> { post.commentCount? post.commentCount : 0} Comment Now </a> \r\n              </Link> :\r\n            <Link> \r\n                <a> Comment Desible </a> \r\n            </Link>\r\n          }   \r\n          </div>\r\n\r\n          <Grid className={style.grid} container  >\r\n\r\n          { (post.categories.nodes)?\r\n              <Grid item sm={12} md={12} lg={12} xs={12}>   \r\n                    <Typography className={style.MoreStory} component=\"h4\" variant=\"h3\">\r\n                        More Story \r\n                    </Typography>\r\n              </Grid>:\"\"\r\n         }\r\n          \r\n          {      \r\n              post.categories.nodes[0].posts.nodes.map(function(data, i) {                     \r\n                    return (postID === data.id)? '' : <ReadCard key={i} post={data}/>\r\n                    }    \r\n              ) \r\n            }               \r\n          </Grid> \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport const  getServerSideProps =  async ({ pathname, query, asPath, req, res, err }) =>{               \r\n        \r\n        if(query.slug){\r\n          const id=query.slug\r\n              try {\r\n                const getData= await client.query(({\r\n                    query:POST_READ,\r\n                    variables:{id}\r\n                }))\r\n                return {props:{ getData}}\r\n          }\r\n          catch(error){\r\n            return { props: { statusCode: 404 } }\r\n          }\r\n        }\r\n        else {\r\n            const id= query.Read.split( '-' ).pop()\r\n            try {\r\n              const getData= await client.query(({\r\n                  query:POST_READ,\r\n                  variables:{id}\r\n              }))\r\n              return {props:{ getData}}\r\n\r\n            }\r\n            catch(error){\r\n              return { props: { statusCode: 404 } }\r\n            }\r\n          }    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}