{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../Component/Layout';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from 'next/link';\nimport style from '../Component/css/Signup.module.scss';\nimport signupImage from '../Component/asset/signupImage.png';\nimport MuiAlert from '@material-ui/lab/Alert'; // with SWR and graphql-request\n\nimport { request } from 'graphql-request';\nimport { SIGNUP_MUTATION } from \"../Component/graphalQurey\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { useRouter } from 'next/router';\n\nvar signUP = function signUP(userData) {\n  return request('https://www.rajdeepsingh.dev/graphql', SIGNUP_MUTATION, userData);\n};\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: props.show\n    }\n  }));\n}\n\nexport default function Signup(props) {\n  var router = useRouter();\n\n  var _useState = useState(\"\"),\n      passward = _useState[0],\n      setPassward = _useState[1];\n\n  var _useState2 = useState(false),\n      showPassword = _useState2[0],\n      setShowPassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      showconfirmPassword = _useState3[0],\n      setShowconfirmPassword = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      confirmPassword = _useState4[0],\n      setConfirmPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      matchPassward = _useState5[0],\n      setMatchPassward = _useState5[1];\n\n  var _useState6 = useState(true),\n      checkbox = _useState6[0],\n      setCheckbox = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      userName = _useState7[0],\n      setuserName = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      gmail = _useState8[0],\n      setgmail = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      displayName = _useState9[0],\n      setDisplayName = _useState9[1];\n\n  var _useState10 = useState(false),\n      open = _useState10[0],\n      setOpen = _useState10[1];\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      getSubmitData = _React$useState2[0],\n      setGetSubmitData = _React$useState2[1]; // form  handler function \n\n\n  var handleChange = function handleChange(event) {\n    setPassward(event.target.value);\n  };\n\n  var handleClickShowPassword = function handleClickShowPassword() {\n    setShowPassword(!showPassword);\n  };\n\n  var confirmHandleChange = function confirmHandleChange(event) {\n    setConfirmPassword(event.target.value);\n\n    if (passward === event.target.value) {\n      setMatchPassward(false);\n    } else {\n      setMatchPassward(true);\n    }\n  };\n\n  var confirmHandleClickShowPassword = function confirmHandleClickShowPassword() {\n    setShowconfirmPassword(!showPassword);\n  };\n\n  var checkboxChange = function checkboxChange() {\n    setCheckbox(!checkbox);\n  };\n\n  var handleMouseDownPassword = function handleMouseDownPassword() {};\n\n  var submitFormUser = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.next = 3;\n              return signUP({\n                \"userData\": {\n                  \"username\": userName,\n                  \"email\": gmail,\n                  \"password\": passward,\n                  \"displayName\": displayName,\n                  \"clientMutationId\": \"registerUser\",\n                  \"registered\": \"true\"\n                }\n              }).then(function (data) {\n                setGetSubmitData(function () {\n                  return {\n                    data: data\n                  };\n                });\n              })[\"catch\"](function (error) {\n                setGetSubmitData(function () {\n                  return {\n                    error: error\n                  };\n                });\n              });\n\n            case 3:\n              data = _context.sent;\n              setOpen(function () {\n                return true;\n              }); //  data: undefined\n\n              if (!data === \"undefined\") {\n                localStorage.setItem(\"authToken\", data.registerUser.user.jwtAuthToken);\n                localStorage.setItem(\"userId\", data.registerUser.user.userId);\n                localStorage.setItem(\"displayName\", data.registerUser.user.username);\n                router.push(\"/\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitFormUser(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var ShowAlertError = getSubmitData.error ? getSubmitData.error.response.errors[0].message : 'submit';\n  return __jsx(React.Fragment, null, __jsx(NextSeo, {\n    title: \"Signup -- Learn With me \",\n    description: \"Signup  page \"\n  }), __jsx(Container, {\n    className: style.containerBox\n  }, __jsx(Card, {\n    className: style.root\n  }, __jsx(\"div\", {\n    className: style.innerCard\n  }, __jsx(\"div\", {\n    className: style.details\n  }, __jsx(CardContent, {\n    className: style.cardContentInner\n  }, __jsx(Typography, {\n    className: style.typeH5,\n    component: \"h6\",\n    variant: \"h6\"\n  }, \"Welcome Back!\"), __jsx(Typography, {\n    className: style.typeH3,\n    component: \"h3\",\n    variant: \"h2\"\n  }, \"Learn With Me\"), __jsx(\"form\", {\n    //  on Submit handler  \n    onSubmit: submitFormUser,\n    className: style.form,\n    noValidate: true,\n    autoComplete: \"on\"\n  }, __jsx(TextField, {\n    autoComplete: \"name\",\n    onChange: function onChange(e) {\n      return setDisplayName(e.target.value);\n    },\n    id: \"fullName\",\n    className: style.textControl,\n    placeholder: \" Exmple:Rajdeep Singh  \",\n    label: \"Full Name\"\n  }), __jsx(TextField, {\n    autoComplete: \"username\",\n    onChange: function onChange(e) {\n      return setuserName(e.target.value);\n    },\n    id: \"userName\",\n    className: style.textControl,\n    placeholder: \" Exmple:Officialrajdeepsingh  \",\n    label: \"User Name\"\n  }), __jsx(TextField, {\n    autoComplete: \"email\",\n    onChange: function onChange(e) {\n      return setgmail(e.target.value);\n    },\n    id: \"userGmail\",\n    className: style.textControl,\n    placeholder: \" 123@gmail.com  \",\n    label: \"Gmail\"\n  }), __jsx(FormControl, {\n    className: style.textControl\n  }, __jsx(InputLabel, {\n    htmlFor: \"password\"\n  }, \"Password\"), __jsx(Input, {\n    id: \"password\",\n    type: showPassword ? 'text' : 'password',\n    value: passward,\n    onChange: handleChange,\n    placeholder: \"Exmple: Rb@1%2^3*56\",\n    autoComplete: \"new-password\",\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword\n    }, showPassword ? __jsx(Visibility, null) : __jsx(VisibilityOff, null)))\n  })), __jsx(FormControl, {\n    className: style.textControl\n  }, __jsx(InputLabel, {\n    htmlFor: \"confirmPassword\"\n  }, \"Confirm Password\"), __jsx(Input, {\n    id: \"confirmPassword\",\n    type: showconfirmPassword ? 'text' : 'password',\n    value: confirmPassword,\n    onChange: confirmHandleChange,\n    error: matchPassward,\n    paceholder: \"Exmple Confirm Passward :  Rb@1%2^3*56\",\n    autoComplete: \"new-password\",\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: confirmHandleClickShowPassword,\n      onMouseDown: handleMouseDownPassword\n    }, showPassword ? __jsx(Visibility, null) : __jsx(VisibilityOff, null)))\n  })), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: checkbox,\n      onChange: checkboxChange,\n      name: \"checkBox\",\n      color: \"primary\",\n      className: style.checkBox\n    }),\n    label: \"I Agree to Terms & Conditions \"\n  }), __jsx(Button, {\n    type: \"submit\" //  send data on this button \n    ,\n    className: style.productButton,\n    size: \"small\"\n  }, \"Submit\"))), __jsx(\"div\", {\n    className: style.typeLogin\n  }, __jsx(React.Fragment, null, __jsx(Typography, {\n    className: style.anchorLink,\n    component: \"h6\",\n    variant: \"h6\"\n  }, \"Login With Me\"), __jsx(Link, {\n    href: \"/login\"\n  }, __jsx(\"a\", null, \" Click Here  \"))))), __jsx(CardMedia, {\n    component: \"img\",\n    alt: \"signup Image\",\n    image: signupImage,\n    title: \"signup Now \",\n    className: style.cardImage\n  })))), __jsx(Snackbar, {\n    open: open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 60000,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    show: ShowAlertError,\n    severity: getSubmitData.error ? \"error\" : 'success'\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}