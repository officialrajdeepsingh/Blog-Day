{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, StrictMode } from 'react';\nimport Layout from '../Component/Layout';\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection';\nimport Artical from '../Component/Artical/Artical';\nimport { POST_QUERY } from \"../Component/graphalQurey\";\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport { client } from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\nimport Error from 'next/error';\nexport default function Index(props) {\n  const {\n    getData\n  } = props;\n  const {\n    data\n  } = getData;\n  const {\n    posts\n  } = data;\n  if (!getData) return __jsx(Error, {\n    statusCode: 404\n  });\n  return __jsx(Grid, {\n    component: \"article\",\n    container: true\n  }, posts.edges.map((post, i) => {\n    if (i === 0) {\n      return __jsx(MainSection, {\n        key: post.node.id,\n        post: post\n      });\n    } else {\n      return __jsx(Artical, {\n        key: post.node.id,\n        post: post\n      });\n    }\n  }));\n}\nexport const getServerSideProps = async ({\n  res\n}) => {\n  try {\n    const getData = await client.query({\n      query: POST_QUERY\n    });\n    const errorCode = getData.ok ? false : getData.statusCode;\n    return {\n      props: {\n        errorCode,\n        stars: json.stargazers_count\n      }\n    };\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/index.js"],"names":["React","Component","StrictMode","Layout","Grid","MainSection","Artical","POST_QUERY","Myapp","Head","client","ErrorBoundaries","Error","Index","props","getData","data","posts","edges","map","post","i","node","id","getServerSideProps","res","query","errorCode","ok","statusCode","stars","json","stargazers_count","error","console"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAAQC,UAAR,QAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,MAAR,QAAqB,4BAArB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,OAAOC,KAAP,MAAkB,YAAlB;AAGA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACC,QAAM;AAACE,IAAAA;AAAD,MAASD,OAAf;AACD,QAAM;AAACE,IAAAA;AAAD,MAAUD,IAAhB;AAEA,MAAI,CAACD,OAAL,EAAc,OAAO,MAAC,KAAD;AAAO,IAAA,UAAU,EAAE;AAAnB,IAAP;AAEhB,SACY,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,SAAhB;AAA0B,IAAA,SAAS;AAAnC,KAEME,KAAK,CAACC,KAAN,CAAYC,GAAZ,CACE,CAACC,IAAD,EAAOC,CAAP,KAAY;AACN,QAAGA,CAAC,KAAK,CAAT,EAAY;AACV,aAAO,MAAC,WAAD;AAAa,QAAA,GAAG,EAAED,IAAI,CAACE,IAAL,CAAUC,EAA5B;AAAgC,QAAA,IAAI,EAAEH;AAAtC,QAAP;AACD,KAFD,MAEO;AACL,aAAO,MAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,IAAI,CAACE,IAAL,CAAUC,EAAxB;AAA6B,QAAA,IAAI,EAAEH;AAAnC,QAAP;AACD;AACJ,GAPL,CAFN,CADZ;AAgBD;AAED,OAAO,MAAOI,kBAAkB,GAAI,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAgB;AAClD,MAAG;AACE,UAAMV,OAAO,GAAE,MAAML,MAAM,CAACgB,KAAP,CAAc;AAChCA,MAAAA,KAAK,EAACnB;AAD0B,KAAd,CAArB;AAGC,UAAMoB,SAAS,GAAGZ,OAAO,CAACa,EAAR,GAAa,KAAb,GAAqBb,OAAO,CAACc,UAA/C;AAEA,WAAO;AACLf,MAAAA,KAAK,EAAE;AAAEa,QAAAA,SAAF;AAAaG,QAAAA,KAAK,EAAEC,IAAI,CAACC;AAAzB;AADF,KAAP;AAKH,GAXH,CAYE,OAAMC,KAAN,EAAa;AACbC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AAEF,CAjBM","sourcesContent":["\nimport React, { Component , StrictMode } from 'react';\nimport Layout from '../Component/Layout'\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection'\nimport Artical from '../Component/Artical/Artical'\nimport {POST_QUERY} from \"../Component/graphalQurey\"\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport {client} from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\n\nimport Error from 'next/error'\n\n\nexport default function Index(props) {\n    const { getData }= props;   \n     const {data} = getData\n    const {posts} = data\n\n    if (!getData) return <Error statusCode={404} />;\n\n  return (\n              <Grid component='article' container >\n                  {\n                    posts.edges.map(\n                      (post, i) =>{\n                            if(i === 0 ){\n                              return <MainSection key={post.node.id} post={post} />\n                            } else {\n                              return <Artical key={post.node.id}  post={post} />   \n                            }\n                        }\n                    )\n                  }\n              </Grid>\n   \n  )\n}\n\nexport const  getServerSideProps =  async ({res}) =>{\n  try{\n       const getData= await client.query(({\n          query:POST_QUERY    \n        }))   \n        const errorCode = getData.ok ? false : getData.statusCode\n      \n        return {\n          props: { errorCode, stars: json.stargazers_count },\n        }\n       \n        \n    }\n    catch(error) {\n    console.error(error )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}