{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../Component/Layout';\nimport style from '../Component/css/Read.module.scss';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { parseISO, format } from 'date-fns';\nimport Avatar from '@material-ui/core/Avatar';\nimport { POST_READ } from \"../Component/graphalQurey\";\nimport { useRouter } from 'next/router';\nimport { client } from \"../Component/apollo-client\";\nimport ReadCard from \"../Component/Read/ReadCard\";\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nexport default function Read(props) {\n  const {\n    data\n  } = props; // const postID= data.data.post.id\n\n  console.log(props);\n  const date = parseISO(data.data.post.date);\n  return __jsx(Layout, null, __jsx(Head, null, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"wp-block-library-css\",\n    href: \"https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"wp-block-library-theme-css\",\n    href: \"https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"genericons-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/genericons/genericons.css?ver=3.2\",\n    type: \"text/css\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"fontawesome-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/framework/font-awesome/css/font-awesome.min.css?ver=1\",\n    type: \"text/css\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"asalah-plugins-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/pluginstyle.css?ver=1\",\n    type: \"text/css\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"asalah-style-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/style.css?ver=3.530\",\n    type: \"text/css\",\n    media: \"all\"\n  })), __jsx(\"div\", {\n    className: style.outerCard\n  }, __jsx(Typography, {\n    component: \"h5\",\n    variant: \"subtitle1\"\n  }, \"#\", data.data.post.categories.edges[0].node.name), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h1\",\n    dangerouslySetInnerHTML: {\n      __html: data.data.post.title\n    }\n  }), __jsx(\"div\", {\n    className: style.cardBox\n  }, __jsx(Avatar, {\n    alt: data.data.post.author.name,\n    src: data.data.post.author.avatar.url,\n    className: style.imageSize\n  }), __jsx(Typography, {\n    component: \"h5\",\n    title: data.data.post.author.name,\n    variant: \"h5\",\n    className: style.cardBoxAuthorTitle\n  }, data.data.post.author.name)), __jsx(CardMedia, {\n    component: \"img\",\n    alt: data.data.post.featuredImage.node.altText,\n    image: data.data.post.featuredImage.node.sourceUrl,\n    title: data.data.post.featuredImage.node.title,\n    className: style.cardArticalImage\n  }), __jsx(\"time\", {\n    className: \" MuiTypography-root MuiTypography-h5\",\n    dateTime: \"2020-02-18T07:54:18\"\n  }, format(date, 'LLLL\td, yyyy')), __jsx(\"div\", {\n    key: data.data.id,\n    className: style.innerHtmlFor,\n    dangerouslySetInnerHTML: {\n      __html: data.data.post.content\n    }\n  })), __jsx(\"div\", {\n    className: style.writeComment\n  }, data.data.post.commentStatus ? __jsx(Link, {\n    href: `/comments/?id=${data.data.post.id}`,\n    as: `/Comment/${data.data.post.slug}-${data.data.post.id}`\n  }, __jsx(\"a\", null, \" \", data.data.post.commentCount ? data.data.post.commentCount : 0, \" Comment Now \")) : __jsx(Link, null, __jsx(\"a\", null, \" Comment Desible \"))), __jsx(Grid, {\n    className: style.grid,\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    xs: 12\n  }, __jsx(Typography, {\n    className: style.MoreStory,\n    component: \"h4\",\n    variant: \"h3\"\n  }, \"More Story\")), data.data.post.categories.nodes[0].posts.nodes.map(function (data, i) {\n    return 1 === data.id ? '' : __jsx(ReadCard, {\n      key: i,\n      post: data\n    });\n  })));\n}\n\nRead.getInitialProps = async ({\n  pathname,\n  query,\n  asPath,\n  req,\n  res,\n  err\n}) => {\n  if (query.slug) {\n    const id = query.slug;\n\n    try {\n      const res = await client.query({\n        query: POST_READ,\n        variables: {\n          id\n        }\n      });\n      return {\n        data: res\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  } else {\n    const id = query.Read.split('-').pop();\n\n    try {\n      const res = await client.query({\n        query: POST_READ,\n        variables: {\n          id\n        }\n      });\n      return {\n        data: res\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  try {\n    const res = await client.query({\n      query: POST_READ,\n      variables: {\n        id\n      }\n    });\n    return {\n      data: res\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/[Read].js"],"names":["React","Component","Layout","style","Typography","Container","CardMedia","Grid","Card","CardActionArea","CardContent","CardActions","parseISO","format","Avatar","POST_READ","useRouter","client","ReadCard","Link","gql","Head","Read","props","data","console","log","date","post","outerCard","categories","edges","node","name","__html","title","cardBox","author","avatar","url","imageSize","cardBoxAuthorTitle","featuredImage","altText","sourceUrl","cardArticalImage","id","innerHtmlFor","content","writeComment","commentStatus","slug","commentCount","grid","MoreStory","nodes","posts","map","i","getInitialProps","pathname","query","asPath","req","res","err","variables","error","split","pop"],"mappings":"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","sourcesContent":["\r\n\r\nimport React,{Component} from 'react';\r\nimport Layout from '../Component/Layout'\r\nimport style from '../Component/css/Read.module.scss'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { parseISO, format } from 'date-fns'\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {POST_READ} from \"../Component/graphalQurey\"\r\n\r\nimport { useRouter } from 'next/router'\r\nimport {client} from \"../Component/apollo-client\";\r\nimport ReadCard from \"../Component/Read/ReadCard\";\r\n\r\n\r\nimport Link from 'next/link';\r\nimport gql from 'graphql-tag';\r\nimport Head from 'next/head'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Read(props) {\r\n  const {data}= props;\r\n\r\n  // const postID= data.data.post.id\r\n\r\n\r\n console.log(props)\r\n      const date = parseISO(data.data.post.date)\r\n  return (\r\n    <Layout>  \r\n        <Head> \r\n            <link rel='stylesheet' id='wp-block-library-css'  href='https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2' media='all' />\r\n            <link rel='stylesheet' id='wp-block-library-theme-css'  href='https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2' media='all' />\r\n            <link rel='stylesheet' id='genericons-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/genericons/genericons.css?ver=3.2' type='text/css' media='all' />\r\n            <link rel='stylesheet' id='fontawesome-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/framework/font-awesome/css/font-awesome.min.css?ver=1' type='text/css' media='all' />\r\n            <link rel='stylesheet' id='asalah-plugins-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/pluginstyle.css?ver=1' type='text/css' media='all' />\r\n            <link rel='stylesheet' id='asalah-style-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/style.css?ver=3.530' type='text/css' media='all' />\r\n          </Head>\r\n \r\n        <div className={style.outerCard}>\r\n                <Typography component=\"h5\" variant=\"subtitle1\">\r\n                    #{data.data.post.categories.edges[0].node.name}\r\n                </Typography>\r\n                <Typography component=\"h1\" variant=\"h1\" dangerouslySetInnerHTML={{ __html: data.data.post.title }}>\r\n                </Typography>           \r\n                <div className={style.cardBox}>\r\n                    <Avatar alt={data.data.post.author.name} src={data.data.post.author.avatar.url}  className={style.imageSize} />\r\n                    <Typography component=\"h5\" title={data.data.post.author.name} variant=\"h5\" className={style.cardBoxAuthorTitle}>\r\n                      {data.data.post.author.name} \r\n                    </Typography>\r\n                </div>\r\n                \r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt={data.data.post.featuredImage.node.altText}\r\n                    image={data.data.post.featuredImage.node.sourceUrl}\r\n                    title={data.data.post.featuredImage.node.title}\r\n                    className={style.cardArticalImage}\r\n                />\r\n                <time className=\" MuiTypography-root MuiTypography-h5\" dateTime={\"2020-02-18T07:54:18\"} >{format(date, 'LLLL\td, yyyy')}</time>\r\n                <div key={  data.data.id} className={style.innerHtmlFor} dangerouslySetInnerHTML={{ __html: data.data.post.content }}></div>                  \r\n            </div>\r\n\r\n        <div className={style.writeComment}>\r\n        {\r\n          (data.data.post.commentStatus)?\r\n              <Link href={`/comments/?id=${data.data.post.id}`} as={ `/Comment/${data.data.post.slug}-${data.data.post.id}`}> \r\n              <a> { data.data.post.commentCount? data.data.post.commentCount : 0} Comment Now </a> \r\n            </Link> :\r\n          <Link> \r\n              <a> Comment Desible </a> \r\n          </Link>\r\n        }   \r\n        </div>\r\n\r\n        <Grid className={style.grid} container  >\r\n          <Grid item sm={12} md={12} lg={12} xs={12}>   \r\n                  <Typography className={style.MoreStory} component=\"h4\" variant=\"h3\">\r\n                      More Story \r\n                  </Typography>\r\n          </Grid>\r\n          {      \r\n            data.data.post.categories.nodes[0].posts.nodes.map(function(data, i) {                     \r\n                  return (1 === data.id)? '' : <ReadCard key={i} post={data}/>\r\n                  }    \r\n            ) \r\n          }               \r\n        </Grid>\r\n    \r\n    </Layout>\r\n\r\n  )\r\n}\r\n\r\nRead.getInitialProps=  async ({ pathname, query, asPath, req, res, err }) =>{               \r\n        if(query.slug){\r\n          const id=query.slug\r\n              try {\r\n                const res= await client.query(({\r\n                    query:POST_READ,\r\n                    variables:{id}\r\n                }))\r\n                return { data: res}\r\n\r\n          }\r\n\r\n          catch(error){\r\n            console.log(error)\r\n          }\r\n      } \r\n        else {\r\n\r\n          const id= query.Read.split( '-' ).pop()\r\n          try {\r\n            const res= await client.query(({\r\n                query:POST_READ,\r\n                variables:{id}\r\n            }))\r\n            return { data: res}\r\n\r\n          }\r\n          catch(error){\r\n            console.log(error)\r\n          }\r\n        }\r\n\r\n\r\n\r\n  try {\r\n      const res= await client.query(({\r\n          query:POST_READ,\r\n          variables:{id}\r\n      }))\r\n      return { data: res}\r\n\r\n    }\r\n\r\n    catch(error){\r\n      console.log(error)\r\n    }    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}