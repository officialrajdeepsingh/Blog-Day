{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, StrictMode } from 'react';\nimport Layout from '../Component/Layout';\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection';\nimport Artical from '../Component/Artical/Artical';\nimport { POST_QUERY } from \"../Component/graphalQurey\"; // import { getServerSideProps } from 'next'\n\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport { client } from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\nexport default function Index(props) {\n  var {\n    data\n  } = props;\n  var {\n    data\n  } = data;\n  const {\n    posts\n  } = data;\n  console.log(props, ' posts in index ');\n  return __jsx(StrictMode, null, __jsx(ErrorBoundaries, null, __jsx(Layout, null, __jsx(Grid, {\n    container: true\n  }, posts.edges.map((post, i) => {\n    if (i === 0) {\n      return __jsx(MainSection, {\n        post: post\n      });\n    } else {\n      return __jsx(Artical, {\n        post: post\n      });\n    }\n  })))));\n}\n\nIndex.getInitialProps = async context => {\n  try {\n    const getData = await client.query({\n      query: POST_QUERY\n    });\n    return {\n      props: {\n        data: getData\n      }\n    };\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/index.js"],"names":["React","Component","StrictMode","Layout","Grid","MainSection","Artical","POST_QUERY","Myapp","Head","client","ErrorBoundaries","Index","props","data","posts","console","log","edges","map","post","i","getInitialProps","context","getData","query","error"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAAQC,UAAR,QAAyB,2BAAzB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,MAAR,QAAqB,4BAArB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAIA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,MAAI;AAACC,IAAAA;AAAD,MAASD,KAAb;AACA,MAAI;AAACC,IAAAA;AAAD,MAAUA,IAAd;AACA,QAAM;AAACC,IAAAA;AAAD,MAAUD,IAAhB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmB,kBAAnB;AAEF,SACE,MAAC,UAAD,QACE,MAAC,eAAD,QACI,MAAC,MAAD,QACI,MAAC,IAAD;AAAM,IAAA,SAAS;AAAf,KAEME,KAAK,CAACG,KAAN,CAAYC,GAAZ,CACE,CAACC,IAAD,EAAOC,CAAP,KAAY;AACN,QAAGA,CAAC,KAAK,CAAT,EAAY;AACV,aAAO,MAAC,WAAD;AAAc,QAAA,IAAI,EAAED;AAApB,QAAP;AACD,KAFD,MAEO;AACL,aAAO,MAAC,OAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB,QAAP;AACD;AACJ,GAPL,CAFN,CADJ,CADJ,CADF,CADF;AAsBD;;AAEDR,KAAK,CAACU,eAAN,GAAwB,MAAOC,OAAP,IAAkB;AACxC,MAAG;AACE,UAAMC,OAAO,GAAE,MAAMd,MAAM,CAACe,KAAP,CAAc;AAChCA,MAAAA,KAAK,EAAClB;AAD0B,KAAd,CAArB;AAKC,WAAO;AACLM,MAAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAACU;AAAN;AADF,KAAP;AAGH,GATH,CAUE,OAAME,KAAN,EAAa;AACbV,IAAAA,OAAO,CAACU,KAAR,CAAcA,KAAd;AACD;AAEF,CAfD","sourcesContent":["\nimport React, { Component , StrictMode } from 'react';\nimport Layout from '../Component/Layout'\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection'\nimport Artical from '../Component/Artical/Artical'\nimport {POST_QUERY} from \"../Component/graphalQurey\"\n// import { getServerSideProps } from 'next'\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport {client} from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\n\n\n\nexport default function Index(props) {\n    var {data }= props;    \n    var {data } = data \n    const {posts} = data\n    console.log(props, ' posts in index ')\n\n  return (\n    <StrictMode> \n      <ErrorBoundaries> \n          <Layout >\n              <Grid container >\n                  {\n                    posts.edges.map(\n                      (post, i) =>{\n                            if(i === 0 ){\n                              return <MainSection  post={post} />\n                            } else {\n                              return <Artical  post={post} />   \n                            }\n                        }\n                    )\n                  }\n              </Grid>\n          </Layout>\n      </ErrorBoundaries>\n  </StrictMode> \n   \n  )\n}\n\nIndex.getInitialProps=  async (context) =>{\n  try{\n       const getData= await client.query(({\n          query:POST_QUERY    \n        })) \n\n\n        return {\n          props: {data:getData} \n        }\n    }\n    catch(error) {\n    console.error(error )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}