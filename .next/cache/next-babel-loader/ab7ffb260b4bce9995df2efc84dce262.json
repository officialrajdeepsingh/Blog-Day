{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, StrictMode } from 'react';\nimport Layout from '../Component/Layout';\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection';\nimport Artical from '../Component/Artical/Artical';\nimport { POST_QUERY } from \"../Component/graphalQurey\";\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\nimport Error from 'next/error';\nexport var __N_SSP = true;\nexport default function Index(_ref) {\n  var getData = _ref.getData,\n      errorTake = _ref.errorTake;\n  var data = getData.data;\n  var posts = data.posts;\n  console.log(errorTake, 'errorTake error'); // if (error) {\n  //   return <Error statusCode={errorCode} />\n  // }\n  // console.log(data , ' data ')\n\n  return __jsx(Grid, {\n    component: \"article\",\n    container: true\n  }, posts.edges.map(function (post, i) {\n    if (i === 0) {\n      return __jsx(MainSection, {\n        key: post.node.id,\n        post: post\n      });\n    } else {\n      return __jsx(Artical, {\n        key: post.node.id,\n        post: post\n      });\n    }\n  }));\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/index.js"],"names":["React","Component","StrictMode","Layout","Grid","MainSection","Artical","POST_QUERY","Myapp","Head","ErrorBoundaries","Error","Index","getData","errorTake","data","posts","console","log","edges","map","post","i","node","id"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAAQC,UAAR,QAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,OAAOC,KAAP,MAAkB,YAAlB;;AAGA,eAAe,SAASC,KAAT,OAAoC;AAAA,MAApBC,OAAoB,QAApBA,OAAoB;AAAA,MAAZC,SAAY,QAAZA,SAAY;AAAA,MACvCC,IADuC,GAC/BF,OAD+B,CACvCE,IADuC;AAAA,MAExCC,KAFwC,GAE/BD,IAF+B,CAExCC,KAFwC;AAI/CC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAuB,iBAAvB,EAJ+C,CAK/C;AACA;AACA;AACJ;;AACE,SACY,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,SAAhB;AAA0B,IAAA,SAAS;AAAnC,KAEME,KAAK,CAACG,KAAN,CAAYC,GAAZ,CACE,UAACC,IAAD,EAAOC,CAAP,EAAY;AACN,QAAGA,CAAC,KAAK,CAAT,EAAY;AACV,aAAO,MAAC,WAAD;AAAa,QAAA,GAAG,EAAED,IAAI,CAACE,IAAL,CAAUC,EAA5B;AAAgC,QAAA,IAAI,EAAEH;AAAtC,QAAP;AACD,KAFD,MAEO;AACL,aAAO,MAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,IAAI,CAACE,IAAL,CAAUC,EAAxB;AAA6B,QAAA,IAAI,EAAEH;AAAnC,QAAP;AACD;AACJ,GAPL,CAFN,CADZ;AAgBD","sourcesContent":["\nimport React, { Component , StrictMode } from 'react';\nimport Layout from '../Component/Layout'\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection'\nimport Artical from '../Component/Artical/Artical'\nimport {POST_QUERY} from \"../Component/graphalQurey\"\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport {client} from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\n\nimport Error from 'next/error'\n\n\nexport default function Index({getData,errorTake}) {\n     const {data} = getData\n    const {posts} = data\n\n    console.log(errorTake, 'errorTake error')\n    // if (error) {\n    //   return <Error statusCode={errorCode} />\n    // }\n// console.log(data , ' data ')\n  return (\n              <Grid component='article' container >\n                  {\n                    posts.edges.map(\n                      (post, i) =>{\n                            if(i === 0 ){\n                              return <MainSection key={post.node.id} post={post} />\n                            } else {\n                              return <Artical key={post.node.id}  post={post} />   \n                            }\n                        }\n                    )\n                  }\n              </Grid>\n   \n  )\n}\n\n\nexport const  getServerSideProps =  async () =>{\n  try{\n       const getData= await client.query(({\n          query:POST_QUER   \n        }))   \n        const json = await getData.json()\n        return {\n          props: {data: json.stargazers_count}\n        }\n\n    }\n    catch(error) {\n      const json = await JSON.parse(userData);  error.json()\n      return {\n        props: {errorTake :json.stargazers_count}\n      }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}