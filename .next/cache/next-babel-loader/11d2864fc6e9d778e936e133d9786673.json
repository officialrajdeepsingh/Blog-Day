{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, StrictMode } from 'react';\nimport Head from 'next/head';\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection';\nimport Artical from '../Component/Artical/Artical';\nimport { POST_QUERY } from \"../Component/graphalQurey\";\nimport { client } from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\nimport Error from 'next/error';\nimport { NextSeo } from 'next-seo';\nimport RajdeepSingh from '../Component/asset/RajdeepSingh.jpg';\nimport ErrorComponent from '../Component/ErrorComponent';\nexport default function Index(props) {\n  const {\n    getData,\n    concerter\n  } = props;\n\n  if (concerter) {\n    return __jsx(ErrorComponent, {\n      concerter: concerter\n    });\n  } else {\n    const {\n      data\n    } = getData;\n    const {\n      posts,\n      generalSettings\n    } = data;\n    return __jsx(React.Fragment, null, __jsx(NextSeo, {\n      title: generalSettings.title,\n      description: generalSettings.description,\n      canonical: \"https://www.rajdeepsingh.dev/\",\n      openGraph: {\n        url: 'https://www.rajdeepsingh.dev/',\n        title: generalSettings.title,\n        description: generalSettings.description,\n        images: [posts.edges.map(post => {\n          return {\n            url: post.node.featuredImage.sourceUrl,\n            alt: post.node.featuredImage.altText\n          };\n        })],\n        site_name: 'Rajdeep Singh'\n      },\n      twitter: {\n        handle: '@handle',\n        site: '@site',\n        cardType: 'summary_large_image'\n      }\n    }), __jsx(Head, null, __jsx(\"link\", {\n      rel: \"icon\",\n      href: RajdeepSingh,\n      type: \"image/x-icon\"\n    })), __jsx(Grid, {\n      component: \"article\",\n      container: true\n    }, posts.edges.map((post, i) => {\n      if (i === 0) {\n        return __jsx(MainSection, {\n          key: post.node.id,\n          post: post\n        });\n      } else {\n        return __jsx(Artical, {\n          key: post.node.id,\n          post: post\n        });\n      }\n    })));\n  }\n}\nexport const getServerSideProps = async ({\n  res\n}) => {\n  try {\n    const getData = await client.query({\n      query: POST_QUERY\n    });\n    return {\n      props: {\n        getData\n      }\n    };\n  } catch (error) {\n    const concerter = JSON.stringify(error);\n    return {\n      props: {\n        concerter\n      }\n    };\n  }\n};","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/index.js"],"names":["React","Component","StrictMode","Head","Grid","MainSection","Artical","POST_QUERY","client","ErrorBoundaries","Error","NextSeo","RajdeepSingh","ErrorComponent","Index","props","getData","concerter","data","posts","generalSettings","title","description","url","images","edges","map","post","node","featuredImage","sourceUrl","alt","altText","site_name","handle","site","cardType","i","id","getServerSideProps","res","query","error","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component , StrictMode } from 'react';\nimport Head from 'next/head'\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection'\nimport Artical from '../Component/Artical/Artical'\nimport {POST_QUERY} from \"../Component/graphalQurey\"\nimport {client} from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\n\nimport Error from 'next/error'\nimport { NextSeo } from 'next-seo';\nimport RajdeepSingh from '../Component/asset/RajdeepSingh.jpg'\nimport ErrorComponent from '../Component/ErrorComponent'\n\n\nexport default function Index(props) {\n const {getData,concerter} = props\n\n if (concerter) { \n      return <ErrorComponent concerter={concerter} />\n    }else{\n    \n      const {data} = getData\n      const {posts,generalSettings} = data\n      return (\n        <>\n        <NextSeo\n          title={generalSettings.title}\n          description={generalSettings.description}\n          canonical=\"https://www.rajdeepsingh.dev/\"\n          openGraph={{\n            url: 'https://www.rajdeepsingh.dev/',\n            title: generalSettings.title,\n            description: generalSettings.description,\n            images:[ posts.edges.map(\n                (post)=>{\n                return {\n                      url: post.node.featuredImage.sourceUrl,\n                      alt: post.node.featuredImage.altText,\n                    }\n                }\n              )\n            ],\n            site_name: 'Rajdeep Singh',\n          }}\n          twitter={{\n            handle: '@handle',\n            site: '@site',\n            cardType: 'summary_large_image',\n          }} />\n          <Head> \n                <link rel='icon' href={RajdeepSingh} type='image/x-icon'/>\n          </Head>\n                  <Grid component='article' container >\n                      {\n                        posts.edges.map(\n                          (post, i) =>{\n                                if(i === 0 ){\n                                  return <MainSection key={post.node.id} post={post} />\n                                } else {\n                                  return <Artical key={post.node.id}  post={post} />   \n                                }\n                            }\n                        )\n                      }\n                  </Grid>\n          </>\n      )\n\n  }\n}\n\n\nexport const  getServerSideProps =  async ({res}) =>{\n  \n      try{ \n        const getData=await client.query(({\n          query:POST_QUERY\n        }))\n        return {\n          props: {getData}\n        }\n      }catch(error){\n          const concerter = JSON.stringify(error)\n          return { props: {concerter} }\n          }\n      \n      \n  }\n"]},"metadata":{},"sourceType":"module"}