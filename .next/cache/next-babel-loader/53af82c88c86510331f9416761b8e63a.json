{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nexport default class ErrorBoundaries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return __jsx(\"h1\", null, \"Something went wrong.\");\n    }\n\n    return this.props.children;\n  }\n\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/Component/ErrorBoundaries.js"],"names":["React","Component","ErrorBoundaries","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","logErrorToMyService","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AAEnDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAED,SAAOC,wBAAP,CAAgCC,KAAhC,EAAuC;AACrC;AACA,WAAO;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,SAAR,EAAmB;AAClC;AACAC,IAAAA,mBAAmB,CAACH,KAAD,EAAQE,SAAR,CAAnB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKP,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,aAAO,0CAAP;AACD;;AAED,WAAO,KAAKF,KAAL,CAAWS,QAAlB;AACD;;AAxBgD","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class ErrorBoundaries extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n      }\r\n    \r\n      static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n      }\r\n    \r\n      componentDidCatch(error, errorInfo) {\r\n        // You can also log the error to an error reporting service\r\n        logErrorToMyService(error, errorInfo);\r\n      }\r\n    \r\n      render() {\r\n        if (this.state.hasError) {\r\n          // You can render any custom fallback UI\r\n          return <h1>Something went wrong.</h1>;\r\n        }\r\n    \r\n        return this.props.children; \r\n      }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}