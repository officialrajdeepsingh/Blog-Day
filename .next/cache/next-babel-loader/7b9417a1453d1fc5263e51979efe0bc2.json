{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport style from '../Component/css/ForgetPassward.module.scss';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { LOGIN_MUTATION } from \"../Component/graphalQurey\";\nimport { request } from 'graphql-request';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst signIN = userData => {\n  return request('https://www.rajdeepsingh.dev/graphql', LOGIN_MUTATION, userData);\n};\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props));\n}\n\nexport default function ForgetPassward(props) {\n  const [gmail, setGmail] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n\n  const formSubmit = async event => {\n    event.preventDefault();\n    const data = await signIN({\n      \"username\": userName,\n      \"password\": passward\n    }).then(data => {\n      setAuthToken(() => {\n        return {\n          data\n        };\n      });\n    }).catch(error => {\n      setAuthToken(() => {\n        return {\n          error\n        };\n      });\n    });\n    setOpen(() => {\n      return true;\n    });\n  };\n\n  const passwardChange = () => {};\n\n  const handleClose = () => {};\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: formSubmit,\n    className: style.form,\n    noValidate: true,\n    autoComplete: \"on\"\n  }, __jsx(FormControl, {\n    className: style.layout\n  }, __jsx(InputLabel, {\n    htmlFor: \"RestPassword\"\n  }, \"Enter Register Gmail\"), __jsx(Input, {\n    id: \"RestPassword\",\n    type: \"gmail\",\n    onChange: passwardChange,\n    placeholder: \"Enter your gamil\",\n    name: \"gmail\",\n    autoComplete: \"gmail\"\n  })), __jsx(Button, {\n    type: \"submit\",\n    className: style.button,\n    size: \"small\"\n  }, \"Reset\")), __jsx(Snackbar, {\n    open: open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 60000,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    severity: \"error\"\n  })));\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/ForgetPassward.js"],"names":["React","useState","Input","FormControl","InputLabel","Button","style","Snackbar","LOGIN_MUTATION","request","MuiAlert","signIN","userData","Alert","props","ForgetPassward","gmail","setGmail","open","setOpen","formSubmit","event","preventDefault","data","userName","passward","then","setAuthToken","catch","error","passwardChange","handleClose","form","layout","button","vertical","horizontal"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport Input from '@material-ui/core/Input';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport style from '../Component/css/ForgetPassward.module.scss'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {LOGIN_MUTATION} from \"../Component/graphalQurey\"\r\nimport { request } from 'graphql-request';\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst signIN = (userData) => {\r\n    return  request('https://www.rajdeepsingh.dev/graphql', LOGIN_MUTATION, userData);\r\n  };\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6}  variant=\"filled\" {...props} > \r\n                {/* <div dangerouslySetInnerHTML={{ __html: props.show }}></div>  */}\r\n            </MuiAlert>\r\n}\r\n\r\nexport default function ForgetPassward(props) {\r\n    const [gmail, setGmail] = React.useState(\"\");\r\n    const [open, setOpen] = React.useState(false);\r\n    const formSubmit= async (event)=>{\r\n        event.preventDefault()\r\n        const data= await signIN({                          \r\n            \"username\": userName,\r\n            \"password\": passward\r\n        }).then(\r\n            (data)=>{\r\n                setAuthToken(()=>{  \r\n                    return {data} \r\n                 })\r\n            }\r\n        ).catch((error) => {\r\n            setAuthToken(()=>{  \r\n                return {error} \r\n             })\r\n        })\r\n\r\n        setOpen(()=>{  \r\n            return true \r\n         })\r\n        \r\n    }\r\n    const passwardChange=()=>{\r\n\r\n    }\r\n\r\n   const handleClose =()=>{\r\n\r\n   }\r\n    return (\r\n        <>\r\n         <form onSubmit={formSubmit} className={style.form} noValidate autoComplete=\"on\">\r\n             <FormControl className={style.layout} >\r\n                                        <InputLabel htmlFor=\"RestPassword\">Enter Register Gmail</InputLabel>\r\n                                        <Input\r\n                                            id=\"RestPassword\"\r\n                                            type= 'gmail'\r\n                                            onChange={passwardChange}\r\n                                            placeholder='Enter your gamil'\r\n                                            name=\"gmail\" \r\n                                            autoComplete=\"gmail\"\r\n\r\n                                            \r\n                                        />\r\n                                    </FormControl>\r\n                                \r\n              <Button type=\"submit\" className={style.button} size=\"small\">\r\n                       Reset \r\n              </Button>\r\n        </form>\r\n\r\n        <Snackbar open={open} anchorOrigin={ \r\n                    {    vertical: 'top', \r\n                        horizontal: 'center' }\r\n                    } \r\n                 autoHideDuration={60000} onClose={handleClose}>\r\n                  <Alert onClose={handleClose}   severity=  \"error\"></Alert>\r\n              </Snackbar>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}