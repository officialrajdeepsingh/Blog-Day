{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link';\nimport { POST_SEARCH } from \"../graphalQurey\";\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport useSWR from 'swr';\nimport { request } from 'graphql-request';\nimport { client } from \"../apollo-client\";\nimport style from '../css/Searchbar.module.scss';\n\nvar fetcher = function fetcher(query, search) {\n  return request('https://www.rajdeepsingh.dev/graphql', query, {\n    search: search\n  });\n};\n\nexport default function Searchbar(props) {\n  var _useState = useState(''),\n      search = _useState[0],\n      setSearch = _useState[1];\n\n  var _useSWR = useSWR([POST_SEARCH, search], fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  var sumbitHandler = function sumbitHandler(e) {\n    e.preventDefault();\n  };\n\n  var changeHandler = function changeHandler(e) {\n    setSearch(e.target.value);\n  };\n\n  console.log(data, ' data search');\n  console.log(error, ' error search');\n  return __jsx(\"div\", {\n    className: style.bar\n  }, __jsx(Container, {\n    className: style.box,\n    maxWidth: \"sm\"\n  }, __jsx(\"form\", {\n    className: style.formRoot,\n    onSubmit: sumbitHandler,\n    noValidate: true,\n    autoComplete: \"off\"\n  }, __jsx(TextField, {\n    onChange: changeHandler,\n    id: \"standard-secondary\",\n    className: style.rootText,\n    label: \"Search Here\"\n  })), data ? data.posts.nodes.map(function (postData) {\n    return __jsx(List, {\n      key: postData.id,\n      className: style.rootList\n    }, __jsx(Link, {\n      href: \"/[read]?id=\".concat(postData.id),\n      as: \"\".concat(postData.slug, \"-\").concat(postData.id)\n    }, __jsx(ListItem, {\n      button: true,\n      alignItems: \"flex-start\"\n    }, __jsx(ListItemAvatar, null, __jsx(Avatar, {\n      alt: postData.featuredImage.altText,\n      src: postData.featuredImage.sourceUrl\n    })), __jsx(ListItemText, {\n      primary: postData.title,\n      secondary: __jsx(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: style.inline,\n        color: \"textPrimary\"\n      }, postData.author.name)\n    }))));\n  }) : ''));\n}","map":null,"metadata":{},"sourceType":"module"}