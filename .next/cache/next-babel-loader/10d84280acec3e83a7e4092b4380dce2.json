{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport style from '../Component/css/Read.module.scss';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { parseISO, format } from 'date-fns';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useRouter } from 'next/router';\nimport ReadCard from \"../Component/Read/ReadCard\";\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nexport var __N_SSP = true;\nexport default function Read(props) {\n  var getData = props.getData,\n      statusCode = props.statusCode;\n  var data = getData.data;\n  var post = data.post;\n  var postID = post.id;\n  var date = parseISO(post.date);\n\n  if (statusCode) {\n    return __jsx(Error, {\n      statusCode: statusCode\n    });\n  } else {\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      id: \"wp-block-library-css\",\n      href: \"https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2\",\n      media: \"all\"\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      id: \"wp-block-library-theme-css\",\n      href: \"https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2\",\n      media: \"all\"\n    })), __jsx(\"div\", {\n      className: style.outerCard\n    }, __jsx(Typography, {\n      component: \"h5\",\n      variant: \"subtitle1\"\n    }, \"#\", post.categories.edges[0].node.name), __jsx(Typography, {\n      component: \"h1\",\n      variant: \"h1\",\n      dangerouslySetInnerHTML: {\n        __html: post.title\n      }\n    }), __jsx(\"div\", {\n      className: style.cardBox\n    }, __jsx(Avatar, {\n      alt: post.author.name,\n      src: post.author.avatar.url,\n      className: style.imageSize\n    }), __jsx(Typography, {\n      component: \"h5\",\n      title: post.author.name,\n      variant: \"h5\",\n      className: style.cardBoxAuthorTitle\n    }, post.author.name)), __jsx(CardMedia, {\n      component: \"img\",\n      alt: post.featuredImage.altText,\n      image: post.featuredImage.sourceUrl,\n      title: post.featuredImage.title,\n      className: style.cardArticalImage\n    }), __jsx(\"time\", {\n      className: \" MuiTypography-root MuiTypography-h5\",\n      dateTime: \"2020-02-18T07:54:18\"\n    }, format(date, 'LLLL\td, yyyy')), __jsx(\"div\", {\n      key: post.id,\n      className: style.innerHtmlFor,\n      dangerouslySetInnerHTML: {\n        __html: post.content\n      }\n    })), __jsx(\"div\", {\n      className: style.writeComment\n    }, post.commentStatus ? __jsx(Link, {\n      href: \"/comments/?id=\".concat(post.id),\n      as: \"/Comment/\".concat(post.slug, \"-\").concat(post.id)\n    }, __jsx(\"a\", null, \" \", post.commentCount ? post.commentCount : 0, \" Comment Now \")) : __jsx(Link, null, __jsx(\"a\", null, \" Comment Desible \"))), __jsx(Grid, {\n      className: style.grid,\n      container: true\n    }, __jsx(\"h3\", null, \"st \"), \" te\"));\n  }\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/[Read].js"],"names":["React","Component","style","Typography","Container","CardMedia","Grid","Card","CardActionArea","CardContent","CardActions","parseISO","format","Avatar","useRouter","ReadCard","Link","gql","Head","Read","props","getData","statusCode","data","post","postID","id","date","outerCard","categories","edges","node","name","__html","title","cardBox","author","avatar","url","imageSize","cardBoxAuthorTitle","featuredImage","altText","sourceUrl","cardArticalImage","innerHtmlFor","content","writeComment","commentStatus","slug","commentCount","grid"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport style from '../Component/css/Read.module.scss'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { parseISO, format } from 'date-fns'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {POST_READ} from \"../Component/graphalQurey\"\r\nimport { useRouter } from 'next/router'\r\nimport {client} from \"../Component/apollo-client\";\r\nimport ReadCard from \"../Component/Read/ReadCard\";\r\n\r\n\r\nimport Link from 'next/link';\r\nimport gql from 'graphql-tag';\r\nimport Head from 'next/head'\r\n\r\n\r\nexport default function Read(props) {\r\n  const { getData,statusCode }= props;   \r\n  const {data} = getData\r\n  const {post} = data\r\n  const postID= post.id\r\n  const date = parseISO(post.date)\r\n\r\n  if (statusCode) {\r\n    return <Error statusCode={statusCode} />\r\n  }else{\r\n    return (\r\n      <>  \r\n           <Head> \r\n              <link rel='stylesheet' id='wp-block-library-css'  href='https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2' media='all' />\r\n              <link rel='stylesheet' id='wp-block-library-theme-css'  href='https://www.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2' media='all' />\r\n              {/* <link rel='stylesheet' id='genericons-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/genericons/genericons.css?ver=3.2' type='text/css' media='all' /> */}\r\n              {/* <link rel='stylesheet' id='fontawesome-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/framework/font-awesome/css/font-awesome.min.css?ver=1' type='text/css' media='all' /> */}\r\n              {/* <link rel='stylesheet' id='asalah-plugins-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/pluginstyle.css?ver=1' type='text/css' media='all' />\r\n              <link rel='stylesheet' id='asalah-style-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/style.css?ver=3.530' type='text/css' media='all' /> */}\r\n            </Head> \r\n  \r\n          <div className={style.outerCard}>\r\n                  <Typography component=\"h5\" variant=\"subtitle1\">\r\n                      #{post.categories.edges[0].node.name}\r\n                  </Typography>\r\n                  <Typography component=\"h1\" variant=\"h1\" dangerouslySetInnerHTML={{ __html: post.title }}>\r\n                  </Typography>           \r\n                  <div className={style.cardBox}>\r\n                      <Avatar alt={post.author.name} src={post.author.avatar.url}  className={style.imageSize} />\r\n                      <Typography component=\"h5\" title={post.author.name} variant=\"h5\" className={style.cardBoxAuthorTitle}>\r\n                        {post.author.name} \r\n                      </Typography>\r\n                  </div>\r\n                  \r\n                  <CardMedia\r\n                      component=\"img\"\r\n                      alt={post.featuredImage.altText}\r\n                      image={post.featuredImage.sourceUrl}\r\n                      title={post.featuredImage.title}\r\n                      className={style.cardArticalImage}\r\n                  />\r\n                  <time className=\" MuiTypography-root MuiTypography-h5\" dateTime={\"2020-02-18T07:54:18\"} >{format(date, 'LLLL\td, yyyy')}</time>\r\n                \r\n                  <div key={  post.id} className={style.innerHtmlFor} dangerouslySetInnerHTML={{ __html: post.content }}></div>                  \r\n              </div>\r\n\r\n          <div className={style.writeComment}>\r\n          {\r\n            (post.commentStatus)?\r\n                <Link href={`/comments/?id=${post.id}`} as={ `/Comment/${post.slug}-${post.id}`}> \r\n                <a> { post.commentCount? post.commentCount : 0} Comment Now </a> \r\n              </Link> :\r\n            <Link> \r\n                <a> Comment Desible </a> \r\n            </Link>\r\n          }   \r\n          </div>\r\n\r\n          <Grid className={style.grid} container  >\r\n          \r\n          <h3>st </h3> te\r\n            {      \r\n              // post.categories.nodes[0].posts.nodes.map(function(data, i) {                     \r\n              //       return (postID === data.id)? '' : <ReadCard key={i} post={data}/>\r\n              //       }    \r\n              // ) \r\n            }               \r\n          </Grid> \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport const  getServerSideProps =  async ({ pathname, query, asPath, req, res, err }) =>{               \r\n        \r\n        if(query.slug){\r\n          const id=query.slug\r\n              try {\r\n                const getData= await client.query(({\r\n                    query:POST_READ,\r\n                    variables:{id}\r\n                }))\r\n                return {props:{ getData}}\r\n          }\r\n          catch(error){\r\n            return { props: { statusCode: 404 } }\r\n          }\r\n        }\r\n        else {\r\n            const id= query.Read.split( '-' ).pop()\r\n            try {\r\n              const getData= await client.query(({\r\n                  query:POST_READ,\r\n                  variables:{id}\r\n              }))\r\n              return {props:{ getData}}\r\n\r\n            }\r\n            catch(error){\r\n              return { props: { statusCode: 404 } }\r\n            }\r\n          }    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}