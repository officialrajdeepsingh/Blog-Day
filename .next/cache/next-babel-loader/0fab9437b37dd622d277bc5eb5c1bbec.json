{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from 'react';\nimport ReactMde from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Button from '@material-ui/core/Button';\nimport style from '../css/CommentEditor.module.scss';\nimport { request } from 'graphql-request';\nimport { COMMENT_MUTATION } from \"../graphalQurey\";\n\nvar signUP = function signUP(input) {\n  return request('https://www.rajdeepsingh.dev/graphql', COMMENT_MUTATION, input);\n};\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: props.show\n    }\n  }));\n}\n\nexport default function CommentEditor(props) {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"write\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedTab = _React$useState4[0],\n      setSelectedTab = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      open = _React$useState6[0],\n      setOpen = _React$useState6[1];\n\n  var _React$useState7 = React.useState({}),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      comment = _React$useState8[0],\n      setComment = _React$useState8[1];\n\n  var _React$useState9 = React.useState({}),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      getDisplayName = _React$useState10[0],\n      setGetDisplayName = _React$useState10[1];\n\n  var _React$useState11 = React.useState({}),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      getUserId = _React$useState12[0],\n      setgetUserId = _React$useState12[1];\n\n  var converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true\n  });\n\n  var submitComment = function submitComment(e) {\n    var UserId, DisplayName;\n    return _regeneratorRuntime.async(function submitComment$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            UserId = localStorage.getItem(\"userId\");\n            DisplayName = localStorage.getItem(\"displayName\");\n            console.log(UserId && DisplayName && value);\n            console.log(value !== null || value !== '');\n\n            if (!(value.length == 2)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(signUP({\n              \"input\": {\n                \"content\": value,\n                \"author\": DisplayName,\n                \"userId\": UserId,\n                \"clientMutationId\": \"createComment\",\n                \"commentOn\": props.postid\n              }\n            }).then(function (data) {\n              setComment(function () {\n                return {\n                  data: data\n                };\n              });\n            })[\"catch\"](function (error) {\n              return setComment(function () {\n                return {\n                  error: error\n                };\n              });\n            }));\n\n          case 8:\n            setOpen(function () {\n              return true;\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onChangeHandler = function onChangeHandler(data) {\n    setValue(data);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  console.log(comment, ' comment ');\n  var ShowAlertError = comment.error ? comment.error.response.errors[0].message : 'submit';\n  return __jsx(Fragment, {\n    key: props.keyId\n  }, __jsx(\"form\", {\n    id: \"formSubmit\",\n    onSubmit: submitComment\n  }, __jsx(ReactMde, {\n    value: value,\n    onChange: onChangeHandler,\n    selectedTab: selectedTab,\n    onTabChange: setSelectedTab,\n    generateMarkdownPreview: function generateMarkdownPreview(markdown) {\n      return Promise.resolve(converter.makeHtml(markdown));\n    },\n    childProps: {\n      writeButton: {\n        tabIndex: -1\n      }\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    className: style.productButton,\n    size: \"small\"\n  }, \"Submit\")), __jsx(Snackbar, {\n    open: open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 6000,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    show: ShowAlertError,\n    severity: comment.error ? \"error\" : 'success'\n  })));\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/Component/CommentEditor/CommentEditor.js"],"names":["React","Fragment","ReactMde","Showdown","Snackbar","MuiAlert","Button","style","request","COMMENT_MUTATION","signUP","input","Alert","props","__html","show","CommentEditor","useState","value","setValue","selectedTab","setSelectedTab","open","setOpen","comment","setComment","getDisplayName","setGetDisplayName","getUserId","setgetUserId","converter","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","submitComment","e","preventDefault","UserId","localStorage","getItem","DisplayName","console","log","length","postid","then","data","error","onChangeHandler","handleClose","ShowAlertError","response","errors","message","keyId","markdown","Promise","resolve","makeHtml","writeButton","tabIndex","productButton","vertical","horizontal"],"mappings":"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","sourcesContent":["import React,{Fragment} from 'react'\nimport ReactMde from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport Button from '@material-ui/core/Button';\nimport style from '../css/CommentEditor.module.scss'\nimport { request } from 'graphql-request';\nimport {COMMENT_MUTATION} from \"../graphalQurey\"\n\n\nconst signUP = (input) => {\n  return  request('https://www.rajdeepsingh.dev/graphql', COMMENT_MUTATION, input);\n};\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} > \n              <div dangerouslySetInnerHTML={{ __html: props.show }}></div> \n          </MuiAlert>\n}\n\n export default  function CommentEditor(props) {\n  const [value, setValue] = React.useState(\"\");\n    const [selectedTab, setSelectedTab] = React.useState(\"write\");    \n    const [open, setOpen] = React.useState(false);\n    const [comment, setComment] = React.useState({});\n    const [getDisplayName, setGetDisplayName] = React.useState({});\n    const [getUserId, setgetUserId] = React.useState({});\n\n    const converter = new Showdown.Converter({\n      tables: true,\n      simplifiedAutoLink: true,\n      strikethrough: true,\n      tasklists: true\n    });\n\n\n\n    const submitComment= async (e) => {\n        e.preventDefault();           \n          const UserId= localStorage.getItem(\"userId\")\n          const DisplayName= localStorage.getItem(\"displayName\");\n\n          console.log(UserId && DisplayName && value  )\n          console.log(value !== null || value !== '' )\n\n      \n          \n          if(value.length==2) {\n              await signUP( {\n                \"input\":{\n                        \"content\": value,\n                        \"author\": DisplayName, \n                        \"userId\":UserId,\n                        \"clientMutationId\": \"createComment\",\n                        \"commentOn\": props.postid\n                }\n              }  \n            ).then(\n              (data)=>{\n                setComment( ()=>{ return {data} })\n              }\n            ).catch((error)=> setComment(()=> { return {error}}))\n            setOpen(()=> true );\n            }\n\n        }\n    const  onChangeHandler = (data)=>{\n      setValue(data)\n      }\n     const handleClose = () => {      \n         setOpen(false);\n      };\n      console.log(comment, ' comment ');\n\n      const ShowAlertError= (comment.error)? comment.error.response.errors[0].message:'submit'\n      \n    return (\n        <Fragment key={props.keyId}> \n      \n       \n          <form  id='formSubmit' onSubmit={submitComment} > \n            <ReactMde\n                  value={value}\n                  onChange={onChangeHandler}\n                  selectedTab={selectedTab}\n                  onTabChange={setSelectedTab}\n                  generateMarkdownPreview={markdown =>\n                    Promise.resolve(converter.makeHtml(markdown))\n                  }\n                  childProps={{\n                    writeButton: {\n                      tabIndex: -1\n                    }\n                  }}\n                />\n              \n              <Button type=\"submit\" className={style.productButton} size=\"small\">\n                              Submit  \n              </Button>\n            \n          </form>      \n          <Snackbar open={open} anchorOrigin={ \n                    {    vertical: 'top', \n                        horizontal: 'center' }\n                    } \n                    autoHideDuration={6000} onClose={handleClose}>\n                      <Alert onClose={handleClose} show={ShowAlertError} severity= {(comment.error)? \"error\":'success'} ></Alert>\n          </Snackbar> \n        </Fragment>\n    );\n  }"]},"metadata":{},"sourceType":"module"}