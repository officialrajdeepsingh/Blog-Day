{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../Component/Layout';\nimport style from '../Component/css/Read.module.scss';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { parseISO, format } from 'date-fns';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useRouter } from 'next/router';\nimport { client } from \"../Component/apollo-client\";\nimport ReadCard from \"../Component/Read/ReadCard\";\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nexport default class Read extends Component {\n  static async getInitialProps({\n    pathname,\n    query,\n    asPath,\n    req,\n    res,\n    err\n  }) {\n    const POST_QUERY = gql`query GET_POST($id: ID!) {\n            post(id: $id) {\n               id\n               commentCount\n               title\n               content\n               slug\n               date\n               commentStatus\n               featuredImage {\n                  altText\n                  sourceUrl\n                  title\n                \n              }\n            \n               categories {\n                 edges {\n                   node {\n                     name\n                   }\n                 }\n               }\n               author {\n                 name\n                 avatar {\n                   url\n                 }\n               }\n               categories {\n                nodes {\n                  posts {\n                    nodes {\n                      title\n                      id\n                      slug\n                      featuredImage{\n                        sourceUrl\n                        altText\n                      }\n                    }\n                  }\n                }\n              }\n             }\n           }`;\n\n    if (query.slug) {\n      const id = query.slug;\n\n      try {\n        const res = await client.query({\n          query: POST_QUERY,\n          variables: {\n            id\n          }\n        });\n        return {\n          data: res\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      const id = query.Read.split('-').pop();\n\n      try {\n        const res = await client.query({\n          query: POST_QUERY,\n          variables: {\n            id\n          }\n        });\n        return {\n          data: res\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    try {\n      const res = await client.query({\n        query: POST_QUERY,\n        variables: {\n          id\n        }\n      });\n      return {\n        data: res\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const {\n      data\n    } = this.props; // const postID= data.data.post.id\n\n    console.log(this.props);\n    const date = parseISO(data.data.post.date);\n    return __jsx(Layout, null, __jsx(Head, null, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      id: \"wp-block-library-css\",\n      href: \"https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2\",\n      media: \"all\"\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      id: \"wp-block-library-theme-css\",\n      href: \"https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2\",\n      media: \"all\"\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      id: \"genericons-css\",\n      href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/genericons/genericons.css?ver=3.2\",\n      type: \"text/css\",\n      media: \"all\"\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      id: \"fontawesome-css\",\n      href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/framework/font-awesome/css/font-awesome.min.css?ver=1\",\n      type: \"text/css\",\n      media: \"all\"\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      id: \"asalah-plugins-css\",\n      href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/pluginstyle.css?ver=1\",\n      type: \"text/css\",\n      media: \"all\"\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      id: \"asalah-style-css\",\n      href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/style.css?ver=3.530\",\n      type: \"text/css\",\n      media: \"all\"\n    })), __jsx(\"div\", {\n      className: style.outerCard\n    }, __jsx(Typography, {\n      component: \"h5\",\n      variant: \"subtitle1\"\n    }, \"#\", data.data.post.categories.edges[0].node.name), __jsx(Typography, {\n      component: \"h1\",\n      variant: \"h1\",\n      dangerouslySetInnerHTML: {\n        __html: data.data.post.title\n      }\n    }), __jsx(\"div\", {\n      className: style.cardBox\n    }, __jsx(Avatar, {\n      alt: data.data.post.author.name,\n      src: data.data.post.author.avatar.url,\n      className: style.imageSize\n    }), __jsx(Typography, {\n      component: \"h5\",\n      title: data.data.post.author.name,\n      variant: \"h5\",\n      className: style.cardBoxAuthorTitle\n    }, data.data.post.author.name)), __jsx(CardMedia, {\n      component: \"img\",\n      alt: data.data.post.featuredImage.node.altText,\n      image: data.data.post.featuredImage.node.sourceUrl,\n      title: data.data.post.featuredImage.node.title,\n      className: style.cardArticalImage\n    }), __jsx(\"time\", {\n      className: \" MuiTypography-root MuiTypography-h5\",\n      dateTime: \"2020-02-18T07:54:18\"\n    }, format(date, 'LLLL\td, yyyy')), __jsx(\"div\", {\n      key: data.data.id,\n      className: style.innerHtmlFor,\n      dangerouslySetInnerHTML: {\n        __html: data.data.post.content\n      }\n    })), __jsx(\"div\", {\n      className: style.writeComment\n    }, data.data.post.commentStatus ? __jsx(Link, {\n      href: `/comments/?id=${data.data.post.id}`,\n      as: `/Comment/${data.data.post.slug}-${data.data.post.id}`\n    }, __jsx(\"a\", null, \" \", data.data.post.commentCount ? data.data.post.commentCount : 0, \" Comment Now \")) : __jsx(Link, null, __jsx(\"a\", null, \" Comment Desible \"))), __jsx(Grid, {\n      className: style.grid,\n      container: true\n    }, __jsx(Grid, {\n      item: true,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      xs: 12\n    }, __jsx(Typography, {\n      className: style.MoreStory,\n      component: \"h4\",\n      variant: \"h3\"\n    }, \"More Story\")), data.data.post.categories.nodes[0].posts.nodes.map(function (data, i) {\n      return 1 === data.id ? '' : __jsx(ReadCard, {\n        key: i,\n        post: data\n      });\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/[Read].js"],"names":["React","Component","Layout","style","Typography","Container","CardMedia","Grid","Card","CardActionArea","CardContent","CardActions","parseISO","format","Avatar","useRouter","client","ReadCard","Link","gql","Head","Read","getInitialProps","pathname","query","asPath","req","res","err","POST_QUERY","slug","id","variables","data","error","console","log","split","pop","render","props","date","post","outerCard","categories","edges","node","name","__html","title","cardBox","author","avatar","url","imageSize","cardBoxAuthorTitle","featuredImage","altText","sourceUrl","cardArticalImage","innerHtmlFor","content","writeComment","commentStatus","commentCount","grid","MoreStory","nodes","posts","map","i"],"mappings":"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","sourcesContent":["\r\n\r\nimport React,{Component} from 'react';\r\nimport Layout from '../Component/Layout'\r\nimport style from '../Component/css/Read.module.scss'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { parseISO, format } from 'date-fns'\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { useRouter } from 'next/router'\r\nimport {client} from \"../Component/apollo-client\";\r\nimport ReadCard from \"../Component/Read/ReadCard\";\r\n\r\n\r\nimport Link from 'next/link';\r\nimport gql from 'graphql-tag';\r\nimport Head from 'next/head'\r\n\r\n\r\n\r\nexport default class Read extends Component {\r\n   \r\n\r\n    static async getInitialProps( { pathname, query, asPath, req, res, err } ) {\r\n                \r\n          const POST_QUERY = gql`query GET_POST($id: ID!) {\r\n            post(id: $id) {\r\n               id\r\n               commentCount\r\n               title\r\n               content\r\n               slug\r\n               date\r\n               commentStatus\r\n               featuredImage {\r\n                  altText\r\n                  sourceUrl\r\n                  title\r\n                \r\n              }\r\n            \r\n               categories {\r\n                 edges {\r\n                   node {\r\n                     name\r\n                   }\r\n                 }\r\n               }\r\n               author {\r\n                 name\r\n                 avatar {\r\n                   url\r\n                 }\r\n               }\r\n               categories {\r\n                nodes {\r\n                  posts {\r\n                    nodes {\r\n                      title\r\n                      id\r\n                      slug\r\n                      featuredImage{\r\n                        sourceUrl\r\n                        altText\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n             }\r\n           }`\r\n        \r\n           if(query.slug){\r\n             const id=query.slug\r\n                try {\r\n                  const res= await client.query(({\r\n                      query:POST_QUERY,\r\n                      variables:{id}\r\n                  }))\r\n                  return { data: res}\r\n\r\n            }\r\n\r\n            catch(error){\r\n              console.log(error)\r\n            }\r\n         } \r\n          else {\r\n\r\n             const id= query.Read.split( '-' ).pop()\r\n             try {\r\n              const res= await client.query(({\r\n                  query:POST_QUERY,\r\n                  variables:{id}\r\n              }))\r\n              return { data: res}\r\n\r\n            }\r\n            catch(error){\r\n              console.log(error)\r\n            }\r\n          }\r\n\r\n\r\n\r\n          try {\r\n              const res= await client.query(({\r\n                  query:POST_QUERY,\r\n                  variables:{id}\r\n              }))\r\n              return { data: res}\r\n\r\n            }\r\n\r\n            catch(error){\r\n              console.log(error)\r\n            }    \r\n    }\r\n\r\n    render() {\r\n      const {data}= this.props;\r\n\r\n      // const postID= data.data.post.id\r\n\r\n  \r\n     console.log(this.props)\r\n          const date = parseISO(data.data.post.date)\r\n            \r\n            return (\r\n              <Layout>  \r\n                  <Head> \r\n                    <link rel='stylesheet' id='wp-block-library-css'  href='https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2' media='all' />\r\n                    <link rel='stylesheet' id='wp-block-library-theme-css'  href='https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2' media='all' />\r\n                    <link rel='stylesheet' id='genericons-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/genericons/genericons.css?ver=3.2' type='text/css' media='all' />\r\n                    <link rel='stylesheet' id='fontawesome-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/framework/font-awesome/css/font-awesome.min.css?ver=1' type='text/css' media='all' />\r\n                    <link rel='stylesheet' id='asalah-plugins-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/pluginstyle.css?ver=1' type='text/css' media='all' />\r\n                    <link rel='stylesheet' id='asalah-style-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/style.css?ver=3.530' type='text/css' media='all' />\r\n                  </Head>\r\n                \r\n                <div className={style.outerCard}>\r\n                      <Typography component=\"h5\" variant=\"subtitle1\">\r\n                          #{data.data.post.categories.edges[0].node.name}\r\n                      </Typography>\r\n                      <Typography component=\"h1\" variant=\"h1\" dangerouslySetInnerHTML={{ __html: data.data.post.title }}>\r\n                      </Typography>           \r\n                      <div className={style.cardBox}>\r\n                          <Avatar alt={data.data.post.author.name} src={data.data.post.author.avatar.url}  className={style.imageSize} />\r\n                          <Typography component=\"h5\" title={data.data.post.author.name} variant=\"h5\" className={style.cardBoxAuthorTitle}>\r\n                             {data.data.post.author.name} \r\n                          </Typography>\r\n                      </div>\r\n                      \r\n                      <CardMedia\r\n                          component=\"img\"\r\n                          alt={data.data.post.featuredImage.node.altText}\r\n                          image={data.data.post.featuredImage.node.sourceUrl}\r\n                          title={data.data.post.featuredImage.node.title}\r\n                          className={style.cardArticalImage}\r\n                      />\r\n                      <time className=\" MuiTypography-root MuiTypography-h5\" dateTime={\"2020-02-18T07:54:18\"} >{format(date, 'LLLL\td, yyyy')}</time>\r\n                      <div key={  data.data.id} className={style.innerHtmlFor} dangerouslySetInnerHTML={{ __html: data.data.post.content }}></div>                  \r\n                  </div>\r\n\r\n               <div className={style.writeComment}>\r\n              {\r\n                (data.data.post.commentStatus)?\r\n                     <Link href={`/comments/?id=${data.data.post.id}`} as={ `/Comment/${data.data.post.slug}-${data.data.post.id}`}> \r\n                    <a> { data.data.post.commentCount? data.data.post.commentCount : 0} Comment Now </a> \r\n                  </Link> :\r\n                <Link> \r\n                    <a> Comment Desible </a> \r\n                </Link>\r\n               }   \r\n              </div>\r\n\r\n              <Grid className={style.grid} container  >\r\n                <Grid item sm={12} md={12} lg={12} xs={12}>   \r\n                        <Typography className={style.MoreStory} component=\"h4\" variant=\"h3\">\r\n                            More Story \r\n                        </Typography>\r\n                </Grid>\r\n                {      \r\n                  data.data.post.categories.nodes[0].posts.nodes.map(function(data, i) {                     \r\n                         return (1 === data.id)? '' : <ReadCard key={i} post={data}/>\r\n                        }    \r\n                  ) \r\n                }               \r\n              </Grid>\r\n            </Layout>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}