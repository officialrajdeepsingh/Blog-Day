{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport { POST_COMMENT } from \"../Component/graphalQurey\";\nimport CommentsCard from '../../Component/CommentsCard/CommentsCard';\nimport style from '../../Component/css/Comments.module.scss';\nimport Head from 'next/head';\nimport gql from 'graphql-tag';\nimport { client } from \"../../Component/apollo-client\";\nimport Link from 'next/link';\nimport CommentEditor from '../../Component/CommentEditor/CommentEditor';\nexport default class Comment extends Component {\n  static async getInitialProps({\n    query\n  }) {\n    const id = query.Comment.split('-').pop();\n    console.log(query, ' form comment');\n\n    try {\n      const res = await client.query({\n        query: POST_QUERY,\n        variables: {\n          id\n        }\n      });\n      return {\n        data: res\n      };\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"meta\", {\n      charset: \"utf-8\"\n    })), __jsx(Container, {\n      className: style.root\n    }, __jsx(\"div\", {\n      className: style.cardInner\n    }, __jsx(Typography, {\n      component: \"h3\",\n      variant: \"h3\",\n      className: style.heading\n    }, \"Write a Comment\"), __jsx(Card, {\n      className: style.cardBox\n    }, __jsx(Avatar, {\n      alt: data.data.post.featuredImage.altText,\n      src: data.data.post.featuredImage.sourceUrl,\n      className: style.imageSize\n    }), __jsx(Link, {\n      href: `/[read]?id=${data.data.post.id}`,\n      as: `${data.data.post.slug}-${data.data.post.id}`\n    }, __jsx(\"a\", {\n      dangerouslySetInnerHTML: {\n        __html: data.data.post.title\n      },\n      target: \"_blank\",\n      className: style.cardBoxTitle\n    })))), __jsx(\"div\", {\n      className: style.editorStyle\n    }, __jsx(CommentEditor, {\n      keyId: data.data.post.id,\n      userid: data.data.post.author.userId,\n      userName: data.data.post.author.name,\n      postid: data.data.post.postId\n    })), data.data.post.comments && data.data.post.comments.nodes.map(ReadComments => {\n      return __jsx(\"div\", {\n        key: ReadComments.id\n      }, __jsx(CommentsCard, {\n        data: ReadComments\n      }), ReadComments.replies && ReadComments.replies.nodes.map(replies => {\n        return __jsx(CommentsCard, {\n          reply: true,\n          data: replies\n        });\n      }));\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/Comment/[Comment].js"],"names":["React","Component","Card","Typography","Container","Avatar","POST_COMMENT","CommentsCard","style","Head","gql","client","Link","CommentEditor","Comment","getInitialProps","query","id","split","pop","console","log","res","POST_QUERY","variables","data","error","render","props","root","cardInner","heading","cardBox","post","featuredImage","altText","sourceUrl","imageSize","slug","__html","title","cardBoxTitle","editorStyle","author","userId","name","postId","comments","nodes","map","ReadComments","replies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {POST_COMMENT} from \"../Component/graphalQurey\"\r\n\r\nimport CommentsCard from '../../Component/CommentsCard/CommentsCard'\r\n\r\nimport style from '../../Component/css/Comments.module.scss'\r\n\r\nimport Head from 'next/head'\r\nimport gql from 'graphql-tag';\r\n\r\nimport {client} from \"../../Component/apollo-client\";\r\nimport Link from 'next/link';\r\nimport CommentEditor from '../../Component/CommentEditor/CommentEditor'\r\n\r\n\r\nexport default class Comment extends Component {\r\n\r\n      \r\n        static async getInitialProps({query}) {\r\n          \r\n          const id = query.Comment.split( '-' ).pop() ;       \r\n          console.log(query, ' form comment')\r\n          try{\r\n            const res= await client.query(({\r\n              query:POST_QUERY,\r\n              variables:{id}\r\n            }))\r\n            return { data: res}\r\n          }\r\n          catch(error){\r\n            console.error(error)\r\n          }\r\n      \r\n       } \r\n\r\n    render() {\r\n        const {data}= this.props\r\n\r\n        return (\r\n             <>\r\n             \r\n                <Head> \r\n                    <meta charset=\"utf-8\" />\r\n                </Head>\r\n                  <Container className={style.root}>\r\n                  \r\n                    <div className={style.cardInner}>\r\n                        <Typography component=\"h3\" variant=\"h3\"  className={style.heading}>\r\n                            Write a Comment\r\n                        </Typography>\r\n                        <Card className={style.cardBox}>\r\n                        <Avatar alt={data.data.post.featuredImage.altText} src={data.data.post.featuredImage.sourceUrl} className={style.imageSize} />\r\n                        <Link href={`/[read]?id=${data.data.post.id}`} as={ `${data.data.post.slug}-${data.data.post.id}`}>\r\n                            <a dangerouslySetInnerHTML={{ __html: data.data.post.title }} target=\"_blank\" className={style.cardBoxTitle}>\r\n                            </a>\r\n                        </Link>\r\n                        </Card>\r\n                    </div>\r\n                  \r\n                    <div className={style.editorStyle}> \r\n\r\n\r\n                      <CommentEditor keyId={data.data.post.id} userid={data.data.post.author.userId } userName={data.data.post.author.name } postid={data.data.post.postId}/>\r\n                    \r\n\r\n                     \r\n                    </div> \r\n                 \r\n                  { \r\n                    data.data.post.comments && data.data.post.comments.nodes.map(\r\n                      (ReadComments)=>{\r\n                          return (\r\n                            <div key={ReadComments.id}>\r\n                              <CommentsCard  data={ReadComments} />\r\n                              { \r\n                                ReadComments.replies && ReadComments.replies.nodes.map(\r\n                                    replies=>{\r\n                                        return <CommentsCard   reply={true} data={replies} />\r\n                                    }\r\n                                  )\r\n                              } \r\n\r\n                            </div>\r\n                          )       \r\n                      }\r\n                   )\r\n                  }\r\n              </Container>\r\n            \r\n             \r\n            </>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}