{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"query GET_POST($id: ID!) {\\n            post(id: $id) {\\n               id\\n               commentCount\\n               title\\n               content\\n               slug\\n               date\\n               commentStatus\\n               featuredImage {\\n                  altText\\n                  sourceUrl\\n                  title\\n                \\n              }\\n            \\n               categories {\\n                 edges {\\n                   node {\\n                     name\\n                   }\\n                 }\\n               }\\n               author {\\n                 name\\n                 avatar {\\n                   url\\n                 }\\n               }\\n               categories {\\n                nodes {\\n                  posts {\\n                    nodes {\\n                      title\\n                      id\\n                      slug\\n                      featuredImage{\\n                        sourceUrl\\n                        altText\\n                      }\\n                    }\\n                  }\\n                }\\n              }\\n             }\\n           }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../Component/Layout';\nimport style from '../Component/css/Read.module.scss';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { parseISO, format } from 'date-fns';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useRouter } from 'next/router';\nimport { client } from \"../Component/apollo-client\";\nimport ReadCard from \"../Component/Read/ReadCard\";\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\n\nvar Read = /*#__PURE__*/function (_Component) {\n  _inherits(Read, _Component);\n\n  var _super = _createSuper(Read);\n\n  function Read() {\n    _classCallCheck(this, Read);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Read, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.props.data; // const postID= data.data.post.id\n\n      console.log(this.props);\n      var date = parseISO(data.data.post.date);\n      return __jsx(Layout, null, __jsx(Head, null, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        id: \"wp-block-library-css\",\n        href: \"https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2\",\n        media: \"all\"\n      }), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        id: \"wp-block-library-theme-css\",\n        href: \"https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2\",\n        media: \"all\"\n      }), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        id: \"genericons-css\",\n        href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/genericons/genericons.css?ver=3.2\",\n        type: \"text/css\",\n        media: \"all\"\n      }), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        id: \"fontawesome-css\",\n        href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/framework/font-awesome/css/font-awesome.min.css?ver=1\",\n        type: \"text/css\",\n        media: \"all\"\n      }), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        id: \"asalah-plugins-css\",\n        href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/pluginstyle.css?ver=1\",\n        type: \"text/css\",\n        media: \"all\"\n      }), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        id: \"asalah-style-css\",\n        href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/style.css?ver=3.530\",\n        type: \"text/css\",\n        media: \"all\"\n      })), __jsx(\"div\", {\n        className: style.outerCard\n      }, __jsx(Typography, {\n        component: \"h5\",\n        variant: \"subtitle1\"\n      }, \"#\", data.data.post.categories.edges[0].node.name), __jsx(Typography, {\n        component: \"h1\",\n        variant: \"h1\",\n        dangerouslySetInnerHTML: {\n          __html: data.data.post.title\n        }\n      }), __jsx(\"div\", {\n        className: style.cardBox\n      }, __jsx(Avatar, {\n        alt: data.data.post.author.name,\n        src: data.data.post.author.avatar.url,\n        className: style.imageSize\n      }), __jsx(Typography, {\n        component: \"h5\",\n        title: data.data.post.author.name,\n        variant: \"h5\",\n        className: style.cardBoxAuthorTitle\n      }, data.data.post.author.name)), __jsx(CardMedia, {\n        component: \"img\",\n        alt: data.data.post.featuredImage.node.altText,\n        image: data.data.post.featuredImage.node.sourceUrl,\n        title: data.data.post.featuredImage.node.title,\n        className: style.cardArticalImage\n      }), __jsx(\"time\", {\n        className: \" MuiTypography-root MuiTypography-h5\",\n        dateTime: \"2020-02-18T07:54:18\"\n      }, format(date, 'LLLL\td, yyyy')), __jsx(\"div\", {\n        key: data.data.id,\n        className: style.innerHtmlFor,\n        dangerouslySetInnerHTML: {\n          __html: data.data.post.content\n        }\n      })), __jsx(\"div\", {\n        className: style.writeComment\n      }, data.data.post.commentStatus ? __jsx(Link, {\n        href: \"/comments/?id=\".concat(data.data.post.id),\n        as: \"/Comment/\".concat(data.data.post.slug, \"-\").concat(data.data.post.id)\n      }, __jsx(\"a\", null, \" \", data.data.post.commentCount ? data.data.post.commentCount : 0, \" Comment Now \")) : __jsx(Link, null, __jsx(\"a\", null, \" Comment Desible \"))), __jsx(Grid, {\n        className: style.grid,\n        container: true\n      }, __jsx(Grid, {\n        item: true,\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xs: 12\n      }, __jsx(Typography, {\n        className: style.MoreStory,\n        component: \"h4\",\n        variant: \"h3\"\n      }, \"More Story\")), data.data.post.categories.nodes[0].posts.nodes.map(function (data, i) {\n        return 1 === data.id ? '' : __jsx(ReadCard, {\n          key: i,\n          post: data\n        });\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var pathname, query, asPath, req, res, err, POST_QUERY, _id, _res, _id2, _res2, _res3;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pathname = _ref.pathname, query = _ref.query, asPath = _ref.asPath, req = _ref.req, res = _ref.res, err = _ref.err;\n              POST_QUERY = gql(_templateObject());\n\n              if (!query.slug) {\n                _context.next = 16;\n                break;\n              }\n\n              _id = query.slug;\n              _context.prev = 4;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(client.query({\n                query: POST_QUERY,\n                variables: {\n                  id: _id\n                }\n              }));\n\n            case 7:\n              _res = _context.sent;\n              return _context.abrupt(\"return\", {\n                data: _res\n              });\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](4);\n              console.log(_context.t0);\n\n            case 14:\n              _context.next = 27;\n              break;\n\n            case 16:\n              _id2 = query.Read.split('-').pop();\n              _context.prev = 17;\n              _context.next = 20;\n              return _regeneratorRuntime.awrap(client.query({\n                query: POST_QUERY,\n                variables: {\n                  id: _id2\n                }\n              }));\n\n            case 20:\n              _res2 = _context.sent;\n              return _context.abrupt(\"return\", {\n                data: _res2\n              });\n\n            case 24:\n              _context.prev = 24;\n              _context.t1 = _context[\"catch\"](17);\n              console.log(_context.t1);\n\n            case 27:\n              _context.prev = 27;\n              _context.next = 30;\n              return _regeneratorRuntime.awrap(client.query({\n                query: POST_QUERY,\n                variables: {\n                  id: id\n                }\n              }));\n\n            case 30:\n              _res3 = _context.sent;\n              return _context.abrupt(\"return\", {\n                data: _res3\n              });\n\n            case 34:\n              _context.prev = 34;\n              _context.t2 = _context[\"catch\"](27);\n              console.log(_context.t2);\n\n            case 37:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[4, 11], [17, 24], [27, 34]], Promise);\n    }\n  }]);\n\n  return Read;\n}(Component);\n\nexport { Read as default };","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/[Read].js"],"names":["React","Component","Layout","style","Typography","Container","CardMedia","Grid","Card","CardActionArea","CardContent","CardActions","parseISO","format","Avatar","useRouter","client","ReadCard","Link","gql","Head","Read","data","props","console","log","date","post","outerCard","categories","edges","node","name","__html","title","cardBox","author","avatar","url","imageSize","cardBoxAuthorTitle","featuredImage","altText","sourceUrl","cardArticalImage","id","innerHtmlFor","content","writeComment","commentStatus","slug","commentCount","grid","MoreStory","nodes","posts","map","i","pathname","query","asPath","req","res","err","POST_QUERY","variables","split","pop"],"mappings":"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","sourcesContent":["\r\n\r\nimport React,{Component} from 'react';\r\nimport Layout from '../Component/Layout'\r\nimport style from '../Component/css/Read.module.scss'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { parseISO, format } from 'date-fns'\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { useRouter } from 'next/router'\r\nimport {client} from \"../Component/apollo-client\";\r\nimport ReadCard from \"../Component/Read/ReadCard\";\r\n\r\n\r\nimport Link from 'next/link';\r\nimport gql from 'graphql-tag';\r\nimport Head from 'next/head'\r\n\r\n\r\n\r\nexport default class Read extends Component {\r\n\r\n  \r\n   \r\n  \r\n\r\n    static async getInitialProps( { pathname, query, asPath, req, res, err } ) {\r\n                \r\n          const POST_QUERY = gql`query GET_POST($id: ID!) {\r\n            post(id: $id) {\r\n               id\r\n               commentCount\r\n               title\r\n               content\r\n               slug\r\n               date\r\n               commentStatus\r\n               featuredImage {\r\n                  altText\r\n                  sourceUrl\r\n                  title\r\n                \r\n              }\r\n            \r\n               categories {\r\n                 edges {\r\n                   node {\r\n                     name\r\n                   }\r\n                 }\r\n               }\r\n               author {\r\n                 name\r\n                 avatar {\r\n                   url\r\n                 }\r\n               }\r\n               categories {\r\n                nodes {\r\n                  posts {\r\n                    nodes {\r\n                      title\r\n                      id\r\n                      slug\r\n                      featuredImage{\r\n                        sourceUrl\r\n                        altText\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n             }\r\n           }`\r\n        \r\n           if(query.slug){\r\n             const id=query.slug\r\n                try {\r\n                  const res= await client.query(({\r\n                      query:POST_QUERY,\r\n                      variables:{id}\r\n                  }))\r\n                  return { data: res}\r\n\r\n            }\r\n\r\n            catch(error){\r\n              console.log(error)\r\n            }\r\n         } \r\n          else {\r\n\r\n             const id= query.Read.split( '-' ).pop()\r\n             try {\r\n              const res= await client.query(({\r\n                  query:POST_QUERY,\r\n                  variables:{id}\r\n              }))\r\n              return { data: res}\r\n\r\n            }\r\n            catch(error){\r\n              console.log(error)\r\n            }\r\n          }\r\n\r\n\r\n\r\n          try {\r\n              const res= await client.query(({\r\n                  query:POST_QUERY,\r\n                  variables:{id}\r\n              }))\r\n              return { data: res}\r\n\r\n            }\r\n\r\n            catch(error){\r\n              console.log(error)\r\n            }    \r\n    }\r\n\r\n    render() {\r\n      const {data}= this.props;\r\n\r\n      // const postID= data.data.post.id\r\n\r\n  \r\n     console.log(this.props)\r\n          const date = parseISO(data.data.post.date)\r\n            \r\n            return (\r\n              <Layout>  \r\n                  <Head> \r\n                    <link rel='stylesheet' id='wp-block-library-css'  href='https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2' media='all' />\r\n                    <link rel='stylesheet' id='wp-block-library-theme-css'  href='https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2' media='all' />\r\n                    <link rel='stylesheet' id='genericons-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/genericons/genericons.css?ver=3.2' type='text/css' media='all' />\r\n                    <link rel='stylesheet' id='fontawesome-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/framework/font-awesome/css/font-awesome.min.css?ver=1' type='text/css' media='all' />\r\n                    <link rel='stylesheet' id='asalah-plugins-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/pluginstyle.css?ver=1' type='text/css' media='all' />\r\n                    <link rel='stylesheet' id='asalah-style-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/style.css?ver=3.530' type='text/css' media='all' />\r\n                  </Head>\r\n                \r\n                <div className={style.outerCard}>\r\n                      <Typography component=\"h5\" variant=\"subtitle1\">\r\n                          #{data.data.post.categories.edges[0].node.name}\r\n                      </Typography>\r\n                      <Typography component=\"h1\" variant=\"h1\" dangerouslySetInnerHTML={{ __html: data.data.post.title }}>\r\n                      </Typography>           \r\n                      <div className={style.cardBox}>\r\n                          <Avatar alt={data.data.post.author.name} src={data.data.post.author.avatar.url}  className={style.imageSize} />\r\n                          <Typography component=\"h5\" title={data.data.post.author.name} variant=\"h5\" className={style.cardBoxAuthorTitle}>\r\n                             {data.data.post.author.name} \r\n                          </Typography>\r\n                      </div>\r\n                      \r\n                      <CardMedia\r\n                          component=\"img\"\r\n                          alt={data.data.post.featuredImage.node.altText}\r\n                          image={data.data.post.featuredImage.node.sourceUrl}\r\n                          title={data.data.post.featuredImage.node.title}\r\n                          className={style.cardArticalImage}\r\n                      />\r\n                      <time className=\" MuiTypography-root MuiTypography-h5\" dateTime={\"2020-02-18T07:54:18\"} >{format(date, 'LLLL\td, yyyy')}</time>\r\n                      <div key={  data.data.id} className={style.innerHtmlFor} dangerouslySetInnerHTML={{ __html: data.data.post.content }}></div>                  \r\n                  </div>\r\n\r\n               <div className={style.writeComment}>\r\n              {\r\n                (data.data.post.commentStatus)?\r\n                     <Link href={`/comments/?id=${data.data.post.id}`} as={ `/Comment/${data.data.post.slug}-${data.data.post.id}`}> \r\n                    <a> { data.data.post.commentCount? data.data.post.commentCount : 0} Comment Now </a> \r\n                  </Link> :\r\n                <Link> \r\n                    <a> Comment Desible </a> \r\n                </Link>\r\n               }   \r\n              </div>\r\n\r\n              <Grid className={style.grid} container  >\r\n                <Grid item sm={12} md={12} lg={12} xs={12}>   \r\n                        <Typography className={style.MoreStory} component=\"h4\" variant=\"h3\">\r\n                            More Story \r\n                        </Typography>\r\n                </Grid>\r\n                {      \r\n                  data.data.post.categories.nodes[0].posts.nodes.map(function(data, i) {                     \r\n                         return (1 === data.id)? '' : <ReadCard key={i} post={data}/>\r\n                        }    \r\n                  ) \r\n                }               \r\n              </Grid>\r\n            </Layout>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}