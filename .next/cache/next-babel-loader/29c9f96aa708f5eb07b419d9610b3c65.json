{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Layout from '../Component/Layout';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from 'next/link';\nimport style from '../Component/css/Signup.module.scss';\nimport signupImage from '../Component/asset/signupImage.png';\nimport MuiAlert from '@material-ui/lab/Alert'; // with SWR and graphql-request\n\nimport { request } from 'graphql-request';\nimport { SIGNUP_MUTATION } from \"../Component/graphalQurey\";\n\nconst signUP = userData => {\n  return request('https://www.rajdeepsingh.dev/graphql', SIGNUP_MUTATION, userData);\n};\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props));\n}\n\nexport default function Signup(props) {\n  const {\n    0: passward,\n    1: setPassward\n  } = useState(\"\");\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState(false);\n  const {\n    0: showconfirmPassword,\n    1: setShowconfirmPassword\n  } = useState(false);\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState(\"\");\n  const {\n    0: matchPassward,\n    1: setMatchPassward\n  } = useState(false);\n  const {\n    0: checkbox,\n    1: setCheckbox\n  } = useState(true);\n  const {\n    0: userName,\n    1: setuserName\n  } = useState(\"\");\n  const {\n    0: gmail,\n    1: setgmail\n  } = useState(\"\");\n  const {\n    0: displayName,\n    1: setDisplayName\n  } = useState(\"\");\n  const [open, setOpen] = React.useState(false); // form  handler function \n\n  const handleChange = event => {\n    setPassward(event.target.value);\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const confirmHandleChange = event => {\n    setConfirmPassword(event.target.value);\n\n    if (passward === event.target.value) {\n      setMatchPassward(false);\n    } else {\n      setMatchPassward(true);\n    }\n  };\n\n  const confirmHandleClickShowPassword = () => {\n    setShowconfirmPassword(!showPassword);\n  };\n\n  const checkboxChange = () => {\n    setCheckbox(!checkbox);\n  };\n\n  const handleMouseDownPassword = () => {};\n\n  const submitFormUser = async event => {\n    event.preventDefault();\n    const data = await signUP({\n      \"userData\": {\n        \"username\": userName,\n        \"email\": gmail,\n        \"password\": passward,\n        \"displayName\": displayName,\n        \"clientMutationId\": \"registerUser\",\n        \"registered\": \"true\"\n      }\n    }); // localStorage.setItem(\"authToken\", data.registerUser.user.jwtAuthToken);\n    // localStorage.setItem(\"userId\", data.registerUser.user.userId);\n    // localStorage.setItem(\"displayName\",data.registerUser.user.username);\n\n    console.log(data, ' submit'); // undefined \n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Container, {\n    className: style.containerBox\n  }, __jsx(Card, {\n    className: style.root\n  }, __jsx(\"div\", {\n    className: style.innerCard\n  }, __jsx(\"div\", {\n    className: style.details\n  }, __jsx(CardContent, {\n    className: style.cardContentInner\n  }, __jsx(Typography, {\n    className: style.typeH5,\n    component: \"h6\",\n    variant: \"h6\"\n  }, \"Welcome Back!\"), __jsx(Typography, {\n    className: style.typeH3,\n    component: \"h3\",\n    variant: \"h2\"\n  }, \"Learn With Me\"), __jsx(\"form\", {\n    //  on Submit handler  \n    onSubmit: submitFormUser,\n    className: style.form,\n    noValidate: true,\n    autoComplete: \"off\"\n  }, __jsx(TextField, {\n    onChange: e => setDisplayName(e.target.value),\n    id: \"fullName\",\n    className: style.textControl,\n    placeholder: \" Exmple:Rajdeep Singh  \",\n    label: \"Full Name\"\n  }), __jsx(TextField, {\n    onChange: e => setuserName(e.target.value),\n    id: \"userName\",\n    className: style.textControl,\n    placeholder: \" Exmple:Officialrajdeepsingh  \",\n    label: \"User Name\"\n  }), __jsx(TextField, {\n    onChange: e => setgmail(e.target.value),\n    id: \"userGmail\",\n    className: style.textControl,\n    placeholder: \" 123@gmail.com  \",\n    label: \"Gmail\"\n  }), __jsx(FormControl, {\n    className: style.textControl\n  }, __jsx(InputLabel, {\n    htmlFor: \"password\"\n  }, \"Password\"), __jsx(Input, {\n    id: \"password\",\n    type: showPassword ? 'text' : 'password',\n    value: passward,\n    onChange: handleChange,\n    placeholder: \"Exmple: Rb@1%2^3*56\",\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword\n    }, showPassword ? __jsx(Visibility, null) : __jsx(VisibilityOff, null)))\n  })), __jsx(FormControl, {\n    className: style.textControl\n  }, __jsx(InputLabel, {\n    htmlFor: \"confirmPassword\"\n  }, \"Confirm Password\"), __jsx(Input, {\n    id: \"confirmPassword\",\n    type: showconfirmPassword ? 'text' : 'password',\n    value: confirmPassword,\n    onChange: confirmHandleChange,\n    error: matchPassward,\n    paceholder: \"Exmple Confirm Passward :  Rb@1%2^3*56\",\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: confirmHandleClickShowPassword,\n      onMouseDown: handleMouseDownPassword\n    }, showPassword ? __jsx(Visibility, null) : __jsx(VisibilityOff, null)))\n  })), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: checkbox,\n      onChange: checkboxChange,\n      name: \"checkBox\",\n      color: \"primary\",\n      className: style.checkBox\n    }),\n    label: \"I Agree to Terms & Conditions \"\n  }), __jsx(Button, {\n    type: \"submit\" //  send data on this button \n    ,\n    className: style.productButton,\n    size: \"small\"\n  }, \"Submit\"))), __jsx(\"div\", {\n    className: style.typeLogin\n  }, __jsx(React.Fragment, null, __jsx(Typography, {\n    className: style.anchorLink,\n    component: \"h6\",\n    variant: \"h6\"\n  }, \"Login With Me\"), __jsx(Link, {\n    href: \"/login\"\n  }, __jsx(\"a\", null, \" Click Here  \"))))), __jsx(CardMedia, {\n    component: \"img\",\n    alt: \"signup Image\",\n    image: signupImage,\n    title: \"signup Now \",\n    className: style.cardImage\n  })))), __jsx(Snackbar, {\n    open: open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 6000,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    severity: \"success\"\n  }, \" Submit\")));\n}","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/signup.js"],"names":["React","useState","Layout","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Container","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","TextField","Visibility","VisibilityOff","FormGroup","FormControlLabel","Checkbox","Link","style","signupImage","MuiAlert","request","SIGNUP_MUTATION","signUP","userData","Alert","props","Signup","passward","setPassward","showPassword","setShowPassword","showconfirmPassword","setShowconfirmPassword","confirmPassword","setConfirmPassword","matchPassward","setMatchPassward","checkbox","setCheckbox","userName","setuserName","gmail","setgmail","displayName","setDisplayName","open","setOpen","handleChange","event","target","value","handleClickShowPassword","confirmHandleChange","confirmHandleClickShowPassword","checkboxChange","handleMouseDownPassword","submitFormUser","preventDefault","data","console","log","handleClose","containerBox","root","innerCard","details","cardContentInner","typeH5","typeH3","form","e","textControl","checkBox","productButton","typeLogin","anchorLink","cardImage","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Layout from '../Component/Layout'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from 'next/link'\r\n\r\n\r\nimport style from '../Component/css/Signup.module.scss'\r\n\r\nimport signupImage from '../Component/asset/signupImage.png'\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n// with SWR and graphql-request\r\nimport { request } from 'graphql-request';\r\nimport {SIGNUP_MUTATION} from \"../Component/graphalQurey\"\r\n\r\n\r\n\r\n  const signUP = (userData) => {\r\n    return  request('https://www.rajdeepsingh.dev/graphql', SIGNUP_MUTATION, userData);\r\n  };\r\n  \r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function Signup(props) {\r\n\r\n    const [passward, setPassward] = useState(\"\");\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showconfirmPassword, setShowconfirmPassword] = useState(false);\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [matchPassward, setMatchPassward] = useState(false);\r\n    const [checkbox, setCheckbox] = useState(true);\r\n    const [userName, setuserName] = useState(\"\");\r\n    const [gmail, setgmail] = useState(\"\");\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n    const [open, setOpen] = React.useState(false);\r\n    \r\n   // form  handler function \r\n     const handleChange = (event) => {\r\n        setPassward( event.target.value )  \r\n      };\r\n    \r\n      const  handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword)\r\n      };\r\n\r\n    const confirmHandleChange = (event) => {\r\n        setConfirmPassword( event.target.value)\r\n       \r\n      if( passward === event.target.value ){\r\n        setMatchPassward(false)\r\n      }else{\r\n        setMatchPassward(true)\r\n      }\r\n\r\n    };\r\n    \r\n   const  confirmHandleClickShowPassword = () => {\r\n       setShowconfirmPassword(!showPassword)\r\n    };\r\n    const checkboxChange=()=>{\r\n        setCheckbox(!checkbox)\r\n    }\r\n\r\n    const handleMouseDownPassword=()=>{\r\n\r\n    }\r\n    const submitFormUser = async (event) => {\r\n            event.preventDefault();\r\n            const  data=   await  signUP({\r\n                    \"userData\":{ \r\n                            \"username\": userName,\r\n                            \"email\": gmail,\r\n                            \"password\": passward,\r\n                            \"displayName\": displayName,\r\n                            \"clientMutationId\": \"registerUser\",\r\n                            \"registered\": \"true\" \r\n                    }\r\n            })\r\n            // localStorage.setItem(\"authToken\", data.registerUser.user.jwtAuthToken);\r\n            // localStorage.setItem(\"userId\", data.registerUser.user.userId);\r\n            // localStorage.setItem(\"displayName\",data.registerUser.user.username);\r\n\r\n                     console.log(data, ' submit' ) // undefined \r\n               \r\n          }\r\n\r\n          const handleClose = () => {      \r\n            setOpen(false);\r\n         };\r\n   \r\n        return (\r\n            <>\r\n                <Container className={style.containerBox}>\r\n                    <Card className={style.root} >\r\n                        <div className={style.innerCard}>\r\n                            <div className={style.details}>\r\n                                <CardContent className={style.cardContentInner}>\r\n                                    <Typography className={style.typeH5} component=\"h6\" variant=\"h6\">\r\n                                        Welcome Back!\r\n                                    </Typography>\r\n                                    <Typography className={style.typeH3} component=\"h3\" variant=\"h2\">\r\n                                        Learn With Me\r\n                                    </Typography>\r\n                                    <form \r\n                                           //  on Submit handler  \r\n                                        onSubmit={submitFormUser}\r\n                                        className={style.form}\r\n                                        noValidate autoComplete=\"off\"\r\n                                      >\r\n                                        <TextField onChange={(e)=>setDisplayName(e.target.value)} id=\"fullName\" className={style.textControl} placeholder=' Exmple:Rajdeep Singh  ' label=\"Full Name\" />\r\n                                        <TextField onChange={(e)=>setuserName(e.target.value)}  id=\"userName\" className={style.textControl} placeholder=' Exmple:Officialrajdeepsingh  ' label=\"User Name\" />\r\n                                        <TextField onChange={(e)=>setgmail(e.target.value)}  id=\"userGmail\" className={style.textControl} placeholder=' 123@gmail.com  ' label=\"Gmail\" />\r\n\r\n                                        <FormControl className={style.textControl} >\r\n                                            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                                            <Input\r\n                                                id=\"password\"\r\n                                                type= {showPassword ? 'text' : 'password'}\r\n                                                value={passward}\r\n                                                onChange={handleChange}\r\n                                                placeholder='Exmple: Rb@1%2^3*56'\r\n                                                endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            aria-label=\"toggle password visibility\"\r\n                                                            onClick={handleClickShowPassword}\r\n                                                            onMouseDown={handleMouseDownPassword}\r\n                                                        >\r\n                                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>\r\n\r\n                                        <FormControl className={style.textControl} >\r\n                                            <InputLabel htmlFor=\"confirmPassword\">Confirm Password</InputLabel>\r\n                                            <Input\r\n                                                id=\"confirmPassword\"\r\n                                                type= {showconfirmPassword ? 'text' : 'password'}\r\n                                                value={confirmPassword}\r\n                                                onChange={confirmHandleChange}\r\n                                                error={matchPassward}\r\n                                                paceholder='Exmple Confirm Passward :  Rb@1%2^3*56'\r\n                                                endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            aria-label=\"toggle password visibility\"\r\n                                                            onClick={confirmHandleClickShowPassword}\r\n                                                            onMouseDown={handleMouseDownPassword}\r\n                                                        >\r\n                                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>\r\n\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                \r\n                                                <Checkbox\r\n                                                    checked={checkbox}\r\n                                                    onChange={checkboxChange}\r\n                                                    name=\"checkBox\"\r\n                                                    color=\"primary\"\r\n                                                    className={ style.checkBox }\r\n                                                />\r\n\r\n                                            }\r\n                                            \r\n                                            label=\"I Agree to Terms & Conditions \"\r\n                                            \r\n                                        />\r\n                                        \r\n                                        <Button type=\"submit\"\r\n                                            //  send data on this button \r\n                                           className={style.productButton} size=\"small\">\r\n                                               Submit\r\n                                    </Button>\r\n                                    </form>\r\n\r\n\r\n                                </CardContent>\r\n                                \r\n\r\n                                <div className={style.typeLogin}> \r\n                                    <>\r\n                                        <Typography className={style.anchorLink}  component=\"h6\" variant=\"h6\">\r\n                                                Login With Me \r\n                                        </Typography>\r\n                                        <Link  href=\"/login\">\r\n                                             <a> Click Here  </a> \r\n                                        </Link>\r\n                                    </>\r\n\r\n                                </div>    \r\n\r\n                            </div>\r\n\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"signup Image\"\r\n                                image={signupImage}\r\n                                title=\"signup Now \"\r\n                                className={style.cardImage}\r\n                            />\r\n\r\n                        </div>\r\n                    </Card>\r\n                </Container>\r\n                <Snackbar open={open} anchorOrigin={ \r\n                {    vertical: 'top', \r\n                    horizontal: 'center' }\r\n                } \r\n                autoHideDuration={6000} onClose={handleClose}>\r\n                  <Alert onClose={handleClose} severity=\"success\">\r\n                        {/* {authdata}  */} Submit \r\n                  </Alert>\r\n              </Snackbar>\r\n            </>\r\n        )\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}