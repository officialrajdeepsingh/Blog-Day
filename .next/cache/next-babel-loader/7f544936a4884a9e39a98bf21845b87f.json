{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { Component, StrictMode } from 'react';\nimport Layout from '../Component/Layout';\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection';\nimport Artical from '../Component/Artical/Artical';\nimport { POST_QUERY } from \"../Component/graphalQurey\"; // import { getServerSideProps } from 'next'\n\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport { client } from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\nexport default function Index(props) {\n  var getData = props.getData; //  var {data} = getData\n  // const {posts} = data\n\n  console.log(getData, ' posts in index ');\n  console.log(posts, ' posts in index posts ');\n  return __jsx(StrictMode, null, __jsx(ErrorBoundaries, null, __jsx(Layout, null, __jsx(Grid, {\n    container: true\n  }))));\n}\n\nIndex.getInitialProps = function _callee(context) {\n  var getData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(client.query({\n            query: POST_QUERY\n          }));\n\n        case 3:\n          getData = _context.sent;\n          return _context.abrupt(\"return\", {\n            props: {\n              getData: getData\n            }\n          });\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/index.js"],"names":["React","Component","StrictMode","Layout","Grid","MainSection","Artical","POST_QUERY","Myapp","Head","client","ErrorBoundaries","Index","props","getData","console","log","posts","getInitialProps","context","query","error"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAAQC,UAAR,QAAyB,2BAAzB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,MAAR,QAAqB,4BAArB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAIA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,MAC5BC,OAD4B,GACjBD,KADiB,CAC5BC,OAD4B,EAEjC;AACA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqB,kBAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EAAmB,wBAAnB;AAEF,SACE,MAAC,UAAD,QACE,MAAC,eAAD,QACI,MAAC,MAAD,QACI,MAAC,IAAD;AAAM,IAAA,SAAS;AAAf,IADJ,CADJ,CADF,CADF;AAsBD;;AAEDL,KAAK,CAACM,eAAN,GAAwB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEIT,MAAM,CAACU,KAAP,CAAc;AAChCA,YAAAA,KAAK,EAACb;AAD0B,WAAd,CAFJ;;AAAA;AAEXO,UAAAA,OAFW;AAAA,2CAOT;AACLD,YAAAA,KAAK,EAAE;AAACC,cAAAA,OAAO,EAAPA;AAAD;AADF,WAPS;;AAAA;AAAA;AAAA;AAYpBC,UAAAA,OAAO,CAACM,KAAR;;AAZoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["\nimport React, { Component , StrictMode } from 'react';\nimport Layout from '../Component/Layout'\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection'\nimport Artical from '../Component/Artical/Artical'\nimport {POST_QUERY} from \"../Component/graphalQurey\"\n// import { getServerSideProps } from 'next'\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport {client} from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\n\n\n\nexport default function Index(props) {\n    var {getData }= props;   \n    //  var {data} = getData\n    // const {posts} = data\n    console.log(getData, ' posts in index ')\n    console.log(posts, ' posts in index posts ')\n\n  return (\n    <StrictMode> \n      <ErrorBoundaries> \n          <Layout >\n              <Grid container >\n                  {\n                    // posts.edges.map(\n                    //   (post, i) =>{\n                    //         if(i === 0 ){\n                    //           return <MainSection  post={post} />\n                    //         } else {\n                    //           return <Artical  post={post} />   \n                    //         }\n                    //     }\n                    // )\n                  }\n              </Grid>\n          </Layout>\n      </ErrorBoundaries>\n  </StrictMode> \n   \n  )\n}\n\nIndex.getInitialProps=  async (context) =>{\n  try{\n       const getData= await client.query(({\n          query:POST_QUERY    \n        })) \n\n\n        return {\n          props: {getData} \n        }\n    }\n    catch(error) {\n    console.error(error )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}