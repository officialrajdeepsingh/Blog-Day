{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../Component/Layout';\nimport style from '../Component/css/Read.module.scss';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { parseISO, format } from 'date-fns';\nimport Avatar from '@material-ui/core/Avatar';\nimport { POST_READ } from \"../Component/graphalQurey\";\nimport { useRouter } from 'next/router';\nimport { client } from \"../Component/apollo-client\";\nimport ReadCard from \"../Component/Read/ReadCard\";\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nexport default function Read(props) {\n  const {\n    data\n  } = props;\n  const postID = data.data.post.id;\n  console.log(props);\n  const date = parseISO(data.data.post.date);\n  return __jsx(Layout, null, __jsx(Head, null, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"wp-block-library-css\",\n    href: \"https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"wp-block-library-theme-css\",\n    href: \"https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"genericons-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/genericons/genericons.css?ver=3.2\",\n    type: \"text/css\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"fontawesome-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/framework/font-awesome/css/font-awesome.min.css?ver=1\",\n    type: \"text/css\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"asalah-plugins-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/pluginstyle.css?ver=1\",\n    type: \"text/css\",\n    media: \"all\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    id: \"asalah-style-css\",\n    href: \"https://www.rajdeepsingh.dev/wp-content/themes/writing/style.css?ver=3.530\",\n    type: \"text/css\",\n    media: \"all\"\n  })));\n}\n\nRead.getInitialProps = async ({\n  pathname,\n  query,\n  asPath,\n  req,\n  res,\n  err\n}) => {\n  if (query.slug) {\n    const id = query.slug;\n\n    try {\n      const getData = await client.query({\n        query: POST_READ,\n        variables: {\n          id\n        }\n      });\n      return {\n        getData\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  } else {\n    const id = query.Read.split('-').pop();\n\n    try {\n      const res = await client.query({\n        query: POST_READ,\n        variables: {\n          id\n        }\n      });\n      return {\n        getData\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  try {\n    const res = await client.query({\n      query: POST_READ,\n      variables: {\n        id\n      }\n    });\n    return {\n      data: res\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/[Read].js"],"names":["React","Component","Layout","style","Typography","Container","CardMedia","Grid","Card","CardActionArea","CardContent","CardActions","parseISO","format","Avatar","POST_READ","useRouter","client","ReadCard","Link","gql","Head","Read","props","data","postID","post","id","console","log","date","getInitialProps","pathname","query","asPath","req","res","err","slug","getData","variables","error","split","pop"],"mappings":"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","sourcesContent":["\r\n\r\nimport React,{Component} from 'react';\r\nimport Layout from '../Component/Layout'\r\nimport style from '../Component/css/Read.module.scss'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { parseISO, format } from 'date-fns'\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {POST_READ} from \"../Component/graphalQurey\"\r\n\r\nimport { useRouter } from 'next/router'\r\nimport {client} from \"../Component/apollo-client\";\r\nimport ReadCard from \"../Component/Read/ReadCard\";\r\n\r\n\r\nimport Link from 'next/link';\r\nimport gql from 'graphql-tag';\r\nimport Head from 'next/head'\r\n\r\n\r\nexport default function Read(props) {\r\n  const {data}= props;\r\n  const postID= data.data.post.id\r\n  console.log(props)\r\n  const date = parseISO(data.data.post.date)\r\n  return (\r\n    <Layout>  \r\n        <Head> \r\n            <link rel='stylesheet' id='wp-block-library-css'  href='https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/style.min.css?ver=5.4.2' media='all' />\r\n            <link rel='stylesheet' id='wp-block-library-theme-css'  href='https://blog.rajdeepsingh.dev/wp-includes/css/dist/block-library/theme.min.css?ver=5.4.2' media='all' />\r\n            <link rel='stylesheet' id='genericons-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/genericons/genericons.css?ver=3.2' type='text/css' media='all' />\r\n            <link rel='stylesheet' id='fontawesome-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/framework/font-awesome/css/font-awesome.min.css?ver=1' type='text/css' media='all' />\r\n            <link rel='stylesheet' id='asalah-plugins-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/pluginstyle.css?ver=1' type='text/css' media='all' />\r\n            <link rel='stylesheet' id='asalah-style-css'  href='https://www.rajdeepsingh.dev/wp-content/themes/writing/style.css?ver=3.530' type='text/css' media='all' />\r\n          </Head>\r\n \r\n        {/* <div className={style.outerCard}>\r\n                <Typography component=\"h5\" variant=\"subtitle1\">\r\n                    #{data.data.post.categories.edges[0].node.name}\r\n                </Typography>\r\n                <Typography component=\"h1\" variant=\"h1\" dangerouslySetInnerHTML={{ __html: data.data.post.title }}>\r\n                </Typography>           \r\n                <div className={style.cardBox}>\r\n                    <Avatar alt={data.data.post.author.name} src={data.data.post.author.avatar.url}  className={style.imageSize} />\r\n                    <Typography component=\"h5\" title={data.data.post.author.name} variant=\"h5\" className={style.cardBoxAuthorTitle}>\r\n                      {data.data.post.author.name} \r\n                    </Typography>\r\n                </div>\r\n                \r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt={data.data.post.featuredImage.node.altText}\r\n                    image={data.data.post.featuredImage.node.sourceUrl}\r\n                    title={data.data.post.featuredImage.node.title}\r\n                    className={style.cardArticalImage}\r\n                />\r\n                <time className=\" MuiTypography-root MuiTypography-h5\" dateTime={\"2020-02-18T07:54:18\"} >{format(date, 'LLLL\td, yyyy')}</time>\r\n                <div key={  data.data.id} className={style.innerHtmlFor} dangerouslySetInnerHTML={{ __html: data.data.post.content }}></div>                  \r\n            </div>\r\n\r\n        <div className={style.writeComment}>\r\n        {\r\n          (data.data.post.commentStatus)?\r\n              <Link href={`/comments/?id=${data.data.post.id}`} as={ `/Comment/${data.data.post.slug}-${data.data.post.id}`}> \r\n              <a> { data.data.post.commentCount? data.data.post.commentCount : 0} Comment Now </a> \r\n            </Link> :\r\n          <Link> \r\n              <a> Comment Desible </a> \r\n          </Link>\r\n        }   \r\n        </div>\r\n\r\n        <Grid className={style.grid} container  >\r\n          <Grid item sm={12} md={12} lg={12} xs={12}>   \r\n                  <Typography className={style.MoreStory} component=\"h4\" variant=\"h3\">\r\n                      More Story \r\n                  </Typography>\r\n          </Grid>\r\n          {      \r\n            data.data.post.categories.nodes[0].posts.nodes.map(function(data, i) {                     \r\n                  return (1 === data.id)? '' : <ReadCard key={i} post={data}/>\r\n                  }    \r\n            ) \r\n          }               \r\n        </Grid> */}\r\n    \r\n    </Layout>\r\n\r\n  )\r\n}\r\n\r\nRead.getInitialProps =  async ({ pathname, query, asPath, req, res, err }) =>{               \r\n        if(query.slug){\r\n          const id=query.slug\r\n              try {\r\n                const getData= await client.query(({\r\n                    query:POST_READ,\r\n                    variables:{id}\r\n                }))\r\n                return { getData}\r\n\r\n          }\r\n\r\n          catch(error){\r\n            console.log(error)\r\n          }\r\n      } \r\n        else {\r\n\r\n          const id= query.Read.split( '-' ).pop()\r\n          try {\r\n            const res= await client.query(({\r\n                query:POST_READ,\r\n                variables:{id}\r\n            }))\r\n            return { getData}\r\n\r\n          }\r\n          catch(error){\r\n            console.log(error)\r\n          }\r\n        }\r\n\r\n      try {\r\n          const res= await client.query(({\r\n              query:POST_READ,\r\n              variables:{id}\r\n          }))\r\n          return { data: res}\r\n\r\n        }\r\n\r\n        catch(error){\r\n          console.log(error)\r\n        }    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}