{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, StrictMode } from 'react';\nimport Layout from '../Component/Layout';\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection';\nimport Artical from '../Component/Artical/Artical';\nimport { POST_QUERY } from \"../Component/graphalQurey\"; // import { getServerSideProps } from 'next'\n\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport { client } from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\nexport default function Index(props) {\n  const {\n    getData\n  } = props; //  var {data} = getData\n  // const {posts} = data\n  //     getData:\n  // data:\n  // posts:\n\n  console.log(getData.data, ' posts in index ');\n  console.log(props, ' posts in index props '); // console.log(posts, ' posts in index posts ')\n\n  return __jsx(StrictMode, null, __jsx(ErrorBoundaries, null, __jsx(Layout, null, __jsx(Grid, {\n    container: true\n  }))));\n}\n\nIndex.getInitialProps = async context => {\n  try {\n    const getData = await client.query({\n      query: POST_QUERY\n    });\n    return {\n      props: {\n        getData\n      }\n    };\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"sources":["D:/Nextjs/old-app/pages/index.js"],"names":["React","Component","StrictMode","Layout","Grid","MainSection","Artical","POST_QUERY","Myapp","Head","client","ErrorBoundaries","Index","props","getData","console","log","data","getInitialProps","context","query","error"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAAQC,UAAR,QAAyB,2BAAzB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,MAAR,QAAqB,4BAArB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAIA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB,CADiC,CAEjC;AACA;AACJ;AACA;AACA;;AACIE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,IAApB,EAA0B,kBAA1B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmB,wBAAnB,EARiC,CASjC;;AAEF,SACE,MAAC,UAAD,QACE,MAAC,eAAD,QACI,MAAC,MAAD,QACI,MAAC,IAAD;AAAM,IAAA,SAAS;AAAf,IADJ,CADJ,CADF,CADF;AAsBD;;AAEDD,KAAK,CAACM,eAAN,GAAwB,MAAOC,OAAP,IAAkB;AACxC,MAAG;AACE,UAAML,OAAO,GAAE,MAAMJ,MAAM,CAACU,KAAP,CAAc;AAChCA,MAAAA,KAAK,EAACb;AAD0B,KAAd,CAArB;AAKC,WAAO;AACLM,MAAAA,KAAK,EAAE;AAACC,QAAAA;AAAD;AADF,KAAP;AAGH,GATH,CAUE,OAAMO,KAAN,EAAa;AACbN,IAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACD;AAEF,CAfD","sourcesContent":["\nimport React, { Component , StrictMode } from 'react';\nimport Layout from '../Component/Layout'\nimport Grid from '@material-ui/core/Grid';\nimport MainSection from '../Component/MainSection/MainSection'\nimport Artical from '../Component/Artical/Artical'\nimport {POST_QUERY} from \"../Component/graphalQurey\"\n// import { getServerSideProps } from 'next'\nimport Myapp from './_app.js';\nimport Head from 'next/head';\nimport {client} from \"../Component/apollo-client\";\nimport ErrorBoundaries from \"../Component/ErrorBoundaries\";\n\n\n\nexport default function Index(props) {\n    const { getData }= props;   \n    //  var {data} = getData\n    // const {posts} = data\n//     getData:\n// data:\n// posts:\n    console.log(getData.data, ' posts in index ')\n    console.log(props, ' posts in index props ')\n    // console.log(posts, ' posts in index posts ')\n\n  return (\n    <StrictMode> \n      <ErrorBoundaries> \n          <Layout >\n              <Grid container >\n                  {\n                    // posts.edges.map(\n                    //   (post, i) =>{\n                    //         if(i === 0 ){\n                    //           return <MainSection  post={post} />\n                    //         } else {\n                    //           return <Artical  post={post} />   \n                    //         }\n                    //     }\n                    // )\n                  }\n              </Grid>\n          </Layout>\n      </ErrorBoundaries>\n  </StrictMode> \n   \n  )\n}\n\nIndex.getInitialProps=  async (context) =>{\n  try{\n       const getData= await client.query(({\n          query:POST_QUERY    \n        })) \n\n\n        return {\n          props: {getData} \n        }\n    }\n    catch(error) {\n    console.error(error )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}